Model: <class 'src.models.pytorch.mpc.mppi.MPPIAgent'>, Env: CarRacing-v1, Date: 03/06/2020 12:22:56
CPU: 8 Core, 5.0GHz, 62.66 GB, Linux-5.3.0-53-generic-x86_64-with-debian-buster-sid
GPU 0: GeForce RTX 2070, 7.98 GB (Driver: 440.64.00)
Git URL: git@github.com:shawnmanuel000/ModelPredictivePathIntegralWithDeepRL.git
Hash: 88fe9409370060f60437a0be3d281da2c1d1e0b7
Branch: master

config: 
   TRIAL_AT = 1000
   SAVE_AT = 1
   SEED = 0
   REG_LAMBDA = 1e-06
   LEARN_RATE = 0.0001
   DISCOUNT_RATE = 0.99
   ADVANTAGE_DECAY = 0.95
   INPUT_LAYER = 512
   ACTOR_HIDDEN = 256
   CRITIC_HIDDEN = 1024
   EPS_MAX = 1.0
   EPS_MIN = 0.1
   EPS_DECAY = 0.99
   NUM_STEPS = 40
   MAX_BUFFER_SIZE = 1000000
   REPLAY_BATCH_SIZE = 5000
   TARGET_UPDATE_RATE = 0.0004
   BATCH_SIZE = 250
   DYN_EPOCHS = 10
   TRAIN_EVERY = 1000
   ENV_MODEL = dfrntl
   MPC = 
      NSAMPLES = 100
      HORIZON = 40
      LAMBDA = 0.1
      CONTROL_FREQ = 1
   REWARD_MODEL = src.envs.CarRacing.objective.cost:CostModel
   DYNAMICS_SPEC = src.envs.CarRacing.car_racing:CarRacing
   dynamics_size = 13
   state_size = (80,)
   action_size = (3,)
   env_name = CarRacing-v1
   rank = 0
   size = 17
   split = 17
   model = mppi
   framework = pt
   train_prop = 1.0
   tcp_ports = [9000, 9001, 9002, 9003, 9004, 9005, 9006, 9007, 9008, 9009, 9010, 9011, 9012, 9013, 9014, 9015, 9016]
   tcp_rank = 0
   num_envs = 1
   nsteps = 500000
   render = False
   trial = False
   icm = False
   rs = False
   DYN = 
      REG_LAMBDA = 1e-06
      FACTOR = 0.5
      PATIENCE = 5
      LEARN_RATE = 0.001
      TRANSITION_HIDDEN = 256
      REWARD_HIDDEN = 256
      BETA_DYN = 0.1
      BETA_DOT = 1
      BETA_DDOT = 1,
num_envs: 16,
envs: <src.utils.envs.EnvManager object at 0x7f15124ac990> 
	env = <GymEnv<CarRacing<CarRacing-v1>>> 
		env = <CarRacing<CarRacing-v1>> 
			channel = <mlagents_envs.side_channel.engine_configuration_channel.EngineConfigurationChannel object at 0x7f151ea2d290>
			scale_sim = <function CarRacing.__init__.<locals>.<lambda> at 0x7f151241b7a0>
			env = <UnityToGymWrapper instance> 
				visual_obs = None
				game_over = False
				name = CarBehavior?team=0
				group_spec = BehaviorSpec(observation_shapes=[(30,)], action_type=<ActionType.CONTINUOUS: 1>, action_shape=3)
				use_visual = False
				uint8_visual = False
			cost_model = <src.envs.CarRacing.objective.cost.CostModel object at 0x7f1512460d90> 
				track = <src.envs.CarRacing.objective.track.Track object at 0x7f151241d9d0> 
					track = <list len=500>
					X = (1.540585208684206, 1.5814536064863205, 1.6016383588314056, 1.6350171357393264, 1.6559478223323822, 1.6717498254776002, 1.709812204837799, 1.7354034245014192, 1.7725858569145203, 1.8077154874801635, 1.958074402809143, 2.0178433418273927, 2.1851138830184937, 2.258661150932312, 2.3439700841903686, 2.452700424194336, 2.586679172515869, 2.782884216308594, 3.047244071960449, 3.4783129692077637, 3.9734771251678467, 4.596014499664307, 5.29957389831543, 6.05716609954834, 6.824328422546387, 7.646727561950684, 8.59219741821289, 9.675070762634277, 10.77119255065918, 11.868535041809082, 12.83842658996582, 13.727555274963379, 14.569844245910645, 15.391722679138184, 16.204023361206055, 17.02372169494629, 17.626384735107422, 18.072078704833984, 18.462026596069336, 18.803436279296875, 19.08125877380371, 19.200590133666992, 19.074377059936523, 18.833162307739258, 18.582487106323242, 18.339160919189453, 17.97744369506836, 17.59515380859375, 17.09140968322754, 16.50218391418457, 15.817791938781738, 14.983868598937988, 13.986822128295898, 12.817933082580566, 11.528505325317383, 10.241579055786133, 8.946599960327148, 7.588953971862793, 6.2032341957092285, 4.799948692321777, 3.3720505237579346, 1.9454675912857056, 0.4815756678581238, -0.9242660999298096, -2.3082480430603027, -3.7190709114074707, -5.090760231018066, -6.490819931030273, -7.933252811431885, -9.48039722442627, -11.141877174377441, -12.927711486816406, -14.796602249145508, -16.603300094604492, -18.390233993530273, -20.1385498046875, -21.805997848510742, -23.41408920288086, -25.02754783630371, -26.801597595214844, -28.776451110839844, -30.972705841064453, -33.385520935058594, -35.90762710571289, -38.527618408203125, -41.362369537353516, -44.435585021972656, -47.831398010253906, -51.587188720703125, -55.642662048339844, -59.980804443359375, -64.55036163330078, -69.1060562133789, -73.4732666015625, -77.65788269042969, -81.6474380493164, -85.45370483398438, -89.12055206298828, -92.67816925048828, -96.15220642089844, -99.54827117919922, -102.86875915527344, -106.01786804199219, -109.03597259521484, -111.96282958984375, -114.75870513916016, -117.48453521728516, -120.2335205078125, -123.01750946044922, -125.81232452392578, -128.56246948242188, -131.20936584472656, -133.767333984375, -136.21359252929688, -138.6573486328125, -141.0603485107422, -143.3613739013672, -145.4899444580078, -147.5723114013672, -149.41514587402344, -150.9908905029297, -152.32089233398438, -153.6006622314453, -154.83030700683594, -156.0063018798828, -157.14691162109375, -158.23680114746094, -159.30880737304688, -160.30152893066406, -161.2411651611328, -162.03582763671875, -162.72186279296875, -163.28753662109375, -163.81460571289062, -164.31549072265625, -164.78814697265625, -165.1201171875, -165.26596069335938, -165.24961853027344, -165.20376586914062, -165.07931518554688, -165.0469512939453, -165.03262329101562, -164.86660766601562, -164.62220764160156, -164.3842315673828, -164.145263671875, -163.90011596679688, -163.64981079101562, -163.3218231201172, -162.726318359375, -161.83493041992188, -160.71856689453125, -159.4139862060547, -157.9736328125, -156.54212951660156, -155.10464477539062, -153.63636779785156, -152.13641357421875, -150.6412811279297, -149.1659698486328, -147.64437866210938, -146.01336669921875, -144.21286010742188, -142.3518829345703, -140.49502563476562, -138.6591796875, -136.8135986328125, -134.9413604736328, -132.9547882080078, -130.7132110595703, -128.1597137451172, -125.3279037475586, -122.26266479492188, -118.97386932373047, -115.49871826171875, -111.90750122070312, -108.16539764404297, -104.34297180175781, -100.58757781982422, -96.96247863769531, -93.51396942138672, -90.1981201171875, -86.93607330322266, -83.70171356201172, -80.58210754394531, -77.49177551269531, -74.4620132446289, -71.53809356689453, -68.60317993164062, -65.52932739257812, -62.46957778930664, -59.48895263671875, -56.56187057495117, -53.813289642333984, -51.1711311340332, -48.648197174072266, -46.242332458496094, -43.94118118286133, -41.766075134277344, -39.70472717285156, -37.813140869140625, -36.01365280151367, -34.269657135009766, -32.50520706176758, -30.680166244506836, -28.837051391601562, -27.001256942749023, -25.25333023071289, -23.701873779296875, -22.668081283569336, -22.199195861816406, -22.169893264770508, -22.46630859375, -23.134033203125, -24.32797622680664, -26.001781463623047, -27.869766235351562, -29.80392074584961, -31.775949478149414, -33.793365478515625, -35.771907806396484, -37.70563888549805, -39.61886215209961, -41.516029357910156, -43.41127014160156, -45.27768325805664, -47.11109924316406, -48.94091796875, -50.77583694458008, -52.619163513183594, -54.48332977294922, -56.314815521240234, -58.103755950927734, -59.823333740234375, -61.56585693359375, -63.30061340332031, -64.97642517089844, -66.51130676269531, -67.94270324707031, -69.3357925415039, -70.66708374023438, -71.93402099609375, -73.18978118896484, -74.31753540039062, -75.23255920410156, -75.95966339111328, -76.61920166015625, -77.26768493652344, -77.9359130859375, -78.5946273803711, -79.26289367675781, -79.79534912109375, -80.2015380859375, -80.60335540771484, -81.02714538574219, -81.53772735595703, -82.04193878173828, -82.53047180175781, -83.04158020019531, -83.56088256835938, -84.14714813232422, -84.81393432617188, -85.55133056640625, -86.36656188964844, -87.24837493896484, -88.13751983642578, -88.99240112304688, -89.81124877929688, -90.60415649414062, -91.33631896972656, -92.02133178710938, -92.65229034423828, -93.23121643066406, -93.7853012084961, -94.3372573852539, -94.88070678710938, -95.41710662841797, -95.84803771972656, -96.24778747558594, -96.6568374633789, -97.0496826171875, -97.41992950439453, -97.77052307128906, -97.91485595703125, -97.96147155761719, -97.87026977539062, -97.53227233886719, -96.85386657714844, -95.81302642822266, -94.54135131835938, -93.15739440917969, -91.603271484375, -89.95466613769531, -88.35015106201172, -86.80291748046875, -85.39144134521484, -84.07344055175781, -82.86149597167969, -81.5972671508789, -80.11182403564453, -78.36345672607422, -76.40621948242188, -74.32894134521484, -72.0761489868164, -69.69659423828125, -67.17849731445312, -64.48152160644531, -61.61235046386719, -58.499427795410156, -55.10073471069336, -51.55522918701172, -47.74736785888672, -43.832923889160156, -39.801971435546875, -35.743858337402344, -31.80649757385254, -28.028738021850586, -24.38759994506836, -20.836519241333008, -17.374597549438477, -14.002902030944824, -10.617079734802246, -7.34421443939209, -4.187110424041748, -1.115414023399353, 2.037353277206421, 5.401520252227783, 8.870983123779297, 12.423381805419922, 16.180818557739258, 20.157392501831055, 24.33769989013672, 28.77823829650879, 33.3828010559082, 38.12346267700195, 42.767642974853516, 47.21396255493164, 51.497074127197266, 55.640106201171875, 59.61445999145508, 63.45794677734375, 67.16992950439453, 70.71627044677734, 74.12809753417969, 77.53622436523438, 80.97876739501953, 84.45626068115234, 87.9986572265625, 91.61026000976562, 95.1865234375, 98.68260192871094, 102.08172607421875, 105.37554168701172, 108.5978012084961, 111.72406005859375, 114.72969818115234, 117.6103515625, 120.28418731689453, 122.77039337158203, 125.10813903808594, 127.35991668701172, 129.5707550048828, 131.73577880859375, 133.8451385498047, 135.88076782226562, 137.81361389160156, 139.69195556640625, 141.56494140625, 143.51321411132812, 145.43582153320312, 147.37954711914062, 149.30592346191406, 151.1349334716797, 152.76832580566406, 154.18382263183594, 155.40008544921875, 156.48155212402344, 157.39840698242188, 158.19866943359375, 158.91281127929688, 159.4974822998047, 160.02337646484375, 160.31883239746094, 160.23129272460938, 159.7694854736328, 159.0675506591797, 158.11312866210938, 157.08311462402344, 155.8784942626953, 154.47816467285156, 152.8489990234375, 151.00660705566406, 149.11109924316406, 147.24368286132812, 145.35427856445312, 143.4554443359375, 141.39073181152344, 139.07090759277344, 136.57705688476562, 134.08177185058594, 131.63348388671875, 129.23263549804688, 126.91446685791016, 124.63007354736328, 122.27965545654297, 119.90943145751953, 117.51732635498047, 115.1493148803711, 112.83964538574219, 110.53994750976562, 108.22462463378906, 105.85285949707031, 103.4562759399414, 101.13794708251953, 98.82323455810547, 96.44384765625, 93.94629669189453, 91.3570556640625, 88.73168182373047, 86.05917358398438, 83.26211547851562, 80.25263214111328, 77.10718536376953, 73.97905731201172, 70.96484375, 68.1133804321289, 65.44701385498047, 62.890159606933594, 60.41355514526367, 57.95263671875, 55.59248352050781, 53.20044708251953, 50.7462272644043, 48.28958511352539, 45.88505935668945, 43.5562744140625, 41.31084442138672, 39.171634674072266, 37.183380126953125, 35.43268966674805, 33.800804138183594, 32.20466613769531, 30.66669273376465, 29.13826560974121, 27.552635192871094, 25.97852325439453, 24.294662475585938, 22.565439224243164, 20.874217987060547, 19.30082893371582, 17.831933975219727, 16.408084869384766, 15.044317245483398, 13.766607284545898, 12.577005386352539, 11.475253105163574, 10.496495246887207, 9.622332572937012, 8.769275665283203, 7.927954196929932, 7.112521648406982, 6.322704315185547, 5.563619136810303, 4.829586982727051, 4.113427639007568, 3.3697121143341064, 2.5567243099212646, 1.7977246046066284, 1.0246542692184448, 0.2572939395904541, -0.4480553865432739, -1.1242897510528564, -1.6556841135025024, -2.0525705814361572, -2.214649200439453, -2.169621467590332, -2.035892963409424, -1.9102517366409302, -1.7909443378448486, -1.7162281274795532, -1.651557445526123, -1.5775796175003052, -1.5097243785858154, -1.4451829195022583, -1.3808107376098633, -1.3076838254928589, -1.1195673942565918, -0.8252816200256348, -0.5349398255348206, -0.2580118477344513, 0.009828831069171429, 0.2716897428035736, 0.5349469780921936, 0.7902784943580627, 1.052398443222046, 1.31592857837677, 1.570581078529358, 1.6137370109558105, 1.6365979194641114)
					Z = (-0.8819639682769775, -0.8812801241874695, -0.8804802298545837, -0.8791921734809875, -0.8777425289154053, -0.8758563995361328, -0.873963475227356, -0.8539403676986694, -0.7802032232284546, -0.761174201965332, -0.7716957926750183, -0.8395041823387146, -0.8772552609443665, -0.8344407081604004, -0.788372814655304, -0.80742347240448, -0.8527643084526062, -0.8346409797668457, -0.824370265007019, -0.8134136199951172, -0.7967275381088257, -0.7752544283866882, -0.7417746782302856, -0.6927484273910522, -0.633834719657898, -0.5747796297073364, -0.5113369226455688, -0.4433113932609558, -0.3737497925758362, -0.3008161187171936, -0.2312106341123581, -0.16523221135139465, -0.09990986436605453, -0.033577218651771545, 0.03842548280954361, 0.11881522089242935, 0.1981208622455597, 0.28177762031555176, 0.38250869512557983, 0.5017393231391907, 0.625041127204895, 0.7394312620162964, 0.8367793560028076, 0.9279725551605225, 1.0242633819580078, 1.1258037090301514, 1.2272775173187256, 1.3421326875686646, 1.4506069421768188, 1.561546802520752, 1.6706804037094116, 1.7743912935256958, 1.8515067100524902, 1.9097793102264404, 1.948763370513916, 1.9814872741699219, 2.0233898162841797, 2.07637095451355, 2.132861375808716, 2.17509126663208, 2.2180161476135254, 2.274773597717285, 2.3546767234802246, 2.4420950412750244, 2.5328733921051025, 2.6344215869903564, 2.7358694076538086, 2.8366494178771973, 2.9418249130249023, 3.0620920658111572, 3.1827614307403564, 3.30625581741333, 3.427833080291748, 3.5489587783813477, 3.675954818725586, 3.79117488861084, 3.901960849761963, 4.005653381347656, 4.107993125915527, 4.2158284187316895, 4.328779220581055, 4.445080280303955, 4.569532871246338, 4.690032005310059, 4.799752712249756, 4.872299671173096, 4.92843770980835, 4.985036849975586, 5.057000637054443, 5.13352108001709, 5.213327884674072, 5.295718193054199, 5.3766703605651855, 5.451817512512207, 5.519579887390137, 5.582165718078613, 5.639312267303467, 5.692175388336182, 5.7414727210998535, 5.787367820739746, 5.830183506011963, 5.869744300842285, 5.905086994171143, 5.936120986938477, 5.963281154632568, 5.987318992614746, 6.008669376373291, 6.027542591094971, 6.044310569763184, 6.057828903198242, 6.067286968231201, 6.074985504150391, 6.081448554992676, 6.086737155914307, 6.091536998748779, 6.096595764160156, 6.1012773513793945, 6.104137420654297, 6.10720682144165, 6.105283260345459, 6.09289026260376, 6.069871425628662, 6.042582988739014, 6.011574745178223, 5.977062702178955, 5.945542812347412, 5.9195661544799805, 5.900696277618408, 5.875031471252441, 5.850343227386475, 5.822032451629639, 5.787215232849121, 5.749323844909668, 5.708043575286865, 5.672667503356934, 5.640613079071045, 5.58774995803833, 5.510519504547119, 5.4132280349731445, 5.318352222442627, 5.21757173538208, 5.129578113555908, 5.049224376678467, 4.955892086029053, 4.855170726776123, 4.759181022644043, 4.6699957847595215, 4.590251922607422, 4.507761478424072, 4.420248508453369, 4.298507213592529, 4.1367998123168945, 3.954977035522461, 3.7536673545837402, 3.5393548011779785, 3.336235761642456, 3.13871431350708, 2.941469192504883, 2.743802785873413, 2.5500059127807617, 2.362222671508789, 2.172161817550659, 1.9712504148483276, 1.7527763843536377, 1.5335578918457031, 1.3216581344604492, 1.11974036693573, 0.924856424331665, 0.7362942099571228, 0.548167884349823, 0.3510936498641968, 0.14911779761314392, -0.04503828287124634, -0.22794248163700104, -0.3905165493488312, -0.5209499597549438, -0.6174218654632568, -0.6916936039924622, -0.7458155751228333, -0.7768694162368774, -0.7899942994117737, -0.7893635630607605, -0.7789414525032043, -0.7635725736618042, -0.7461717128753662, -0.7283236980438232, -0.704211413860321, -0.6622856855392456, -0.5993924140930176, -0.5216199159622192, -0.426088809967041, -0.3150973916053772, -0.1974087506532669, -0.07835512608289719, 0.03133012354373932, 0.13556505739688873, 0.24022513628005981, 0.3493971824645996, 0.45991453528404236, 0.5715771317481995, 0.6827750205993652, 0.7940959930419922, 0.907843291759491, 1.025125503540039, 1.148614764213562, 1.2811535596847534, 1.417541265487671, 1.5532535314559937, 1.6824359893798828, 1.7986339330673218, 1.8819316625595093, 1.9304401874542236, 1.9543043375015259, 1.9636659622192383, 1.9588732719421387, 1.916387915611267, 1.8345577716827393, 1.7349056005477905, 1.6296110153198242, 1.5208213329315186, 1.405418872833252, 1.2866981029510498, 1.16438889503479, 1.0394600629806519, 0.9107307195663452, 0.7798608541488647, 0.6512886881828308, 0.5262399315834045, 0.4030036926269531, 0.2815271019935608, 0.16398224234580994, 0.05072043836116791, -0.05590145289897919, -0.15327762067317963, -0.24135041236877441, -0.3243723213672638, -0.3988741636276245, -0.4620799124240875, -0.542617678642273, -0.646656334400177, -0.7287228107452393, -0.7844877243041992, -0.806078314781189, -0.8148013949394226, -0.8116025924682617, -0.8039451837539673, -0.7978506088256836, -0.8006065487861633, -0.8066939115524292, -0.8129818439483643, -0.8215823173522949, -0.8290983438491821, -0.8362972736358643, -0.8428731560707092, -0.8489797711372375, -0.8558133840560913, -0.8626493811607361, -0.8682581186294556, -0.8741699457168579, -0.879978597164154, -0.8859436511993408, -0.8909560441970825, -0.8937748670578003, -0.8939367532730103, -0.8897822499275208, -0.8787690997123718, -0.8593403697013855, -0.8307321667671204, -0.8021003603935242, -0.7821503281593323, -0.7700151801109314, -0.7592963576316833, -0.7492351531982422, -0.7390634417533875, -0.7314242720603943, -0.7212424278259277, -0.7080341577529907, -0.6888165473937988, -0.66937655210495, -0.6463529467582703, -0.6128187775611877, -0.5654257535934448, -0.5037499666213989, -0.42715343832969666, -0.34471648931503296, -0.25006303191185, -0.14578062295913696, -0.03818090260028839, 0.0759134441614151, 0.21288788318634033, 0.35622480511665344, 0.515775203704834, 0.6532223224639893, 0.7738814949989319, 0.8932506442070007, 1.0421302318572998, 1.2146294116973877, 1.385721206665039, 1.5515326261520386, 1.7406084537506104, 1.9566478729248047, 2.214561700820923, 2.5135207176208496, 2.8274102210998535, 3.160696268081665, 3.501220941543579, 3.8431997299194336, 4.200472354888916, 4.574350357055664, 4.894090175628662, 5.0936360359191895, 5.216364860534668, 5.390469074249268, 5.586197853088379, 5.784314155578613, 5.985593795776367, 6.1828765869140625, 6.373883247375488, 6.556783199310303, 6.733740329742432, 6.906088829040527, 7.071183204650879, 7.233142852783203, 7.3868231773376465, 7.530625343322754, 7.665377616882324, 7.797634124755859, 7.930730819702148, 8.059279441833496, 8.180848121643066, 8.296680450439453, 8.406368255615234, 8.505520820617676, 8.589674949645996, 8.655287742614746, 8.70052719116211, 8.722027778625488, 8.70865249633789, 8.652679443359375, 8.560135841369629, 8.443024635314941, 8.307100296020508, 8.149582862854004, 7.971302032470703, 7.780361175537109, 7.575259685516357, 7.355491638183594, 7.124767303466797, 6.885737419128418, 6.638427257537842, 6.395895481109619, 6.166090488433838, 5.953654766082764, 5.738729953765869, 5.529703140258789, 5.342148303985596, 5.179572105407715, 5.024766445159912, 4.851255416870117, 4.646117210388184, 4.430662155151367, 4.217848777770996, 4.0131144523620605, 3.7878849506378174, 3.559556245803833, 3.3353841304779053, 3.1190574169158936, 2.9180359840393066, 2.7267343997955322, 2.5381720066070557, 2.3227102756500244, 2.0959630012512207, 1.8809078931808472, 1.6847819089889526, 1.495663046836853, 1.3055880069732666, 1.1171165704727173, 0.9520562887191772, 0.8042331337928772, 0.681337833404541, 0.5795820951461792, 0.5025584101676941, 0.46133852005004883, 0.4328932762145996, 0.3858243227005005, 0.3234015107154846, 0.2624247372150421, 0.19709435105323792, 0.15313704311847687, 0.11826862394809723, 0.08544927090406418, 0.04712279140949249, 0.0015682056546211243, -0.026410788297653198, -0.03486667573451996, -0.027389593422412872, -0.0065015703439712524, 0.0059362053871154785, 0.002570606768131256, -0.006264716386795044, -0.013282939791679382, -0.018584154546260834, -0.022372961044311523, -0.0232115238904953, -0.02133723348379135, -0.030498042702674866, -0.057736508548259735, -0.09805164486169815, -0.13833804428577423, -0.17615404725074768, -0.21290594339370728, -0.24737012386322021, -0.26589956879615784, -0.2773838937282562, -0.2822290062904358, -0.2861996591091156, -0.2940981388092041, -0.2990141808986664, -0.3035801351070404, -0.3050832152366638, -0.3049992024898529, -0.30373987555503845, -0.3003387153148651, -0.29614898562431335, -0.2985635995864868, -0.31389492750167847, -0.34401920437812805, -0.3844596743583679, -0.4300534129142761, -0.4741150140762329, -0.5105020999908447, -0.5354415774345398, -0.552415132522583, -0.5600359439849854, -0.5654557943344116, -0.5681073665618896, -0.5666967630386353, -0.5622239112854004, -0.5597591996192932, -0.5650179386138916, -0.579081654548645, -0.5969113707542419, -0.6101321578025818, -0.622231125831604, -0.6340838074684143, -0.6458472609519958, -0.657522976398468, -0.6685013771057129, -0.6801296472549438, -0.6912583708763123, -0.7032382488250732, -0.7155491709709167, -0.7265709042549133, -0.7348979115486145, -0.7445682287216187, -0.7536845207214355, -0.761847198009491, -0.7706142067909241, -0.7806366682052612, -0.7898868322372437, -0.7978246212005615, -0.8051745295524597, -0.8114349842071533, -0.8171375393867493, -0.821597158908844, -0.8264663219451904, -0.8312869071960449, -0.8363567590713501, -0.8399266004562378, -0.8434712290763855, -0.8482410907745361, -0.8517320156097412, -0.8557907342910767, -0.8605977296829224, -0.864855170249939, -0.8680832982063293, -0.869952917098999, -0.8720065951347351, -0.8741781711578369, -0.8759156465530396, -0.8775535821914673, -0.8793764710426331, -0.8817098140716553, -0.8832718729972839, -0.8847836852073669, -0.8870889544487, -0.8891378045082092, -0.8896875977516174, -0.8895387649536133, -0.8889559507369995, -0.8881706595420837, -0.8874912261962891, -0.8865614533424377, -0.8851791024208069, -0.8832001686096191, -0.8809881806373596, -0.8781297206878662, -0.8746054172515869, -0.8718098402023315, -0.8688086271286011)
					Y = (0.24426956474781036, 0.4990326166152954, 0.819128692150116, 1.153626799583435, 1.5026447772979736, 1.8859440088272095, 2.373248815536499, 2.968236207962036, 3.61586332321167, 4.355114459991455, 5.173743724822998, 6.038478374481201, 6.951005458831787, 7.899267673492432, 8.918261528015137, 10.051026344299316, 11.312947273254395, 12.90755558013916, 14.871548652648926, 17.198680877685547, 19.908754348754883, 22.898487091064453, 26.10063934326172, 29.397844314575195, 32.636375427246094, 35.74137878417969, 38.707183837890625, 41.484439849853516, 44.07951736450195, 46.60736846923828, 49.15201187133789, 51.65317916870117, 54.06341552734375, 56.4561882019043, 58.852813720703125, 61.29132080078125, 63.84211730957031, 66.49172973632812, 69.07376861572266, 71.62057495117188, 74.08918762207031, 76.49169158935547, 78.78299713134766, 80.95753479003906, 83.06936645507812, 85.1029281616211, 87.12429809570312, 89.12969970703125, 91.03314971923828, 92.87902069091797, 94.55635070800781, 96.09061431884766, 97.33863830566406, 98.26770782470703, 98.91900634765625, 99.34143829345703, 99.79500579833984, 100.22048950195312, 100.46652221679688, 100.50714111328125, 100.43055725097656, 100.3218765258789, 100.27439880371094, 100.24840545654297, 100.22171020507812, 100.19712829589844, 100.16851043701172, 100.09687042236328, 100.02641296386719, 99.95970153808594, 99.8285140991211, 99.58265686035156, 99.25724792480469, 98.94861602783203, 98.7610855102539, 98.6032943725586, 98.43841552734375, 98.27819061279297, 98.11662292480469, 97.93367004394531, 97.72758483886719, 97.4378662109375, 97.10028839111328, 96.74153900146484, 96.36189270019531, 95.95005798339844, 95.50723266601562, 95.01679229736328, 94.47090911865234, 93.8803482055664, 93.24833679199219, 92.5796127319336, 91.90768432617188, 91.14244079589844, 90.31917572021484, 89.48597717285156, 88.64861297607422, 87.82418823242188, 87.01628875732422, 86.22871398925781, 85.56230163574219, 84.96900177001953, 84.57625579833984, 84.36016082763672, 84.20700073242188, 84.08193969726562, 83.97764587402344, 83.87611389160156, 83.92423248291016, 84.14193725585938, 84.41809844970703, 84.70330810546875, 85.00025939941406, 85.29436492919922, 85.68895721435547, 86.27693176269531, 87.06804656982422, 88.0323715209961, 89.15747833251953, 90.61774444580078, 92.43035125732422, 94.46464538574219, 96.57106018066406, 98.82080078125, 101.0973129272461, 103.33666229248047, 105.50848388671875, 107.6570053100586, 109.891357421875, 112.15137481689453, 114.42011260986328, 116.68489074707031, 118.90473175048828, 121.11170959472656, 123.25049591064453, 125.32403564453125, 127.53121185302734, 129.89825439453125, 132.2855987548828, 134.6158905029297, 136.92697143554688, 139.15802001953125, 141.3134002685547, 143.4351806640625, 145.5569305419922, 147.65158081054688, 149.7096405029297, 151.71261596679688, 153.65261840820312, 155.51608276367188, 157.31924438476562, 159.11117553710938, 160.7533416748047, 162.2732696533203, 163.74002075195312, 165.19287109375, 166.6624298095703, 168.05679321289062, 169.36721801757812, 170.6645965576172, 171.94862365722656, 173.23680114746094, 174.46946716308594, 175.60227966308594, 176.68606567382812, 177.7667236328125, 178.8304901123047, 179.89537048339844, 180.9698944091797, 182.1023712158203, 183.38099670410156, 184.83396911621094, 186.4405059814453, 188.17733764648438, 190.03277587890625, 191.99041748046875, 193.9769287109375, 195.76626586914062, 197.2998809814453, 198.64427185058594, 199.84442138671875, 201.0236358642578, 202.19769287109375, 203.31591796875, 204.40118408203125, 205.4407196044922, 206.46392822265625, 207.45944213867188, 208.4150848388672, 209.36993408203125, 210.36520385742188, 211.35165405273438, 212.19497680664062, 212.80360412597656, 212.99081420898438, 212.8595428466797, 212.59893798828125, 212.30372619628906, 211.88113403320312, 211.2249298095703, 210.27505493164062, 209.16802978515625, 207.95042419433594, 206.6737060546875, 205.3536376953125, 203.98805236816406, 202.4827117919922, 200.79603576660156, 198.84075927734375, 196.52613830566406, 193.94662475585938, 191.1892852783203, 188.33187866210938, 185.4967803955078, 182.7758331298828, 180.3319091796875, 178.08534240722656, 175.87472534179688, 173.57350158691406, 171.1052703857422, 168.51658630371094, 165.9554443359375, 163.4188995361328, 160.97314453125, 158.5869903564453, 156.26071166992188, 154.0010223388672, 151.86273193359375, 149.84214782714844, 147.8561553955078, 145.87100219726562, 143.8812255859375, 141.9394073486328, 140.04071044921875, 138.22088623046875, 136.38259887695312, 134.54953002929688, 132.78271484375, 130.9574737548828, 129.08750915527344, 127.25975799560547, 125.4315185546875, 123.64933013916016, 121.882080078125, 120.05531311035156, 118.18463134765625, 116.25498962402344, 114.34269714355469, 112.4908447265625, 110.6985092163086, 108.94164276123047, 107.16153717041016, 105.32911682128906, 103.44462585449219, 101.6138916015625, 99.76459503173828, 97.91300964355469, 96.16510772705078, 94.41311645507812, 92.58258056640625, 90.4946517944336, 88.02781677246094, 85.19628143310547, 82.00907135009766, 78.48986053466797, 74.69635772705078, 70.86166381835938, 67.15168762207031, 63.572113037109375, 60.10674285888672, 56.803375244140625, 53.6189079284668, 50.549373626708984, 47.61164474487305, 44.77302932739258, 41.92876434326172, 39.06986999511719, 36.2219352722168, 33.32758331298828, 30.242610931396484, 26.973918914794922, 23.662368774414062, 20.41046714782715, 17.231449127197266, 14.126823425292969, 11.168815612792969, 8.347853660583496, 5.706920623779297, 3.3018741607666016, 1.2335699796676636, -0.5328974723815918, -2.043576717376709, -3.110535144805908, -3.740983486175537, -4.098943710327148, -4.4906511306762695, -4.8972249031066895, -5.2530198097229, -5.577995777130127, -5.934023857116699, -6.255759239196777, -6.630918025970459, -7.013139724731445, -7.412384033203125, -7.725191116333008, -8.017799377441406, -8.335323333740234, -8.662646293640137, -9.008383750915527, -9.383427619934082, -9.718378067016602, -10.013775825500488, -10.301630973815918, -10.562592506408691, -10.815587997436523, -11.065951347351074, -11.301687240600586, -11.448249816894531, -11.537090301513672, -11.524465560913086, -11.443005561828613, -11.383244514465332, -11.339241981506348, -11.295818328857422, -11.257658004760742, -11.223909378051758, -11.219079971313477, -11.304905891418457, -11.446738243103027, -11.616390228271484, -11.812542915344238, -12.02774429321289, -12.266841888427734, -12.534515380859375, -12.815123558044434, -13.006359100341797, -13.117430686950684, -13.182148933410645, -13.210461616516113, -13.223767280578613, -13.236565589904785, -13.257308006286621, -13.364906311035156, -13.60283374786377, -13.906349182128906, -14.247852325439453, -14.630463600158691, -15.034890174865723, -15.458684921264648, -15.909191131591797, -16.372478485107422, -16.83634376525879, -17.298728942871094, -17.954330444335938, -18.74985694885254, -19.579227447509766, -20.42566680908203, -21.43193817138672, -22.800357818603516, -24.44293212890625, -26.13048553466797, -27.82823944091797, -29.55722427368164, -31.477741241455078, -33.487709045410156, -35.511478424072266, -37.493263244628906, -39.456016540527344, -41.433685302734375, -43.504295349121094, -45.86669158935547, -48.45779037475586, -51.14822006225586, -53.83092498779297, -56.52829360961914, -59.291015625, -62.107452392578125, -64.86852264404297, -67.60960388183594, -70.36067199707031, -73.03939819335938, -75.66210174560547, -78.23661041259766, -80.80587005615234, -83.38500213623047, -85.95026397705078, -88.392578125, -90.68785095214844, -92.96864318847656, -95.2093505859375, -97.35236358642578, -99.36150360107422, -101.18042755126953, -102.92134857177734, -104.60369110107422, -106.27859497070312, -107.93692779541016, -109.50454711914062, -110.95790100097656, -112.26480102539062, -113.4476318359375, -114.55032348632812, -115.59841918945312, -116.59353637695312, -117.56787872314453, -118.43424987792969, -119.07018280029297, -119.529541015625, -119.9432144165039, -120.33118438720703, -120.70291137695312, -121.06876373291016, -121.57264709472656, -122.14915466308594, -122.72602844238281, -123.31329345703125, -123.84371948242188, -124.38484191894531, -124.94699096679688, -125.50639343261719, -126.06773376464844, -126.62725067138672, -127.21639251708984, -127.76771545410156, -128.14712524414062, -128.24986267089844, -128.0001220703125, -127.45743560791016, -126.70941925048828, -125.85266876220703, -124.98062133789062, -124.1561508178711, -123.36287689208984, -122.56819915771484, -121.65084838867188, -120.66740417480469, -119.70370483398438, -118.76301574707031, -117.76809692382812, -116.55887603759766, -115.09596252441406, -113.52935028076172, -111.99527740478516, -110.50000762939453, -108.9967041015625, -107.39553833007812, -105.7052001953125, -103.86796569824219, -101.89085388183594, -99.83897399902344, -97.75530242919922, -95.71993255615234, -93.73746490478516, -91.82310485839844, -89.95047760009766, -88.10604858398438, -86.26592254638672, -84.39051818847656, -82.42990112304688, -80.4601821899414, -78.54206085205078, -76.67953491210938, -74.87965393066406, -73.13782501220703, -71.447998046875, -69.79700469970703, -68.07174682617188, -66.20356750488281, -64.17756652832031, -62.02452850341797, -59.78955841064453, -57.599979400634766, -55.49079895019531, -53.38170623779297, -51.32799530029297, -49.24906539916992, -47.25999069213867, -45.2713508605957, -43.23389434814453, -41.17817687988281, -39.17205047607422, -37.22850799560547, -35.21967697143555, -33.25495910644531, -31.328039169311523, -29.30510902404785, -27.14748191833496, -24.93663215637207, -22.68917465209961, -20.511201858520508, -18.440406799316406, -16.442750930786133, -14.476696014404297, -12.49740982055664, -10.538829803466797, -8.549440383911133, -6.5612688064575195, -4.653802394866943, -2.830416679382324, -1.0931862592697144)
					Xmap = [-215.266 -214.266 -213.266 -212.266 -211.266 -210.266 -209.266 -208.266 -207.266 -206.266 -205.266 -204.266 -203.266 -202.266 -201.266 -200.266 -199.266 -198.266 -197.266 -196.266 -195.266 -194.266 -193.266 -192.266 -191.266 -190.266 -189.266 -188.266 -187.266 -186.266 -185.266 -184.266 -183.266 -182.266 -181.266 -180.266 -179.266 -178.266 -177.266 -176.266 -175.266 -174.266 -173.266 -172.266 -171.266 -170.266 -169.266 -168.266 -167.266 -166.266 -165.266 -164.266 -163.266 -162.266 -161.266 -160.266 -159.266 -158.266 -157.266 -156.266 -155.266 -154.266 -153.266 -152.266 -151.266 -150.266 -149.266 -148.266 -147.266 -146.266 -145.266 -144.266 -143.266 -142.266 -141.266 -140.266 -139.266 -138.266 -137.266 -136.266 -135.266 -134.266 -133.266 -132.266 -131.266 -130.266 -129.266 -128.266 -127.266 -126.266 -125.266 -124.266 -123.266 -122.266 -121.266 -120.266 -119.266 -118.266 -117.266 -116.266 -115.266 -114.266 -113.266 -112.266 -111.266 -110.266 -109.266 -108.266 -107.266 -106.266 -105.266 -104.266 -103.266 -102.266 -101.266 -100.266  -99.266  -98.266  -97.266  -96.266  -95.266  -94.266  -93.266  -92.266  -91.266  -90.266  -89.266  -88.266  -87.266  -86.266  -85.266  -84.266  -83.266  -82.266  -81.266  -80.266  -79.266  -78.266  -77.266  -76.266  -75.266  -74.266  -73.266  -72.266  -71.266  -70.266  -69.266  -68.266  -67.266  -66.266  -65.266  -64.266  -63.266  -62.266  -61.266  -60.266  -59.266  -58.266  -57.266  -56.266  -55.266  -54.266  -53.266  -52.266  -51.266  -50.266  -49.266  -48.266  -47.266  -46.266  -45.266  -44.266  -43.266  -42.266  -41.266  -40.266  -39.266  -38.266  -37.266  -36.266  -35.266  -34.266  -33.266  -32.266  -31.266  -30.266  -29.266  -28.266  -27.266  -26.266  -25.266  -24.266  -23.266  -22.266  -21.266  -20.266  -19.266  -18.266  -17.266  -16.266  -15.266  -14.266  -13.266  -12.266  -11.266  -10.266   -9.266   -8.266   -7.266   -6.266   -5.266   -4.266   -3.266   -2.266   -1.266   -0.266    0.734    1.734    2.734    3.734    4.734    5.734
					    6.734    7.734    8.734    9.734   10.734   11.734   12.734   13.734   14.734   15.734   16.734   17.734   18.734   19.734   20.734   21.734   22.734   23.734   24.734   25.734   26.734   27.734   28.734   29.734   30.734   31.734   32.734   33.734   34.734   35.734   36.734   37.734   38.734   39.734   40.734   41.734   42.734   43.734   44.734   45.734   46.734   47.734   48.734   49.734   50.734   51.734   52.734   53.734   54.734   55.734   56.734   57.734   58.734   59.734   60.734   61.734   62.734   63.734   64.734   65.734   66.734   67.734   68.734   69.734   70.734   71.734   72.734   73.734   74.734   75.734   76.734   77.734   78.734   79.734   80.734   81.734   82.734   83.734   84.734   85.734   86.734   87.734   88.734   89.734   90.734   91.734   92.734   93.734   94.734   95.734   96.734   97.734   98.734   99.734  100.734  101.734  102.734  103.734  104.734  105.734  106.734  107.734  108.734  109.734  110.734  111.734  112.734  113.734  114.734  115.734  116.734  117.734  118.734  119.734  120.734  121.734  122.734  123.734  124.734  125.734  126.734  127.734  128.734  129.734  130.734  131.734  132.734  133.734  134.734  135.734  136.734  137.734  138.734  139.734  140.734  141.734  142.734  143.734  144.734  145.734  146.734  147.734  148.734  149.734  150.734  151.734  152.734  153.734  154.734  155.734  156.734  157.734  158.734  159.734  160.734  161.734  162.734  163.734  164.734  165.734  166.734  167.734  168.734  169.734  170.734  171.734  172.734  173.734  174.734  175.734  176.734  177.734  178.734  179.734  180.734  181.734  182.734  183.734  184.734  185.734  186.734  187.734  188.734  189.734  190.734  191.734  192.734  193.734  194.734  195.734  196.734  197.734  198.734  199.734  200.734  201.734  202.734  203.734  204.734  205.734  206.734  207.734  208.734  209.734]
					Ymap = [-1.782e+02 -1.772e+02 -1.762e+02 -1.752e+02 -1.742e+02 -1.732e+02 -1.722e+02 -1.712e+02 -1.702e+02 -1.692e+02 -1.682e+02 -1.672e+02 -1.662e+02 -1.652e+02 -1.642e+02 -1.632e+02 -1.622e+02 -1.612e+02 -1.602e+02 -1.592e+02 -1.582e+02 -1.572e+02 -1.562e+02 -1.552e+02 -1.542e+02 -1.532e+02 -1.522e+02 -1.512e+02 -1.502e+02 -1.492e+02 -1.482e+02 -1.472e+02 -1.462e+02 -1.452e+02 -1.442e+02 -1.432e+02 -1.422e+02 -1.412e+02 -1.402e+02 -1.392e+02 -1.382e+02 -1.372e+02 -1.362e+02 -1.352e+02 -1.342e+02 -1.332e+02 -1.322e+02 -1.312e+02 -1.302e+02 -1.292e+02 -1.282e+02 -1.272e+02 -1.262e+02 -1.252e+02 -1.242e+02 -1.232e+02 -1.222e+02 -1.212e+02 -1.202e+02 -1.192e+02 -1.182e+02 -1.172e+02 -1.162e+02 -1.152e+02 -1.142e+02 -1.132e+02 -1.122e+02 -1.112e+02 -1.102e+02 -1.092e+02 -1.082e+02 -1.072e+02 -1.062e+02 -1.052e+02 -1.042e+02 -1.032e+02 -1.022e+02 -1.012e+02 -1.002e+02 -9.925e+01 -9.825e+01 -9.725e+01 -9.625e+01 -9.525e+01 -9.425e+01 -9.325e+01 -9.225e+01 -9.125e+01 -9.025e+01 -8.925e+01 -8.825e+01 -8.725e+01 -8.625e+01 -8.525e+01 -8.425e+01 -8.325e+01 -8.225e+01 -8.125e+01 -8.025e+01 -7.925e+01 -7.825e+01 -7.725e+01 -7.625e+01 -7.525e+01 -7.425e+01 -7.325e+01 -7.225e+01 -7.125e+01 -7.025e+01 -6.925e+01 -6.825e+01 -6.725e+01 -6.625e+01 -6.525e+01 -6.425e+01 -6.325e+01 -6.225e+01 -6.125e+01 -6.025e+01 -5.925e+01 -5.825e+01 -5.725e+01 -5.625e+01 -5.525e+01 -5.425e+01 -5.325e+01 -5.225e+01 -5.125e+01 -5.025e+01 -4.925e+01 -4.825e+01 -4.725e+01 -4.625e+01 -4.525e+01 -4.425e+01 -4.325e+01 -4.225e+01 -4.125e+01 -4.025e+01 -3.925e+01 -3.825e+01 -3.725e+01 -3.625e+01 -3.525e+01 -3.425e+01 -3.325e+01 -3.225e+01 -3.125e+01 -3.025e+01 -2.925e+01 -2.825e+01 -2.725e+01 -2.625e+01 -2.525e+01 -2.425e+01 -2.325e+01 -2.225e+01 -2.125e+01 -2.025e+01 -1.925e+01 -1.825e+01 -1.725e+01 -1.625e+01 -1.525e+01 -1.425e+01 -1.325e+01 -1.225e+01 -1.125e+01 -1.025e+01 -9.250e+00 -8.250e+00 -7.250e+00 -6.250e+00 -5.250e+00 -4.250e+00 -3.250e+00 -2.250e+00 -1.250e+00 -2.499e-01  7.501e-01  1.750e+00
					  2.750e+00  3.750e+00  4.750e+00  5.750e+00  6.750e+00  7.750e+00  8.750e+00  9.750e+00  1.075e+01  1.175e+01  1.275e+01  1.375e+01  1.475e+01  1.575e+01  1.675e+01  1.775e+01  1.875e+01  1.975e+01  2.075e+01  2.175e+01  2.275e+01  2.375e+01  2.475e+01  2.575e+01  2.675e+01  2.775e+01  2.875e+01  2.975e+01  3.075e+01  3.175e+01  3.275e+01  3.375e+01  3.475e+01  3.575e+01  3.675e+01  3.775e+01  3.875e+01  3.975e+01  4.075e+01  4.175e+01  4.275e+01  4.375e+01  4.475e+01  4.575e+01  4.675e+01  4.775e+01  4.875e+01  4.975e+01  5.075e+01  5.175e+01  5.275e+01  5.375e+01  5.475e+01  5.575e+01  5.675e+01  5.775e+01  5.875e+01  5.975e+01  6.075e+01  6.175e+01  6.275e+01  6.375e+01  6.475e+01  6.575e+01  6.675e+01  6.775e+01  6.875e+01  6.975e+01  7.075e+01  7.175e+01  7.275e+01  7.375e+01  7.475e+01  7.575e+01  7.675e+01  7.775e+01  7.875e+01  7.975e+01  8.075e+01  8.175e+01  8.275e+01  8.375e+01  8.475e+01  8.575e+01  8.675e+01  8.775e+01  8.875e+01  8.975e+01  9.075e+01  9.175e+01  9.275e+01  9.375e+01  9.475e+01  9.575e+01  9.675e+01  9.775e+01  9.875e+01  9.975e+01  1.008e+02  1.018e+02  1.028e+02  1.038e+02  1.048e+02  1.058e+02  1.068e+02  1.078e+02  1.088e+02  1.098e+02  1.108e+02  1.118e+02  1.128e+02  1.138e+02  1.148e+02  1.158e+02  1.168e+02  1.178e+02  1.188e+02  1.198e+02  1.208e+02  1.218e+02  1.228e+02  1.238e+02  1.248e+02  1.258e+02  1.268e+02  1.278e+02  1.288e+02  1.298e+02  1.308e+02  1.318e+02  1.328e+02  1.338e+02  1.348e+02  1.358e+02  1.368e+02  1.378e+02  1.388e+02  1.398e+02  1.408e+02  1.418e+02  1.428e+02  1.438e+02  1.448e+02  1.458e+02  1.468e+02  1.478e+02  1.488e+02  1.498e+02  1.508e+02  1.518e+02  1.528e+02  1.538e+02  1.548e+02  1.558e+02  1.568e+02  1.578e+02  1.588e+02  1.598e+02  1.608e+02  1.618e+02  1.628e+02  1.638e+02  1.648e+02  1.658e+02  1.668e+02  1.678e+02  1.688e+02  1.698e+02  1.708e+02  1.718e+02  1.728e+02  1.738e+02  1.748e+02  1.758e+02  1.768e+02  1.778e+02  1.788e+02  1.798e+02  1.808e+02  1.818e+02  1.828e+02
					  1.838e+02  1.848e+02  1.858e+02  1.868e+02  1.878e+02  1.888e+02  1.898e+02  1.908e+02  1.918e+02  1.928e+02  1.938e+02  1.948e+02  1.958e+02  1.968e+02  1.978e+02  1.988e+02  1.998e+02  2.008e+02  2.018e+02  2.028e+02  2.038e+02  2.048e+02  2.058e+02  2.068e+02  2.078e+02  2.088e+02  2.098e+02  2.108e+02  2.118e+02  2.128e+02  2.138e+02  2.148e+02  2.158e+02  2.168e+02  2.178e+02  2.188e+02  2.198e+02  2.208e+02  2.218e+02  2.228e+02  2.238e+02  2.248e+02  2.258e+02  2.268e+02  2.278e+02  2.288e+02  2.298e+02  2.308e+02  2.318e+02  2.328e+02  2.338e+02  2.348e+02  2.358e+02  2.368e+02  2.378e+02  2.388e+02  2.398e+02  2.408e+02  2.418e+02  2.428e+02  2.438e+02  2.448e+02  2.458e+02  2.468e+02  2.478e+02  2.488e+02  2.498e+02  2.508e+02  2.518e+02  2.528e+02  2.538e+02  2.548e+02  2.558e+02  2.568e+02  2.578e+02  2.588e+02  2.598e+02  2.608e+02  2.618e+02  2.628e+02]
					Zmap = [-5.894 -4.894 -3.894 -2.894 -1.894 -0.894  0.106  1.106  2.106  3.106  4.106  5.106  6.106  7.106  8.106  9.106 10.106 11.106 12.106 13.106]
					point_map = [[[291 291 291 ... 291 291 291]
					  [291 291 291 ... 291 291 291]
					  [291 291 291 ... 291 291 291]
					  ...
					  [161 161 161 ... 161 161 161]
					  [161 161 161 ... 161 161 161]
					  [161 161 161 ... 161 161 161]]
					
					 [[291 291 291 ... 291 291 291]
					  [291 291 291 ... 291 291 291]
					  [291 291 291 ... 291 291 291]
					  ...
					  [161 161 161 ... 161 161 161]
					  [161 161 161 ... 161 161 161]
					  [162 162 162 ... 161 161 161]]
					
					 [[291 291 291 ... 292 292 292]
					  [291 291 291 ... 291 292 292]
					  [291 291 291 ... 291 291 291]
					  ...
					  [162 162 161 ... 161 161 161]
					  [162 162 162 ... 161 161 161]
					  [162 162 162 ... 161 161 161]]
					
					 ...
					
					 [[395 395 395 ... 395 395 395]
					  [395 395 395 ... 395 395 395]
					  [395 395 395 ... 395 395 395]
					  ...
					  [210 210 210 ... 210 210 210]
					  [210 210 210 ... 210 210 210]
					  [210 210 210 ... 210 210 210]]
					
					 [[395 395 395 ... 395 395 395]
					  [395 395 395 ... 395 395 395]
					  [395 395 395 ... 395 395 395]
					  ...
					  [210 210 210 ... 210 210 210]
					  [210 210 210 ... 210 210 210]
					  [210 210 210 ... 210 210 210]]
					
					 [[395 395 395 ... 395 395 395]
					  [395 395 395 ... 395 395 395]
					  [394 394 394 ... 394 394 394]
					  ...
					  [210 210 210 ... 210 210 210]
					  [210 210 210 ... 210 210 210]
					  [210 210 210 ... 210 210 210]]]
					res = 1
					min_point = [-215.266 -178.250   -5.894]
					max_point = [ 209.734  262.750   13.106]
				X = [-215.266 -215.166 -215.066 ...  210.034  210.134  210.234]
				Y = [-178.250 -178.150 -178.050 ...  262.750  262.850  262.950]
				Z = [-0.894  8.722]
				cost_map = [[[ 214.381  214.381]
				  [ 214.299  214.299]
				  [ 214.217  214.217]
				  ...
				  [ 112.184  112.184]
				  [ 112.264  112.264]
				  [ 112.344  112.344]]
				
				 [[ 214.324  214.324]
				  [ 214.242  214.242]
				  [ 214.160  214.160]
				  ...
				  [ 112.124  112.124]
				  [ 112.204  112.204]
				  [ 112.284  112.284]]
				
				 [[ 214.267  214.267]
				  [ 214.185  214.185]
				  [ 214.103  214.103]
				  ...
				  [ 112.064  112.064]
				  [ 112.144  112.144]
				  [ 112.224  112.224]]
				
				 ...
				
				 [[  96.764   96.764]
				  [  96.690   96.690]
				  [  96.616   96.616]
				  ...
				  [ 242.661  242.661]
				  [ 242.689  242.689]
				  [ 242.717  242.717]]
				
				 [[  96.831   96.831]
				  [  96.757   96.757]
				  [  96.683   96.683]
				  ...
				  [ 242.757  242.757]
				  [ 242.785  242.785]
				  [ 242.813  242.813]]
				
				 [[  96.898   96.898]
				  [  96.824   96.824]
				  [  96.750   96.750]
				  ...
				  [ 242.852  242.852]
				  [ 242.881  242.881]
				  [ 242.909  242.909]]]
				res = 0.1
				min_point = [-215.266 -178.250   -0.894]
				max_point = [ 210.234  262.950    8.722]
				src = 
						def get_cost(self, state, prevstate=None):
							prevstate = state if prevstate is None else prevstate
							prevpos = prevstate["pos"][...,[0,2,1]]
							pos = state["pos"][...,[0,2,1]]
							vy = state["vel"][...,-1]
							cost = self.get_point_cost(pos, transform=True)
							progress = self.track.get_progress(prevpos, pos)
							reward = np.minimum(progress,0) + 2*progress + np.tanh(vy/self.vtarget)-np.power(self.vtarget-vy,2)/self.vtarget**2 - cost
							# reward = progress + np.tanh(vy/self.vtarget) - cost
				
				vtarget = 20
			action_space = Box(3,) 
				dtype = float32
				shape = (3,)
				low = [-1.000 -1.000 -1.000]
				high = [ 1.000  1.000  1.000]
				bounded_below = [ True  True  True]
				bounded_above = [ True  True  True]
				np_random = RandomState(MT19937)
			cost_queries = <list len=25>
			dynamics_size = 13
			obs = [ 1.617e-09 -3.908e-03 -7.273e-09  1.777e-12 -1.954e-01  3.555e-13  0.000e+00  0.000e+00  0.000e+00  1.000e+00  9.095e-13 -1.164e-10 -4.547e-12  0.000e+00  2.000e-02  3.657e-01  4.017e-01  4.572e-01  5.260e-01  6.036e-01  2.700e-01  3.171e-01  3.850e-01  4.646e-01  5.509e-01  1.792e-01  2.444e-01  3.277e-01  4.184e-01  5.125e-01  1.063e-01  1.973e-01  2.942e-01  3.927e-01  4.918e-01  1.024e-01  1.953e-01  2.929e-01  3.917e-01  4.910e-01]
			observation_space = Box(80,) 
				dtype = float32
				shape = (80,)
				low = [-inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf]
				high = [ inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf]
				bounded_below = [False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False]
				bounded_above = [False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False]
				np_random = RandomState(MT19937)
			src = 		return state
				
					def step(self, action):
						self.time += 1
						next_state, reward, done, info = self.env.step(action)
						idle = next_state[29]
						done = done or idle>self.idle_timeout or self.time > self.max_time
						next_state, next_spec = self.observation(next_state)
						terminal = -(1-self.time/self.max_time)*int(done)
						reward = -self.cost_model.get_cost(next_spec, self.spec) + terminal
						self.spec = next_spec
			
			max_time = 500
			time = 0
			idle_timeout = 10
			spec = EnvSpec(CarRacing-v1) 
				id = CarRacing-v1
				entry_point = <class 'src.envs.CarRacing.car_racing.CarRacing'> 
					reset = <function CarRacing.reset at 0x7f15923a3710>
					step = <function CarRacing.step at 0x7f15923a3680>
					render = <function CarRacing.render at 0x7f15ba80cc20>
					dynamics_spec = <staticmethod object at 0x7f15923a4bd0>
					track_spec = <function CarRacing.track_spec at 0x7f15ba80cd40>
					observation = <function CarRacing.observation at 0x7f15ba80cdd0>
					dynamics_keys = <staticmethod object at 0x7f15923a4ad0>
					observation_spec = <staticmethod object at 0x7f15923a4b10>
					close = <function CarRacing.close at 0x7f15ba80cf80>
					id = 2
				reward_threshold = None
				nondeterministic = False
				max_episode_steps = None
			verbose = 0
		action_space = Box(3,) 
			dtype = float32
			shape = (3,)
			low = [-1.000 -1.000 -1.000]
			high = [ 1.000  1.000  1.000]
			bounded_below = [ True  True  True]
			bounded_above = [ True  True  True]
			np_random = RandomState(MT19937)
		observation_space = Box(80,) 
			dtype = float32
			shape = (80,)
			low = [-inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf]
			high = [ inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf]
			bounded_below = [False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False]
			bounded_above = [False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False]
			np_random = RandomState(MT19937)
		reward_range = (-inf, inf)
		metadata = {'render.modes': []}
		preprocess = <src.envs.wrappers.RawPreprocess object at 0x7f151241d610> 
			observation_space = Box(80,) 
				dtype = float32
				shape = (80,)
				low = [-inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf]
				high = [ inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf]
				bounded_below = [False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False]
				bounded_above = [False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False]
				np_random = RandomState(MT19937)
	state_size = (80,)
	action_size = (3,)
	action_space = Box(3,) 
		dtype = float32
		shape = (3,)
		low = [-1.000 -1.000 -1.000]
		high = [ 1.000  1.000  1.000]
		bounded_below = [ True  True  True]
		bounded_above = [ True  True  True]
		np_random = RandomState(MT19937)
	server_ports = <list len=16>
	conn = <src.utils.multiprocess.TCPClient object at 0x7f151241d990> 
		num_clients = 16
		client_ranks = <list len=16>
		client_ports = <list len=16>
		client_sockets = {9001: <socket.socket fd=89, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 60686), raddr=('127.0.0.1', 9001)>, 9002: <socket.socket fd=91, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 55870), raddr=('127.0.0.1', 9002)>, 9003: <socket.socket fd=92, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 47358), raddr=('127.0.0.1', 9003)>, 9004: <socket.socket fd=115, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 59082), raddr=('127.0.0.1', 9004)>, 9005: <socket.socket fd=131, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 54506), raddr=('127.0.0.1', 9005)>, 9006: <socket.socket fd=181, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 57256), raddr=('127.0.0.1', 9006)>, 9007: <socket.socket fd=182, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 47574), raddr=('127.0.0.1', 9007)>, 9008: <socket.socket fd=183, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 50584), raddr=('127.0.0.1', 9008)>, 9009: <socket.socket fd=184, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 35998), raddr=('127.0.0.1', 9009)>, 9010: <socket.socket fd=185, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 38812), raddr=('127.0.0.1', 9010)>, 9011: <socket.socket fd=186, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 50998), raddr=('127.0.0.1', 9011)>, 9012: <socket.socket fd=187, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 37126), raddr=('127.0.0.1', 9012)>, 9013: <socket.socket fd=188, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 39196), raddr=('127.0.0.1', 9013)>, 9014: <socket.socket fd=189, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 42268), raddr=('127.0.0.1', 9014)>, 9015: <socket.socket fd=190, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 57580), raddr=('127.0.0.1', 9015)>, 9016: <socket.socket fd=191, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 56406), raddr=('127.0.0.1', 9016)>}
	num_envs = 16
	max_steps = 1000,
agent: <src.models.wrappers.ParallelAgent object at 0x7f151241d1d0> 
	icm = None
	stack = <src.models.wrappers.RawState object at 0x7f1512414d90> 
		state_size = (80,)
	agent = <src.models.pytorch.mpc.mppi.MPPIAgent object at 0x7f1512414b10> 
		noise_process = <src.utils.rand.BrownianNoise object at 0x7f1512414a10> 
			size = (3,)
			dt = 0.2
			action = [-0.355  1.000 -0.077]
			daction_dt = [-0.127 -0.571  0.737]
		discrete = False
		action_size = (3,)
		state_size = (80,)
		config = <src.utils.config.Config object at 0x7f1518057e90> 
			TRIAL_AT = 1000
			SAVE_AT = 1
			SEED = 0
			REG_LAMBDA = 1e-06
			LEARN_RATE = 0.0001
			DISCOUNT_RATE = 0.99
			ADVANTAGE_DECAY = 0.95
			INPUT_LAYER = 512
			ACTOR_HIDDEN = 256
			CRITIC_HIDDEN = 1024
			EPS_MAX = 1.0
			EPS_MIN = 0.1
			EPS_DECAY = 0.99
			NUM_STEPS = 40
			MAX_BUFFER_SIZE = 1000000
			REPLAY_BATCH_SIZE = 5000
			TARGET_UPDATE_RATE = 0.0004
			BATCH_SIZE = 250
			DYN_EPOCHS = 10
			TRAIN_EVERY = 1000
			ENV_MODEL = dfrntl
			MPC = <src.utils.config.Config object at 0x7f15ba8197d0> 
				NSAMPLES = 100
				HORIZON = 40
				LAMBDA = 0.1
				CONTROL_FREQ = 1
			REWARD_MODEL = src.envs.CarRacing.objective.cost:CostModel
			DYNAMICS_SPEC = src.envs.CarRacing.car_racing:CarRacing
			dynamics_size = 13
			state_size = (80,)
			action_size = (3,)
			env_name = CarRacing-v1
			rank = 0
			size = 17
			split = 17
			model = mppi
			framework = pt
			train_prop = 1.0
			tcp_ports = <list len=17>
			tcp_rank = 0
			num_envs = 1
			nsteps = 500000
			render = False
			trial = False
			icm = False
			rs = False
			DYN = <src.utils.config.Config object at 0x7f1518048c10> 
				REG_LAMBDA = 1e-06
				FACTOR = 0.5
				PATIENCE = 5
				LEARN_RATE = 0.001
				TRANSITION_HIDDEN = 256
				REWARD_HIDDEN = 256
				BETA_DYN = 0.1
				BETA_DOT = 1
				BETA_DDOT = 1
		stats = <src.utils.logger.Stats object at 0x7f1512414810> 
			mean_dict = {}
			sum_dict = {}
		eps = 1.0
		network = MPPIController() 
			training = True
			tau = 0.0004
			name = mppi
			stats = <src.utils.logger.Stats object at 0x7f1512414ad0> 
				mean_dict = {}
				sum_dict = {}
			config = <src.utils.config.Config object at 0x7f1518057e90> 
				TRIAL_AT = 1000
				SAVE_AT = 1
				SEED = 0
				REG_LAMBDA = 1e-06
				LEARN_RATE = 0.0001
				DISCOUNT_RATE = 0.99
				ADVANTAGE_DECAY = 0.95
				INPUT_LAYER = 512
				ACTOR_HIDDEN = 256
				CRITIC_HIDDEN = 1024
				EPS_MAX = 1.0
				EPS_MIN = 0.1
				EPS_DECAY = 0.99
				NUM_STEPS = 40
				MAX_BUFFER_SIZE = 1000000
				REPLAY_BATCH_SIZE = 5000
				TARGET_UPDATE_RATE = 0.0004
				BATCH_SIZE = 250
				DYN_EPOCHS = 10
				TRAIN_EVERY = 1000
				ENV_MODEL = dfrntl
				MPC = <src.utils.config.Config object at 0x7f15ba8197d0> 
					NSAMPLES = 100
					HORIZON = 40
					LAMBDA = 0.1
					CONTROL_FREQ = 1
				REWARD_MODEL = src.envs.CarRacing.objective.cost:CostModel
				DYNAMICS_SPEC = src.envs.CarRacing.car_racing:CarRacing
				dynamics_size = 13
				state_size = (80,)
				action_size = (3,)
				env_name = CarRacing-v1
				rank = 0
				size = 17
				split = 17
				model = mppi
				framework = pt
				train_prop = 1.0
				tcp_ports = <list len=17>
				tcp_rank = 0
				num_envs = 1
				nsteps = 500000
				render = False
				trial = False
				icm = False
				rs = False
				DYN = <src.utils.config.Config object at 0x7f1518048c10> 
					REG_LAMBDA = 1e-06
					FACTOR = 0.5
					PATIENCE = 5
					LEARN_RATE = 0.001
					TRANSITION_HIDDEN = 256
					REWARD_HIDDEN = 256
					BETA_DYN = 0.1
					BETA_DOT = 1
					BETA_DDOT = 1
			device = cuda
			envmodel = <src.models.pytorch.mpc.EnvModel object at 0x7f1512414e10> 
				network = DifferentialEnv(
					  (reward): RewardModel(
					    (linear1): Linear(in_features=29, out_features=256, bias=True)
					    (linear2): Linear(in_features=256, out_features=256, bias=True)
					    (linear3): Linear(in_features=256, out_features=1, bias=True)
					  )
					  (dynamics): TransitionModel(
					    (gru): GRUCell(29, 256)
					    (linear1): Linear(in_features=256, out_features=256, bias=True)
					    (linear2): Linear(in_features=256, out_features=256, bias=True)
					    (state_ddot): Linear(in_features=256, out_features=13, bias=True)
					  )
					) 
					training = True
					tau = 0.0004
					name = dfrntl
					stats = <src.utils.logger.Stats object at 0x7f151244b050> 
						mean_dict = {}
						sum_dict = {}
					config = <src.utils.config.Config object at 0x7f1518057e90> 
						TRIAL_AT = 1000
						SAVE_AT = 1
						SEED = 0
						REG_LAMBDA = 1e-06
						LEARN_RATE = 0.0001
						DISCOUNT_RATE = 0.99
						ADVANTAGE_DECAY = 0.95
						INPUT_LAYER = 512
						ACTOR_HIDDEN = 256
						CRITIC_HIDDEN = 1024
						EPS_MAX = 1.0
						EPS_MIN = 0.1
						EPS_DECAY = 0.99
						NUM_STEPS = 40
						MAX_BUFFER_SIZE = 1000000
						REPLAY_BATCH_SIZE = 5000
						TARGET_UPDATE_RATE = 0.0004
						BATCH_SIZE = 250
						DYN_EPOCHS = 10
						TRAIN_EVERY = 1000
						ENV_MODEL = dfrntl
						MPC = <src.utils.config.Config object at 0x7f15ba8197d0> 
							NSAMPLES = 100
							HORIZON = 40
							LAMBDA = 0.1
							CONTROL_FREQ = 1
						REWARD_MODEL = src.envs.CarRacing.objective.cost:CostModel
						DYNAMICS_SPEC = src.envs.CarRacing.car_racing:CarRacing
						dynamics_size = 13
						state_size = (80,)
						action_size = (3,)
						env_name = CarRacing-v1
						rank = 0
						size = 17
						split = 17
						model = mppi
						framework = pt
						train_prop = 1.0
						tcp_ports = <list len=17>
						tcp_rank = 0
						num_envs = 1
						nsteps = 500000
						render = False
						trial = False
						icm = False
						rs = False
						DYN = <src.utils.config.Config object at 0x7f1518048c10> 
							REG_LAMBDA = 1e-06
							FACTOR = 0.5
							PATIENCE = 5
							LEARN_RATE = 0.001
							TRANSITION_HIDDEN = 256
							REWARD_HIDDEN = 256
							BETA_DYN = 0.1
							BETA_DOT = 1
							BETA_DDOT = 1
					device = cuda
					state_size = (80,)
					action_size = (3,)
					discrete = False
					dyn_index = 13
					optimizer = Adam (
					Parameter Group 0
					    amsgrad: False
					    betas: (0.9, 0.999)
					    eps: 1e-08
					    lr: 0.001
					    weight_decay: 1e-06
					)
					scheduler = <torch.optim.lr_scheduler.ReduceLROnPlateau object at 0x7f151244bb10>
				state_size = (80,)
				action_size = (3,)
			mu = [ 0.000  0.000  0.000]
			cov = [[ 0.500  0.000  0.000]
			 [ 0.000  0.500  0.000]
			 [ 0.000  0.000  0.500]]
			icov = [[ 2.000  0.000  0.000]
			 [ 0.000  2.000  0.000]
			 [ 0.000  0.000  2.000]]
			lamda = 0.1
			horizon = 40
			nsamples = 100
			action_size = (3,)
			control = [[[-0.568 -0.526 -0.735]
			  [-0.706 -0.580 -0.216]
			  [-0.432  0.833 -0.403]
			  [-0.112  0.737 -0.268]
			  [-0.304  0.768 -0.700]
			  [ 0.602  0.923  0.938]
			  [-0.431 -0.852 -0.415]
			  [-0.569 -0.586 -0.853]
			  [-0.856 -0.937  0.533]
			  [-0.139  0.051  0.551]
			  [-0.453  0.522 -0.140]
			  [-0.603 -0.763 -0.991]
			  [-0.507  0.935  0.109]
			  [ 0.783 -0.669 -0.553]
			  [-0.938 -0.018  0.103]
			  [-0.685  0.196 -0.843]
			  [-0.185  0.418  0.865]
			  [-0.018 -0.011 -0.331]
			  [-0.302  0.054  0.014]
			  [-0.739  0.758 -0.601]
			  [-0.246  0.537  0.371]
			  [ 0.867  0.161  0.229]
			  [ 0.061 -0.676  0.715]
			  [ 0.773 -0.432 -0.876]
			  [ 0.965 -0.769  0.335]
			  [ 0.864 -0.026 -0.084]
			  [ 0.243 -0.460 -0.872]
			  [ 0.385 -0.315 -0.292]
			  [ 0.506  0.193 -0.219]
			  [-0.481  0.007 -0.843]
			  [-0.954  0.954 -0.981]
			  [ 0.099 -0.492 -0.473]
			  [ 0.979 -0.855 -0.061]
			  [ 0.171  0.262 -0.470]
			  [-0.323 -0.619 -0.493]
			  [-0.741 -0.439 -0.332]
			  [ 0.534  0.582 -0.291]
			  [-0.644 -0.349 -0.806]
			  [ 0.105  0.366  0.578]
			  [ 0.644  0.185 -0.750]]]
			noise = [[[[ 0.545  0.932  0.355]
			   [ 0.303 -0.349 -0.335]
			   [ 0.495 -0.086 -0.455]
			   ...
			   [-0.689  0.109  0.761]
			   [-0.236 -0.801  0.810]
			   [-0.821 -0.052 -1.070]]
			
			  [[-1.466 -1.900 -0.735]
			   [ 1.143  0.394  0.388]
			   [-0.285  0.101  0.294]
			   ...
			   [ 1.118  0.345  1.283]
			   [-0.030  0.338 -1.452]
			   [ 0.845  0.238 -0.662]]
			
			  [[ 1.509  0.154 -0.348]
			   [-0.628  0.233 -0.320]
			   [ 0.132 -1.096 -0.531]
			   ...
			   [ 0.365  0.532  0.537]
			   [-1.549  0.153  0.072]
			   [-0.154 -0.526  0.143]]
			
			  ...
			
			  [[-1.100 -0.307 -1.439]
			   [-0.401  0.102  1.461]
			   [-0.509  0.198 -0.560]
			   ...
			   [-0.680 -0.168 -0.080]
			   [-1.601  0.587 -0.208]
			   [-0.143  0.819  0.146]]
			
			  [[-0.278  0.201 -1.422]
			   [ 0.161  0.222 -0.465]
			   [-1.058  1.144 -0.686]
			   ...
			   [ 0.546  0.819 -0.117]
			   [-0.516  0.662 -0.545]
			   [-1.030  0.649 -0.053]]
			
			  [[ 0.444  0.253 -1.285]
			   [-0.429 -0.781 -0.709]
			   [ 0.127  0.160  0.180]
			   ...
			   [-0.946  1.061  0.463]
			   [-1.386  0.534 -1.309]
			   [ 1.004 -0.818  0.176]]]]
			init_cost = [[  5.581   1.939   2.083   9.364   9.840  -7.470   1.043  10.463  -7.253  -5.306 -15.299   3.203  22.433   7.125  20.317  10.904  10.466   2.125  10.311  -0.214   4.244   1.163   3.685 -11.571  -5.310  -9.517  -9.469  -1.237   1.675   1.824  -2.377   1.846   5.563 -10.569   9.556 -11.337   2.121  -5.277  -0.443   9.987  -8.597  14.686  -3.317  -9.266  -5.741  -6.682 -25.226  -7.773  -6.299   3.033   7.229 -22.850  -4.649  -8.033   6.171 -11.219   1.701 -10.523 -10.451   4.809   0.963  -8.352   7.775   1.755 -13.525 -13.085  -0.328   6.511  -5.709  -4.450 -14.453  -3.756  15.792  -4.136   8.929  -2.603  -4.679   0.392  11.419   6.179   3.181 -19.096   7.088   1.682  -9.310  -2.665 -18.026 -12.453   4.546 -15.358  -3.693  -4.826  -2.709   5.019  -3.769  -2.448   5.191   0.140   3.135  -8.723]]
		replay_buffer = <src.utils.rand.ReplayBuffer object at 0x7f151244b1d0> 
			buffer = deque([], maxlen=1000000)
		buffer = []
	noise_process = <src.utils.rand.BrownianNoise object at 0x7f151244ba90> 
		size = (3,)
		dt = 0.2
		action = [-1.000  0.789 -0.885]
		daction_dt = [-0.562 -0.941  0.841]
	discrete = False
	action_size = (3,)
	state_size = (80,)
	config = <src.utils.config.Config object at 0x7f1518057e90> 
		TRIAL_AT = 1000
		SAVE_AT = 1
		SEED = 0
		REG_LAMBDA = 1e-06
		LEARN_RATE = 0.0001
		DISCOUNT_RATE = 0.99
		ADVANTAGE_DECAY = 0.95
		INPUT_LAYER = 512
		ACTOR_HIDDEN = 256
		CRITIC_HIDDEN = 1024
		EPS_MAX = 1.0
		EPS_MIN = 0.1
		EPS_DECAY = 0.99
		NUM_STEPS = 40
		MAX_BUFFER_SIZE = 1000000
		REPLAY_BATCH_SIZE = 5000
		TARGET_UPDATE_RATE = 0.0004
		BATCH_SIZE = 250
		DYN_EPOCHS = 10
		TRAIN_EVERY = 1000
		ENV_MODEL = dfrntl
		MPC = <src.utils.config.Config object at 0x7f15ba8197d0> 
			NSAMPLES = 100
			HORIZON = 40
			LAMBDA = 0.1
			CONTROL_FREQ = 1
		REWARD_MODEL = src.envs.CarRacing.objective.cost:CostModel
		DYNAMICS_SPEC = src.envs.CarRacing.car_racing:CarRacing
		dynamics_size = 13
		state_size = (80,)
		action_size = (3,)
		env_name = CarRacing-v1
		rank = 0
		size = 17
		split = 17
		model = mppi
		framework = pt
		train_prop = 1.0
		tcp_ports = <list len=17>
		tcp_rank = 0
		num_envs = 1
		nsteps = 500000
		render = False
		trial = False
		icm = False
		rs = False
		DYN = <src.utils.config.Config object at 0x7f1518048c10> 
			REG_LAMBDA = 1e-06
			FACTOR = 0.5
			PATIENCE = 5
			LEARN_RATE = 0.001
			TRANSITION_HIDDEN = 256
			REWARD_HIDDEN = 256
			BETA_DYN = 0.1
			BETA_DOT = 1
			BETA_DDOT = 1
	stats = <src.utils.logger.Stats object at 0x7f15123fc290> 
		mean_dict = {}
		sum_dict = {},
conn: None,

import tqdm
import torch
import random
import numpy as np
import scipy as sp
from scipy.stats import multivariate_normal
from src.utils.rand import RandomAgent, ReplayBuffer
from ..agents.base import PTNetwork, PTAgent, Conv, one_hot_from_indices
from . import EnvModel

class MPPIController(PTNetwork):
	def __init__(self, state_size, action_size, config, load="", gpu=True, name="mppi"):
		super().__init__(config, gpu=gpu, name=name)
		self.envmodel = EnvModel(state_size, action_size, config, load=load, gpu=gpu)
		self.mu = np.zeros(action_size)
		self.cov = np.diag(np.ones(action_size))*0.5
		self.icov = np.linalg.inv(self.cov)
		self.lamda = config.MPC.LAMBDA
		self.horizon = config.MPC.HORIZON
		self.nsamples = config.MPC.NSAMPLES
		self.config = config
		self.action_size = action_size
		self.init_control()

	def get_action(self, state, eps=None, sample=True):
		batch = state.shape[:-1]
		if len(batch) and self.control.shape[0] != batch[0]: self.init_control(batch[0])
		x = torch.Tensor(state).view(*batch, 1,-1).repeat_interleave(self.nsamples, -2)
		controls = np.clip(self.control[:,None,:,:] + self.noise, -1, 1)
		self.states, rewards = self.envmodel.rollout(controls, x, numpy=True)
		costs = -np.sum(rewards, -1) #+ self.lamda * np.copy(self.init_cost)
		beta = np.min(costs, -1, keepdims=True)
		costs_norm = -(costs - beta)/self.lamda
		weights = sp.special.softmax(costs_norm)
		self.control += np.sum(weights[:,:,None,None]*self.noise, len(batch))
		action = self.control[...,0,:]
		self.control = np.roll(self.control, -1, axis=-2)
		self.control[...,-1,:] = 0
		return action

	def init_control(self, batch_size=1):
		self.control = np.random.uniform(-1, 1, size=[batch_size, self.horizon, *self.action_size])
		self.noise = np.random.multivariate_normal(self.mu, self.cov, size=[batch_size, self.nsamples, self.horizon])
		self.init_cost = np.sum(self.control[:,None,:,None,:] @ self.icov[None,None,None,:,:] @ self.noise[:,:,:,:,None], axis=(2,3,4))

	def optimize(self, states, actions, next_states, rewards, dones):
		return self.envmodel.optimize(states, actions, next_states, rewards, dones)

	def save_model(self, dirname="pytorch", name="checkpoint", net=None):
		return self.envmodel.save_model(dirname, name, net)
		
	def load_model(self, dirname="pytorch", name="checkpoint", net=None):
		return self.envmodel.load_model(dirname, name, net)

	def get_stats(self):
		return {**super().get_stats(), **self.envmodel.get_stats()}

class MPPIAgent(PTAgent):
	def __init__(self, state_size, action_size, config, gpu=True, load=None):
		super().__init__(state_size, action_size, config, MPPIController, gpu=gpu, load=load)

	def get_action(self, state, eps=None, sample=True):
		eps = self.eps if eps is None else eps
		if random.random() < eps: return super().get_action(state)
		action = self.network.get_action(np.array(state))
		return np.clip(action, -1, 1)

	def partition(self, x):
		num_splits = x.shape[0]//self.config.NUM_STEPS
		if num_splits == 0:
			arr = np.zeros([self.config.NUM_STEPS, *x.shape[1:]])
			arr[-x.shape[0]:] = x
			num_splits = 1
			x = arr
		arr = x[-num_splits*self.config.NUM_STEPS:].reshape(num_splits, self.config.NUM_STEPS, *x.shape[1:])
		return arr

	def train(self, state, action, next_state, reward, done):
		self.time = getattr(self, "time", 0) + 1
		if not hasattr(self, "buffers"): self.buffers = [[] for _ in done]
		for buffer, s, a, ns, r, d in zip(self.buffers, state, action, next_state, reward, done):
			buffer.append((s, a, s if d else ns, r, d))
			if not d: continue
			states, actions, next_states, rewards, dones = map(np.array, zip(*buffer))
			states, actions, next_states, rewards, dones = [self.partition(x) for x in (states, actions, next_states, rewards, dones)]
			buffer.clear()
			self.replay_buffer.extend(list(zip(states, actions, next_states, rewards, dones)), shuffle=False)
		if len(self.replay_buffer) > self.config.REPLAY_BATCH_SIZE and self.time % self.config.TRAIN_EVERY == 0:
			pbar = tqdm.trange(self.config.DYN_EPOCHS*self.config.REPLAY_BATCH_SIZE//self.config.BATCH_SIZE)
			for _ in pbar:
				states, actions, next_states, rewards, dones = self.replay_buffer.sample(self.config.BATCH_SIZE, dtype=self.to_tensor)[0]
				loss = self.network.optimize(states, actions, next_states, rewards, dones)
				pbar.set_postfix_str(f"Loss: {loss:.4f}")
			self.eps = max(self.eps * self.config.EPS_DECAY, self.config.EPS_MIN)


Step:       0, Reward:  -757.395 [1393.380], Avg:  -757.395 (1.000) <0-00:00:00> ({'r_t':    -1.1339, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:    1000, Reward:  -397.199 [ 798.429], Avg:  -577.297 (1.000) <0-00:00:25> ({'r_t': -2204.8764, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:    2000, Reward:  -233.641 [ 192.621], Avg:  -462.745 (1.000) <0-00:00:52> ({'r_t': -1762.7253, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:    3000, Reward:  -276.751 [ 328.984], Avg:  -416.247 (1.000) <0-00:01:21> ({'r_t': -2062.5072, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:    4000, Reward:  -529.660 [ 724.133], Avg:  -438.929 (1.000) <0-00:01:49> ({'r_t': -2227.1819, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:    5000, Reward:  -251.317 [ 177.809], Avg:  -407.661 (1.000) <0-00:02:18> ({'r_t': -2073.9880, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:    6000, Reward:  -307.996 [ 440.383], Avg:  -393.423 (1.000) <0-00:02:42> ({'r_t': -2216.0817, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:    7000, Reward:  -322.243 [ 441.025], Avg:  -384.525 (1.000) <0-00:03:08> ({'r_t': -1915.9129, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:    8000, Reward:  -340.316 [ 430.935], Avg:  -379.613 (1.000) <0-00:03:36> ({'r_t': -1892.5644, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:    9000, Reward:  -349.288 [ 293.318], Avg:  -376.581 (1.000) <0-00:04:05> ({'r_t': -1775.3597, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:   10000, Reward:  -286.080 [ 223.088], Avg:  -368.353 (1.000) <0-00:04:32> ({'r_t': -2083.4169, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:   11000, Reward:  -189.308 [ 104.760], Avg:  -353.433 (1.000) <0-00:05:01> ({'r_t': -1919.9782, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:   12000, Reward:  -341.956 [ 418.116], Avg:  -352.550 (1.000) <0-00:05:30> ({'r_t': -1982.5383, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:   13000, Reward:  -210.658 [ 118.842], Avg:  -342.415 (1.000) <0-00:05:55> ({'r_t': -2028.1489, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:   14000, Reward:  -239.534 [ 185.713], Avg:  -335.556 (1.000) <0-00:06:22> ({'r_t': -2051.6571, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:   15000, Reward:  -229.294 [ 174.654], Avg:  -328.915 (0.990) <0-00:07:01> ({'r_t': -1687.1501, 'eps':     0.9900, 'dyn_loss': 49868.7812, 'dot_loss':   365.0321, 'ddot_loss':    15.5126, 'rew_loss':   543.4038, 'lr':     0.0010, 'eps_e':     0.9900, 'lr_e':     0.0010})
Step:   16000, Reward:  -396.986 [ 579.363], Avg:  -332.919 (0.980) <0-00:07:39> ({'r_t': -1762.2392, 'eps':     0.9801, 'dyn_loss':  1143.4265, 'dot_loss':    29.4175, 'ddot_loss':     8.4720, 'rew_loss':   525.0207, 'lr':     0.0010, 'eps_e':     0.9801, 'lr_e':     0.0010})
Step:   17000, Reward:  -248.900 [ 220.661], Avg:  -328.251 (0.970) <0-00:08:17> ({'r_t': -1942.6596, 'eps':     0.9703, 'dyn_loss':   801.5726, 'dot_loss':    19.0401, 'ddot_loss':     6.5724, 'rew_loss':   499.2755, 'lr':     0.0010, 'eps_e':     0.9703, 'lr_e':     0.0010})
Step:   18000, Reward:  -164.859 [ 107.569], Avg:  -319.652 (0.961) <0-00:08:53> ({'r_t': -2097.4733, 'eps':     0.9606, 'dyn_loss':   592.2154, 'dot_loss':    14.0561, 'ddot_loss':     5.4067, 'rew_loss':   509.6961, 'lr':     0.0010, 'eps_e':     0.9606, 'lr_e':     0.0010})
Step:   19000, Reward:  -322.498 [ 574.285], Avg:  -319.794 (0.951) <0-00:09:29> ({'r_t': -2051.4533, 'eps':     0.9510, 'dyn_loss':   430.3643, 'dot_loss':    10.6288, 'ddot_loss':     4.6007, 'rew_loss':   544.7617, 'lr':     0.0010, 'eps_e':     0.9510, 'lr_e':     0.0010})
Step:   20000, Reward:  -219.059 [ 164.490], Avg:  -314.997 (0.941) <0-00:10:08> ({'r_t': -1642.4117, 'eps':     0.9415, 'dyn_loss':   319.2485, 'dot_loss':     8.1822, 'ddot_loss':     4.0070, 'rew_loss':   495.3563, 'lr':     0.0010, 'eps_e':     0.9415, 'lr_e':     0.0010})
Step:   21000, Reward:  -400.401 [ 763.454], Avg:  -318.879 (0.932) <0-00:10:46> ({'r_t': -1529.7564, 'eps':     0.9321, 'dyn_loss':   241.6023, 'dot_loss':     6.6030, 'ddot_loss':     3.6179, 'rew_loss':   479.7558, 'lr':     0.0010, 'eps_e':     0.9321, 'lr_e':     0.0010})
Step:   22000, Reward:  -219.763 [ 204.082], Avg:  -314.570 (0.923) <0-00:11:25> ({'r_t': -1669.3117, 'eps':     0.9227, 'dyn_loss':   189.7896, 'dot_loss':     5.4200, 'ddot_loss':     3.2748, 'rew_loss':   502.1791, 'lr':     0.0010, 'eps_e':     0.9227, 'lr_e':     0.0010})
Step:   23000, Reward:  -196.649 [ 142.546], Avg:  -309.656 (0.914) <0-00:12:05> ({'r_t': -1532.8836, 'eps':     0.9135, 'dyn_loss':   154.8776, 'dot_loss':     4.6068, 'ddot_loss':     3.0740, 'rew_loss':   455.6881, 'lr':     0.0010, 'eps_e':     0.9135, 'lr_e':     0.0010})
Step:   24000, Reward:  -217.953 [ 140.521], Avg:  -305.988 (0.904) <0-00:12:42> ({'r_t': -1538.3540, 'eps':     0.9044, 'dyn_loss':   127.4669, 'dot_loss':     3.9250, 'ddot_loss':     2.9290, 'rew_loss':   426.5307, 'lr':     0.0010, 'eps_e':     0.9044, 'lr_e':     0.0010})
Step:   25000, Reward:  -183.445 [ 136.110], Avg:  -301.275 (0.895) <0-00:13:20> ({'r_t': -1312.4271, 'eps':     0.8953, 'dyn_loss':   111.6867, 'dot_loss':     3.4849, 'ddot_loss':     2.8195, 'rew_loss':   394.2346, 'lr':     0.0010, 'eps_e':     0.8953, 'lr_e':     0.0010})
Step:   26000, Reward:  -225.387 [ 202.592], Avg:  -298.464 (0.886) <0-00:13:58> ({'r_t': -1264.7655, 'eps':     0.8864, 'dyn_loss':    99.1210, 'dot_loss':     3.1334, 'ddot_loss':     2.7004, 'rew_loss':   408.1525, 'lr':     0.0010, 'eps_e':     0.8864, 'lr_e':     0.0010})
Step:   27000, Reward:  -164.282 [ 102.953], Avg:  -293.672 (0.878) <0-00:14:35> ({'r_t': -1324.5972, 'eps':     0.8775, 'dyn_loss':    89.2123, 'dot_loss':     2.8898, 'ddot_loss':     2.6838, 'rew_loss':   389.0081, 'lr':     0.0010, 'eps_e':     0.8775, 'lr_e':     0.0010})
Step:   28000, Reward:  -219.929 [ 115.552], Avg:  -291.129 (0.869) <0-00:15:13> ({'r_t': -1453.6330, 'eps':     0.8687, 'dyn_loss':    80.3132, 'dot_loss':     2.6539, 'ddot_loss':     2.6310, 'rew_loss':   406.3593, 'lr':     0.0010, 'eps_e':     0.8687, 'lr_e':     0.0010})
Step:   29000, Reward:  -312.773 [ 485.980], Avg:  -291.851 (0.860) <0-00:15:55> ({'r_t': -1612.8496, 'eps':     0.8601, 'dyn_loss':    75.5371, 'dot_loss':     2.5116, 'ddot_loss':     2.6044, 'rew_loss':   370.9579, 'lr':     0.0010, 'eps_e':     0.8601, 'lr_e':     0.0010})
Step:   30000, Reward:  -243.575 [ 210.084], Avg:  -290.293 (0.851) <0-00:16:37> ({'r_t': -1331.6564, 'eps':     0.8515, 'dyn_loss':    68.8558, 'dot_loss':     2.3670, 'ddot_loss':     2.5736, 'rew_loss':   344.9810, 'lr':     0.0010, 'eps_e':     0.8515, 'lr_e':     0.0010})
Step:   31000, Reward:  -193.405 [ 122.116], Avg:  -287.266 (0.843) <0-00:17:16> ({'r_t': -1854.8447, 'eps':     0.8429, 'dyn_loss':    64.3371, 'dot_loss':     2.2470, 'ddot_loss':     2.5491, 'rew_loss':   369.2381, 'lr':     0.0010, 'eps_e':     0.8429, 'lr_e':     0.0010})
Step:   32000, Reward:  -260.575 [ 146.818], Avg:  -286.457 (0.835) <0-00:17:57> ({'r_t': -1424.0913, 'eps':     0.8345, 'dyn_loss':    66.2911, 'dot_loss':     2.2422, 'ddot_loss':     2.5642, 'rew_loss':   360.1324, 'lr':     0.0010, 'eps_e':     0.8345, 'lr_e':     0.0010})
Step:   33000, Reward:  -274.047 [ 188.638], Avg:  -286.092 (0.826) <0-00:18:40> ({'r_t': -1245.3621, 'eps':     0.8262, 'dyn_loss':    59.5367, 'dot_loss':     2.1112, 'ddot_loss':     2.5467, 'rew_loss':   334.4515, 'lr':     0.0010, 'eps_e':     0.8262, 'lr_e':     0.0010})
Step:   34000, Reward:  -216.246 [ 121.203], Avg:  -284.096 (0.818) <0-00:19:20> ({'r_t': -1303.7276, 'eps':     0.8179, 'dyn_loss':    56.6170, 'dot_loss':     2.0528, 'ddot_loss':     2.5376, 'rew_loss':   330.4711, 'lr':     0.0010, 'eps_e':     0.8179, 'lr_e':     0.0010})
Step:   35000, Reward:  -212.159 [ 101.047], Avg:  -282.098 (0.810) <0-00:20:01> ({'r_t': -1583.9381, 'eps':     0.8097, 'dyn_loss':    53.9122, 'dot_loss':     1.9790, 'ddot_loss':     2.5211, 'rew_loss':   338.1595, 'lr':     0.0010, 'eps_e':     0.8097, 'lr_e':     0.0010})
Step:   36000, Reward:  -268.352 [ 132.609], Avg:  -281.726 (0.802) <0-00:20:43> ({'r_t': -1288.5549, 'eps':     0.8016, 'dyn_loss':    52.5707, 'dot_loss':     1.9219, 'ddot_loss':     2.5208, 'rew_loss':   325.3778, 'lr':     0.0010, 'eps_e':     0.8016, 'lr_e':     0.0010})
Step:   37000, Reward:  -199.401 [ 177.939], Avg:  -279.560 (0.794) <0-00:21:27> ({'r_t': -1262.6393, 'eps':     0.7936, 'dyn_loss':    49.5765, 'dot_loss':     1.8909, 'ddot_loss':     2.5278, 'rew_loss':   309.6482, 'lr':     0.0010, 'eps_e':     0.7936, 'lr_e':     0.0010})
Step:   38000, Reward:  -244.767 [ 135.447], Avg:  -278.668 (0.786) <0-00:22:13> ({'r_t': -1347.9128, 'eps':     0.7857, 'dyn_loss':    46.3751, 'dot_loss':     1.8311, 'ddot_loss':     2.5046, 'rew_loss':   293.1989, 'lr':     0.0010, 'eps_e':     0.7857, 'lr_e':     0.0010})
Step:   39000, Reward:  -214.829 [ 109.957], Avg:  -277.072 (0.778) <0-00:22:55> ({'r_t': -1317.1961, 'eps':     0.7778, 'dyn_loss':    48.6479, 'dot_loss':     1.8240, 'ddot_loss':     2.5431, 'rew_loss':   301.7257, 'lr':     0.0010, 'eps_e':     0.7778, 'lr_e':     0.0010})
Step:   40000, Reward:  -164.861 [  63.201], Avg:  -274.335 (0.770) <0-00:23:37> ({'r_t': -1242.2790, 'eps':     0.7700, 'dyn_loss':    45.2507, 'dot_loss':     1.7804, 'ddot_loss':     2.5352, 'rew_loss':   286.6635, 'lr':     0.0010, 'eps_e':     0.7700, 'lr_e':     0.0010})
Step:   41000, Reward:  -192.850 [ 104.409], Avg:  -272.395 (0.762) <0-00:24:23> ({'r_t': -1219.0350, 'eps':     0.7623, 'dyn_loss':    43.2990, 'dot_loss':     1.7675, 'ddot_loss':     2.5748, 'rew_loss':   290.5283, 'lr':     0.0010, 'eps_e':     0.7623, 'lr_e':     0.0010})
Step:   42000, Reward:  -284.362 [ 505.378], Avg:  -272.673 (0.755) <0-00:25:09> ({'r_t': -1326.8124, 'eps':     0.7547, 'dyn_loss':    41.9551, 'dot_loss':     1.7093, 'ddot_loss':     2.5277, 'rew_loss':   276.2592, 'lr':     0.0010, 'eps_e':     0.7547, 'lr_e':     0.0010})
Step:   43000, Reward:  -288.180 [ 238.487], Avg:  -273.026 (0.747) <0-00:25:58> ({'r_t': -1377.6791, 'eps':     0.7472, 'dyn_loss':    43.6048, 'dot_loss':     1.7257, 'ddot_loss':     2.5871, 'rew_loss':   260.7937, 'lr':     0.0010, 'eps_e':     0.7472, 'lr_e':     0.0010})
Step:   44000, Reward:  -190.440 [  64.536], Avg:  -271.190 (0.740) <0-00:26:42> ({'r_t': -1520.4852, 'eps':     0.7397, 'dyn_loss':    42.2207, 'dot_loss':     1.6817, 'ddot_loss':     2.5682, 'rew_loss':   261.1544, 'lr':     0.0010, 'eps_e':     0.7397, 'lr_e':     0.0010})
Step:   45000, Reward:  -221.587 [ 104.644], Avg:  -270.112 (0.732) <0-00:27:28> ({'r_t': -1372.0656, 'eps':     0.7323, 'dyn_loss':    40.7859, 'dot_loss':     1.6808, 'ddot_loss':     2.5933, 'rew_loss':   271.4561, 'lr':     0.0010, 'eps_e':     0.7323, 'lr_e':     0.0010})
Step:   46000, Reward:  -181.916 [ 123.663], Avg:  -268.236 (0.725) <0-00:28:17> ({'r_t': -1239.9391, 'eps':     0.7250, 'dyn_loss':    39.2100, 'dot_loss':     1.6425, 'ddot_loss':     2.5838, 'rew_loss':   285.7117, 'lr':     0.0010, 'eps_e':     0.7250, 'lr_e':     0.0010})
Step:   47000, Reward:  -171.791 [  77.274], Avg:  -266.226 (0.718) <0-00:29:03> ({'r_t': -1310.8262, 'eps':     0.7177, 'dyn_loss':    38.5036, 'dot_loss':     1.6159, 'ddot_loss':     2.5804, 'rew_loss':   255.9527, 'lr':     0.0010, 'eps_e':     0.7177, 'lr_e':     0.0010})
Step:   48000, Reward:  -278.281 [ 187.407], Avg:  -266.472 (0.711) <0-00:29:55> ({'r_t': -1205.1746, 'eps':     0.7106, 'dyn_loss':    39.8272, 'dot_loss':     1.6222, 'ddot_loss':     2.6184, 'rew_loss':   236.0861, 'lr':     0.0010, 'eps_e':     0.7106, 'lr_e':     0.0010})
Step:   49000, Reward:  -187.948 [ 117.173], Avg:  -264.902 (0.703) <0-00:30:42> ({'r_t': -1229.5179, 'eps':     0.7034, 'dyn_loss':    38.2886, 'dot_loss':     1.5894, 'ddot_loss':     2.5898, 'rew_loss':   242.5164, 'lr':     0.0010, 'eps_e':     0.7034, 'lr_e':     0.0010})
Step:   50000, Reward:  -157.262 [  77.443], Avg:  -262.791 (0.696) <0-00:31:27> ({'r_t': -1164.5805, 'eps':     0.6964, 'dyn_loss':    37.1019, 'dot_loss':     1.5914, 'ddot_loss':     2.6377, 'rew_loss':   245.8244, 'lr':     0.0010, 'eps_e':     0.6964, 'lr_e':     0.0010})
Step:   51000, Reward:  -224.379 [ 202.752], Avg:  -262.053 (0.689) <0-00:32:19> ({'r_t': -1216.4044, 'eps':     0.6894, 'dyn_loss':    36.9786, 'dot_loss':     1.5837, 'ddot_loss':     2.6527, 'rew_loss':   259.2860, 'lr':     0.0010, 'eps_e':     0.6894, 'lr_e':     0.0010})
Step:   52000, Reward:  -273.969 [ 135.954], Avg:  -262.277 (0.683) <0-00:33:09> ({'r_t': -1246.3605, 'eps':     0.6826, 'dyn_loss':    36.1222, 'dot_loss':     1.5395, 'ddot_loss':     2.6036, 'rew_loss':   253.7760, 'lr':     0.0010, 'eps_e':     0.6826, 'lr_e':     0.0010})
Step:   53000, Reward:  -158.170 [  72.820], Avg:  -260.349 (0.676) <0-00:33:55> ({'r_t': -1212.2205, 'eps':     0.6757, 'dyn_loss':    37.2099, 'dot_loss':     1.5604, 'ddot_loss':     2.6708, 'rew_loss':   225.4030, 'lr':     0.0010, 'eps_e':     0.6757, 'lr_e':     0.0010})
Step:   54000, Reward:  -209.582 [ 101.359], Avg:  -259.426 (0.669) <0-00:34:46> ({'r_t': -1237.0811, 'eps':     0.6690, 'dyn_loss':    36.4799, 'dot_loss':     1.5399, 'ddot_loss':     2.6602, 'rew_loss':   235.7824, 'lr':     0.0010, 'eps_e':     0.6690, 'lr_e':     0.0010})
Step:   55000, Reward:  -182.293 [  87.680], Avg:  -258.049 (0.662) <0-00:35:34> ({'r_t': -1219.8995, 'eps':     0.6623, 'dyn_loss':    35.5474, 'dot_loss':     1.5227, 'ddot_loss':     2.6716, 'rew_loss':   207.9798, 'lr':     0.0010, 'eps_e':     0.6623, 'lr_e':     0.0010})
Step:   56000, Reward:  -237.420 [ 122.067], Avg:  -257.687 (0.656) <0-00:36:24> ({'r_t': -1187.7155, 'eps':     0.6557, 'dyn_loss':    33.2428, 'dot_loss':     1.5126, 'ddot_loss':     2.6824, 'rew_loss':   212.2499, 'lr':     0.0010, 'eps_e':     0.6557, 'lr_e':     0.0010})
Step:   57000, Reward:  -192.917 [ 129.740], Avg:  -256.570 (0.649) <0-00:37:16> ({'r_t': -1176.4549, 'eps':     0.6491, 'dyn_loss':    35.6804, 'dot_loss':     1.5287, 'ddot_loss':     2.7173, 'rew_loss':   209.8293, 'lr':     0.0010, 'eps_e':     0.6491, 'lr_e':     0.0010})
Step:   58000, Reward:  -179.595 [ 106.542], Avg:  -255.266 (0.643) <0-00:38:10> ({'r_t': -1330.1024, 'eps':     0.6426, 'dyn_loss':    33.6905, 'dot_loss':     1.5185, 'ddot_loss':     2.7294, 'rew_loss':   212.8933, 'lr':     0.0010, 'eps_e':     0.6426, 'lr_e':     0.0010})
Step:   59000, Reward:  -183.873 [  73.784], Avg:  -254.076 (0.636) <0-00:39:00> ({'r_t': -1483.0598, 'eps':     0.6362, 'dyn_loss':    33.6259, 'dot_loss':     1.5080, 'ddot_loss':     2.7334, 'rew_loss':   209.2480, 'lr':     0.0010, 'eps_e':     0.6362, 'lr_e':     0.0010})
Step:   60000, Reward:  -171.557 [  97.928], Avg:  -252.723 (0.630) <0-00:39:52> ({'r_t': -1202.8720, 'eps':     0.6298, 'dyn_loss':    33.0897, 'dot_loss':     1.4997, 'ddot_loss':     2.7454, 'rew_loss':   203.6164, 'lr':     0.0010, 'eps_e':     0.6298, 'lr_e':     0.0010})
Step:   61000, Reward:  -204.640 [ 108.377], Avg:  -251.948 (0.624) <0-00:40:44> ({'r_t': -1131.9070, 'eps':     0.6235, 'dyn_loss':    32.9213, 'dot_loss':     1.5022, 'ddot_loss':     2.7579, 'rew_loss':   204.7523, 'lr':     0.0010, 'eps_e':     0.6235, 'lr_e':     0.0010})
Step:   62000, Reward:  -244.366 [ 162.772], Avg:  -251.827 (0.617) <0-00:41:41> ({'r_t': -1186.9746, 'eps':     0.6173, 'dyn_loss':    32.4897, 'dot_loss':     1.4769, 'ddot_loss':     2.7367, 'rew_loss':   203.2433, 'lr':     0.0010, 'eps_e':     0.6173, 'lr_e':     0.0010})
Step:   63000, Reward:  -219.622 [ 119.270], Avg:  -251.324 (0.611) <0-00:42:35> ({'r_t': -1209.9067, 'eps':     0.6111, 'dyn_loss':    33.2490, 'dot_loss':     1.4876, 'ddot_loss':     2.7768, 'rew_loss':   193.8971, 'lr':     0.0010, 'eps_e':     0.6111, 'lr_e':     0.0010})
Step:   64000, Reward:  -151.923 [  85.091], Avg:  -249.795 (0.605) <0-00:43:27> ({'r_t': -1149.0621, 'eps':     0.6050, 'dyn_loss':    31.5407, 'dot_loss':     1.4944, 'ddot_loss':     2.8086, 'rew_loss':   199.6415, 'lr':     0.0010, 'eps_e':     0.6050, 'lr_e':     0.0010})
Step:   65000, Reward:  -195.293 [ 129.176], Avg:  -248.969 (0.599) <0-00:44:22> ({'r_t': -1224.1236, 'eps':     0.5990, 'dyn_loss':    30.6514, 'dot_loss':     1.4865, 'ddot_loss':     2.8052, 'rew_loss':   188.8193, 'lr':     0.0010, 'eps_e':     0.5990, 'lr_e':     0.0010})
Step:   66000, Reward:  -179.987 [  75.873], Avg:  -247.939 (0.593) <0-00:45:17> ({'r_t': -1156.4417, 'eps':     0.5930, 'dyn_loss':    31.9794, 'dot_loss':     1.4866, 'ddot_loss':     2.8032, 'rew_loss':   194.7754, 'lr':     0.0010, 'eps_e':     0.5930, 'lr_e':     0.0010})
Step:   67000, Reward:  -164.854 [ 147.757], Avg:  -246.718 (0.587) <0-00:46:18> ({'r_t': -1150.0340, 'eps':     0.5870, 'dyn_loss':    32.1863, 'dot_loss':     1.4752, 'ddot_loss':     2.7890, 'rew_loss':   191.0824, 'lr':     0.0010, 'eps_e':     0.5870, 'lr_e':     0.0010})
Step:   68000, Reward:  -177.317 [ 101.158], Avg:  -245.712 (0.581) <0-00:47:17> ({'r_t': -1146.5106, 'eps':     0.5812, 'dyn_loss':    29.6127, 'dot_loss':     1.4743, 'ddot_loss':     2.8131, 'rew_loss':   197.4666, 'lr':     0.0010, 'eps_e':     0.5812, 'lr_e':     0.0010})
Step:   69000, Reward:  -183.010 [ 166.252], Avg:  -244.816 (0.575) <0-00:48:18> ({'r_t': -1132.6049, 'eps':     0.5754, 'dyn_loss':    31.3319, 'dot_loss':     1.4838, 'ddot_loss':     2.8217, 'rew_loss':   191.1038, 'lr':     0.0010, 'eps_e':     0.5754, 'lr_e':     0.0010})
Step:   70000, Reward:  -209.410 [ 153.544], Avg:  -244.317 (0.570) <0-00:49:20> ({'r_t': -1174.3827, 'eps':     0.5696, 'dyn_loss':    28.6195, 'dot_loss':     1.4580, 'ddot_loss':     2.7964, 'rew_loss':   173.0747, 'lr':     0.0010, 'eps_e':     0.5696, 'lr_e':     0.0010})
Step:   71000, Reward:  -246.080 [ 137.502], Avg:  -244.342 (0.564) <0-00:50:17> ({'r_t': -1130.5056, 'eps':     0.5639, 'dyn_loss':    29.1165, 'dot_loss':     1.4712, 'ddot_loss':     2.8102, 'rew_loss':   185.3821, 'lr':     0.0010, 'eps_e':     0.5639, 'lr_e':     0.0010})
Step:   72000, Reward:  -194.462 [ 132.477], Avg:  -243.659 (0.558) <0-00:51:20> ({'r_t': -1165.6144, 'eps':     0.5583, 'dyn_loss':    27.9259, 'dot_loss':     1.4600, 'ddot_loss':     2.8022, 'rew_loss':   182.4186, 'lr':     0.0010, 'eps_e':     0.5583, 'lr_e':     0.0010})
Step:   73000, Reward:  -167.237 [  65.553], Avg:  -242.626 (0.553) <0-00:52:15> ({'r_t': -1100.1853, 'eps':     0.5527, 'dyn_loss':    26.9626, 'dot_loss':     1.4751, 'ddot_loss':     2.8343, 'rew_loss':   160.2078, 'lr':     0.0010, 'eps_e':     0.5527, 'lr_e':     0.0010})
Step:   74000, Reward:  -196.035 [ 130.012], Avg:  -242.005 (0.547) <0-00:53:16> ({'r_t': -1152.2925, 'eps':     0.5472, 'dyn_loss':    26.3605, 'dot_loss':     1.4570, 'ddot_loss':     2.7931, 'rew_loss':   161.5641, 'lr':     0.0010, 'eps_e':     0.5472, 'lr_e':     0.0010})
Step:   75000, Reward:  -271.610 [ 123.673], Avg:  -242.394 (0.542) <0-00:54:14> ({'r_t': -1227.1446, 'eps':     0.5417, 'dyn_loss':    25.6718, 'dot_loss':     1.4721, 'ddot_loss':     2.8283, 'rew_loss':   171.4514, 'lr':     0.0010, 'eps_e':     0.5417, 'lr_e':     0.0010})
Step:   76000, Reward:  -186.649 [  90.470], Avg:  -241.670 (0.536) <0-00:55:13> ({'r_t': -1063.0978, 'eps':     0.5363, 'dyn_loss':    23.3775, 'dot_loss':     1.4521, 'ddot_loss':     2.7940, 'rew_loss':   173.4567, 'lr':     0.0010, 'eps_e':     0.5363, 'lr_e':     0.0010})
Step:   77000, Reward:  -174.745 [ 113.334], Avg:  -240.812 (0.531) <0-00:56:15> ({'r_t': -1142.9258, 'eps':     0.5309, 'dyn_loss':    24.5548, 'dot_loss':     1.4741, 'ddot_loss':     2.8237, 'rew_loss':   160.4903, 'lr':     0.0010, 'eps_e':     0.5309, 'lr_e':     0.0010})
Step:   78000, Reward:  -207.367 [ 155.459], Avg:  -240.389 (0.526) <0-00:57:19> ({'r_t': -1131.9403, 'eps':     0.5256, 'dyn_loss':    21.9886, 'dot_loss':     1.4641, 'ddot_loss':     2.8004, 'rew_loss':   160.0492, 'lr':     0.0010, 'eps_e':     0.5256, 'lr_e':     0.0010})
Step:   79000, Reward:  -196.351 [ 119.721], Avg:  -239.838 (0.520) <0-00:58:23> ({'r_t': -1161.4625, 'eps':     0.5203, 'dyn_loss':    21.9091, 'dot_loss':     1.4643, 'ddot_loss':     2.7662, 'rew_loss':   154.3401, 'lr':     0.0010, 'eps_e':     0.5203, 'lr_e':     0.0010})
Step:   80000, Reward:  -225.214 [ 149.307], Avg:  -239.658 (0.515) <0-00:59:25> ({'r_t': -1105.3347, 'eps':     0.5151, 'dyn_loss':    22.6515, 'dot_loss':     1.4686, 'ddot_loss':     2.7402, 'rew_loss':   164.4138, 'lr':     0.0010, 'eps_e':     0.5151, 'lr_e':     0.0010})
Step:   81000, Reward:  -234.235 [ 139.282], Avg:  -239.592 (0.510) <0-01:00:26> ({'r_t': -1360.3571, 'eps':     0.5100, 'dyn_loss':    21.5042, 'dot_loss':     1.4877, 'ddot_loss':     2.7447, 'rew_loss':   159.7364, 'lr':     0.0010, 'eps_e':     0.5100, 'lr_e':     0.0010})
Step:   82000, Reward:  -184.310 [ 107.467], Avg:  -238.926 (0.505) <0-01:01:25> ({'r_t': -1045.2973, 'eps':     0.5049, 'dyn_loss':    21.0148, 'dot_loss':     1.4829, 'ddot_loss':     2.7024, 'rew_loss':   158.1508, 'lr':     0.0010, 'eps_e':     0.5049, 'lr_e':     0.0010})
Step:   83000, Reward:  -186.601 [ 149.091], Avg:  -238.303 (0.500) <0-01:02:29> ({'r_t': -1136.4549, 'eps':     0.4998, 'dyn_loss':    21.4063, 'dot_loss':     1.5209, 'ddot_loss':     2.7294, 'rew_loss':   162.5256, 'lr':     0.0010, 'eps_e':     0.4998, 'lr_e':     0.0010})
Step:   84000, Reward:  -194.295 [ 107.831], Avg:  -237.785 (0.495) <0-01:03:27> ({'r_t': -1092.8186, 'eps':     0.4948, 'dyn_loss':    20.1317, 'dot_loss':     1.5149, 'ddot_loss':     2.7020, 'rew_loss':   150.6728, 'lr':     0.0010, 'eps_e':     0.4948, 'lr_e':     0.0010})
Step:   85000, Reward:  -244.280 [ 158.456], Avg:  -237.860 (0.490) <0-01:04:35> ({'r_t': -1151.5215, 'eps':     0.4899, 'dyn_loss':    18.8379, 'dot_loss':     1.5175, 'ddot_loss':     2.6766, 'rew_loss':   145.7831, 'lr':     0.0010, 'eps_e':     0.4899, 'lr_e':     0.0010})
Step:   86000, Reward:  -214.367 [ 174.665], Avg:  -237.590 (0.485) <0-01:05:49> ({'r_t': -1103.0424, 'eps':     0.4850, 'dyn_loss':    19.2009, 'dot_loss':     1.5297, 'ddot_loss':     2.6736, 'rew_loss':   146.5669, 'lr':     0.0010, 'eps_e':     0.4850, 'lr_e':     0.0010})
Step:   87000, Reward:  -152.572 [ 100.862], Avg:  -236.624 (0.480) <0-01:06:54> ({'r_t': -1117.4472, 'eps':     0.4801, 'dyn_loss':    18.8807, 'dot_loss':     1.5296, 'ddot_loss':     2.6461, 'rew_loss':   155.9412, 'lr':     0.0010, 'eps_e':     0.4801, 'lr_e':     0.0010})
Step:   88000, Reward:  -182.250 [ 128.377], Avg:  -236.013 (0.475) <0-01:07:59> ({'r_t': -1127.0701, 'eps':     0.4753, 'dyn_loss':    16.9854, 'dot_loss':     1.5233, 'ddot_loss':     2.6239, 'rew_loss':   140.7076, 'lr':     0.0010, 'eps_e':     0.4753, 'lr_e':     0.0010})
Step:   89000, Reward:  -123.953 [  46.348], Avg:  -234.768 (0.471) <0-01:08:59> ({'r_t': -1116.2899, 'eps':     0.4706, 'dyn_loss':    19.9340, 'dot_loss':     1.5461, 'ddot_loss':     2.6298, 'rew_loss':   138.9318, 'lr':     0.0010, 'eps_e':     0.4706, 'lr_e':     0.0010})
Step:   90000, Reward:  -188.952 [  73.993], Avg:  -234.265 (0.466) <0-01:10:01> ({'r_t': -1142.7287, 'eps':     0.4659, 'dyn_loss':    16.4544, 'dot_loss':     1.5384, 'ddot_loss':     2.6108, 'rew_loss':   143.7344, 'lr':     0.0010, 'eps_e':     0.4659, 'lr_e':     0.0010})
Step:   91000, Reward:  -250.452 [ 122.466], Avg:  -234.441 (0.461) <0-01:11:11> ({'r_t': -1085.0531, 'eps':     0.4612, 'dyn_loss':    17.5881, 'dot_loss':     1.5448, 'ddot_loss':     2.5987, 'rew_loss':   131.0995, 'lr':     0.0010, 'eps_e':     0.4612, 'lr_e':     0.0010})
Step:   92000, Reward:  -203.877 [ 142.912], Avg:  -234.112 (0.457) <0-01:12:19> ({'r_t': -1049.2048, 'eps':     0.4566, 'dyn_loss':    16.2687, 'dot_loss':     1.5350, 'ddot_loss':     2.5625, 'rew_loss':   130.0432, 'lr':     0.0010, 'eps_e':     0.4566, 'lr_e':     0.0010})
Step:   93000, Reward:  -168.897 [  63.915], Avg:  -233.418 (0.452) <0-01:13:20> ({'r_t': -1028.8645, 'eps':     0.4520, 'dyn_loss':    15.6716, 'dot_loss':     1.5345, 'ddot_loss':     2.5465, 'rew_loss':   130.5025, 'lr':     0.0010, 'eps_e':     0.4520, 'lr_e':     0.0010})
Step:   94000, Reward:  -188.006 [ 145.540], Avg:  -232.940 (0.448) <0-01:14:29> ({'r_t': -1109.4782, 'eps':     0.4475, 'dyn_loss':    15.2443, 'dot_loss':     1.5670, 'ddot_loss':     2.5833, 'rew_loss':   140.9788, 'lr':     0.0010, 'eps_e':     0.4475, 'lr_e':     0.0010})
Step:   95000, Reward:  -265.316 [ 105.517], Avg:  -233.278 (0.443) <0-01:15:34> ({'r_t': -1066.0517, 'eps':     0.4430, 'dyn_loss':    15.5420, 'dot_loss':     1.5590, 'ddot_loss':     2.5590, 'rew_loss':   157.5213, 'lr':     0.0010, 'eps_e':     0.4430, 'lr_e':     0.0010})
Step:   96000, Reward:  -165.398 [ 101.728], Avg:  -232.578 (0.439) <0-01:16:40> ({'r_t': -1089.2163, 'eps':     0.4386, 'dyn_loss':    15.2733, 'dot_loss':     1.5683, 'ddot_loss':     2.5659, 'rew_loss':   123.7205, 'lr':     0.0010, 'eps_e':     0.4386, 'lr_e':     0.0010})
Step:   97000, Reward:  -159.099 [  64.452], Avg:  -231.828 (0.434) <0-01:17:42> ({'r_t': -1072.5344, 'eps':     0.4342, 'dyn_loss':    15.3646, 'dot_loss':     1.5544, 'ddot_loss':     2.5160, 'rew_loss':   121.1520, 'lr':     0.0010, 'eps_e':     0.4342, 'lr_e':     0.0010})
Step:   98000, Reward:  -221.412 [ 107.373], Avg:  -231.723 (0.430) <0-01:18:50> ({'r_t': -1119.1547, 'eps':     0.4299, 'dyn_loss':    14.3364, 'dot_loss':     1.5496, 'ddot_loss':     2.4966, 'rew_loss':   153.5331, 'lr':     0.0010, 'eps_e':     0.4299, 'lr_e':     0.0010})
Step:   99000, Reward:  -188.958 [ 108.747], Avg:  -231.295 (0.426) <0-01:19:59> ({'r_t': -1089.1809, 'eps':     0.4256, 'dyn_loss':    15.7043, 'dot_loss':     1.5718, 'ddot_loss':     2.5238, 'rew_loss':   120.9536, 'lr':     0.0010, 'eps_e':     0.4256, 'lr_e':     0.0010})
Step:  100000, Reward:  -201.182 [ 145.573], Avg:  -230.997 (0.421) <0-01:21:08> ({'r_t': -1117.4957, 'eps':     0.4213, 'dyn_loss':    13.7751, 'dot_loss':     1.5564, 'ddot_loss':     2.5019, 'rew_loss':   134.8770, 'lr':     0.0010, 'eps_e':     0.4213, 'lr_e':     0.0010})
Step:  101000, Reward:  -198.166 [  80.889], Avg:  -230.675 (0.417) <0-01:22:14> ({'r_t': -1103.9658, 'eps':     0.4171, 'dyn_loss':    13.7903, 'dot_loss':     1.5607, 'ddot_loss':     2.4855, 'rew_loss':   127.5082, 'lr':     0.0010, 'eps_e':     0.4171, 'lr_e':     0.0010})
Step:  102000, Reward:  -143.257 [  60.393], Avg:  -229.826 (0.413) <0-01:23:15> ({'r_t': -1017.2093, 'eps':     0.4129, 'dyn_loss':    13.1149, 'dot_loss':     1.5384, 'ddot_loss':     2.4559, 'rew_loss':   119.6895, 'lr':     0.0010, 'eps_e':     0.4129, 'lr_e':     0.0010})
Step:  103000, Reward:  -214.339 [ 139.478], Avg:  -229.677 (0.409) <0-01:24:29> ({'r_t': -1019.1181, 'eps':     0.4088, 'dyn_loss':    14.3517, 'dot_loss':     1.5557, 'ddot_loss':     2.4570, 'rew_loss':   112.3255, 'lr':     0.0010, 'eps_e':     0.4088, 'lr_e':     0.0010})
Step:  104000, Reward:  -264.860 [ 121.194], Avg:  -230.012 (0.405) <0-01:25:39> ({'r_t': -1083.5939, 'eps':     0.4047, 'dyn_loss':    12.8028, 'dot_loss':     1.5554, 'ddot_loss':     2.4563, 'rew_loss':   126.5007, 'lr':     0.0010, 'eps_e':     0.4047, 'lr_e':     0.0010})
Step:  105000, Reward:  -197.103 [ 104.539], Avg:  -229.702 (0.401) <0-01:26:50> ({'r_t': -1041.2427, 'eps':     0.4007, 'dyn_loss':    13.0532, 'dot_loss':     1.5502, 'ddot_loss':     2.4445, 'rew_loss':   123.4786, 'lr':     0.0010, 'eps_e':     0.4007, 'lr_e':     0.0010})
Step:  106000, Reward:  -249.784 [ 187.379], Avg:  -229.890 (0.397) <0-01:28:01> ({'r_t': -1106.2760, 'eps':     0.3967, 'dyn_loss':    13.2373, 'dot_loss':     1.5596, 'ddot_loss':     2.4467, 'rew_loss':   104.9679, 'lr':     0.0010, 'eps_e':     0.3967, 'lr_e':     0.0010})
Step:  107000, Reward:  -172.163 [  72.931], Avg:  -229.355 (0.393) <0-01:29:05> ({'r_t': -1085.0161, 'eps':     0.3927, 'dyn_loss':    13.3131, 'dot_loss':     1.5783, 'ddot_loss':     2.4594, 'rew_loss':   124.2418, 'lr':     0.0010, 'eps_e':     0.3927, 'lr_e':     0.0010})
Step:  108000, Reward:  -219.739 [ 148.627], Avg:  -229.267 (0.389) <0-01:30:15> ({'r_t': -1081.7545, 'eps':     0.3888, 'dyn_loss':    13.3087, 'dot_loss':     1.5687, 'ddot_loss':     2.4534, 'rew_loss':   117.4310, 'lr':     0.0010, 'eps_e':     0.3888, 'lr_e':     0.0010})
Step:  109000, Reward:  -224.898 [ 118.845], Avg:  -229.227 (0.385) <0-01:31:25> ({'r_t': -1016.7662, 'eps':     0.3849, 'dyn_loss':    12.2085, 'dot_loss':     1.5448, 'ddot_loss':     2.4118, 'rew_loss':   103.8385, 'lr':     0.0010, 'eps_e':     0.3849, 'lr_e':     0.0010})
Step:  110000, Reward:  -193.291 [ 121.918], Avg:  -228.904 (0.381) <0-01:32:38> ({'r_t': -1043.8031, 'eps':     0.3810, 'dyn_loss':    12.7960, 'dot_loss':     1.5687, 'ddot_loss':     2.4412, 'rew_loss':   121.8639, 'lr':     0.0010, 'eps_e':     0.3810, 'lr_e':     0.0010})
Step:  111000, Reward:  -210.526 [ 144.574], Avg:  -228.739 (0.377) <0-01:33:54> ({'r_t':  -997.9343, 'eps':     0.3772, 'dyn_loss':    13.0305, 'dot_loss':     1.5677, 'ddot_loss':     2.4226, 'rew_loss':   111.4200, 'lr':     0.0010, 'eps_e':     0.3772, 'lr_e':     0.0010})
Step:  112000, Reward:  -290.273 [ 220.282], Avg:  -229.284 (0.373) <0-01:35:10> ({'r_t': -1091.8224, 'eps':     0.3735, 'dyn_loss':    12.6224, 'dot_loss':     1.5547, 'ddot_loss':     2.4109, 'rew_loss':   116.1770, 'lr':     0.0010, 'eps_e':     0.3735, 'lr_e':     0.0010})
Step:  113000, Reward:  -253.617 [ 148.645], Avg:  -229.497 (0.370) <0-01:36:26> ({'r_t': -1078.1582, 'eps':     0.3697, 'dyn_loss':    11.4972, 'dot_loss':     1.5514, 'ddot_loss':     2.3922, 'rew_loss':   121.0049, 'lr':     0.0010, 'eps_e':     0.3697, 'lr_e':     0.0010})
Step:  114000, Reward:  -219.907 [ 106.370], Avg:  -229.414 (0.366) <0-01:37:37> ({'r_t': -1040.6582, 'eps':     0.3660, 'dyn_loss':    11.5563, 'dot_loss':     1.5623, 'ddot_loss':     2.3968, 'rew_loss':   110.4724, 'lr':     0.0010, 'eps_e':     0.3660, 'lr_e':     0.0010})
Step:  115000, Reward:  -243.643 [ 138.276], Avg:  -229.537 (0.362) <0-01:38:49> ({'r_t': -1133.3007, 'eps':     0.3624, 'dyn_loss':    11.3175, 'dot_loss':     1.5679, 'ddot_loss':     2.4021, 'rew_loss':   111.9173, 'lr':     0.0010, 'eps_e':     0.3624, 'lr_e':     0.0010})
Step:  116000, Reward:  -205.935 [  96.662], Avg:  -229.335 (0.359) <0-01:39:59> ({'r_t': -1049.7068, 'eps':     0.3587, 'dyn_loss':    12.5710, 'dot_loss':     1.5689, 'ddot_loss':     2.3872, 'rew_loss':   115.5779, 'lr':     0.0010, 'eps_e':     0.3587, 'lr_e':     0.0010})
Step:  117000, Reward:  -170.616 [  96.508], Avg:  -228.837 (0.355) <0-01:41:09> ({'r_t': -1118.6073, 'eps':     0.3552, 'dyn_loss':    11.8763, 'dot_loss':     1.5535, 'ddot_loss':     2.3654, 'rew_loss':   113.1432, 'lr':     0.0010, 'eps_e':     0.3552, 'lr_e':     0.0010})
Step:  118000, Reward:  -209.957 [ 136.730], Avg:  -228.679 (0.352) <0-01:42:25> ({'r_t': -1033.5046, 'eps':     0.3516, 'dyn_loss':    11.4609, 'dot_loss':     1.5688, 'ddot_loss':     2.3998, 'rew_loss':   101.7079, 'lr':     0.0010, 'eps_e':     0.3516, 'lr_e':     0.0010})
Step:  119000, Reward:  -230.208 [ 135.925], Avg:  -228.691 (0.348) <0-01:43:41> ({'r_t': -1064.4653, 'eps':     0.3481, 'dyn_loss':    10.6793, 'dot_loss':     1.5474, 'ddot_loss':     2.3376, 'rew_loss':    94.8345, 'lr':     0.0010, 'eps_e':     0.3481, 'lr_e':     0.0010})
Step:  120000, Reward:  -242.367 [ 169.776], Avg:  -228.804 (0.345) <0-01:44:55> ({'r_t': -1047.5244, 'eps':     0.3446, 'dyn_loss':     9.8036, 'dot_loss':     1.5447, 'ddot_loss':     2.3462, 'rew_loss':   107.4200, 'lr':     0.0010, 'eps_e':     0.3446, 'lr_e':     0.0010})
Step:  121000, Reward:  -275.124 [ 150.542], Avg:  -229.184 (0.341) <0-01:46:09> ({'r_t': -1042.0591, 'eps':     0.3412, 'dyn_loss':    10.3465, 'dot_loss':     1.5574, 'ddot_loss':     2.3609, 'rew_loss':    97.2924, 'lr':     0.0010, 'eps_e':     0.3412, 'lr_e':     0.0010})
Step:  122000, Reward:  -187.955 [ 151.092], Avg:  -228.849 (0.338) <0-01:47:23> ({'r_t': -1013.4521, 'eps':     0.3378, 'dyn_loss':     9.7115, 'dot_loss':     1.5579, 'ddot_loss':     2.3472, 'rew_loss':    96.8944, 'lr':     0.0010, 'eps_e':     0.3378, 'lr_e':     0.0010})
Step:  123000, Reward:  -224.090 [ 175.343], Avg:  -228.811 (0.334) <0-01:48:42> ({'r_t': -1070.9910, 'eps':     0.3344, 'dyn_loss':    10.8304, 'dot_loss':     1.5644, 'ddot_loss':     2.3563, 'rew_loss':   115.2753, 'lr':     0.0010, 'eps_e':     0.3344, 'lr_e':     0.0010})
Step:  124000, Reward:  -291.638 [ 199.580], Avg:  -229.313 (0.331) <0-01:50:00> ({'r_t': -1075.7183, 'eps':     0.3310, 'dyn_loss':     9.8833, 'dot_loss':     1.5564, 'ddot_loss':     2.3486, 'rew_loss':   103.1260, 'lr':     0.0010, 'eps_e':     0.3310, 'lr_e':     0.0010})
Step:  125000, Reward:  -284.490 [ 166.810], Avg:  -229.751 (0.328) <0-01:51:20> ({'r_t': -1046.6307, 'eps':     0.3277, 'dyn_loss':    10.4853, 'dot_loss':     1.5893, 'ddot_loss':     2.3781, 'rew_loss':   108.8672, 'lr':     0.0010, 'eps_e':     0.3277, 'lr_e':     0.0010})
Step:  126000, Reward:  -209.279 [ 192.953], Avg:  -229.590 (0.324) <0-01:52:38> ({'r_t': -1067.2559, 'eps':     0.3244, 'dyn_loss':    10.3327, 'dot_loss':     1.5576, 'ddot_loss':     2.3352, 'rew_loss':    94.4751, 'lr':     0.0010, 'eps_e':     0.3244, 'lr_e':     0.0010})
Step:  127000, Reward:  -211.030 [ 162.746], Avg:  -229.445 (0.321) <0-01:53:53> ({'r_t': -1014.4819, 'eps':     0.3212, 'dyn_loss':    10.4926, 'dot_loss':     1.5784, 'ddot_loss':     2.3404, 'rew_loss':    92.8769, 'lr':     0.0010, 'eps_e':     0.3212, 'lr_e':     0.0010})
Step:  128000, Reward:  -282.422 [ 183.507], Avg:  -229.856 (0.318) <0-01:55:15> ({'r_t': -1055.0033, 'eps':     0.3180, 'dyn_loss':    10.7901, 'dot_loss':     1.5632, 'ddot_loss':     2.3194, 'rew_loss':    97.9547, 'lr':     0.0010, 'eps_e':     0.3180, 'lr_e':     0.0010})
Step:  129000, Reward:  -141.900 [  55.324], Avg:  -229.179 (0.315) <0-01:56:25> ({'r_t': -1079.4424, 'eps':     0.3148, 'dyn_loss':     9.5543, 'dot_loss':     1.5588, 'ddot_loss':     2.3087, 'rew_loss':    93.6143, 'lr':     0.0010, 'eps_e':     0.3148, 'lr_e':     0.0010})
Step:  130000, Reward:  -249.897 [ 116.505], Avg:  -229.337 (0.312) <0-01:57:41> ({'r_t':  -980.3098, 'eps':     0.3117, 'dyn_loss':     9.2753, 'dot_loss':     1.5710, 'ddot_loss':     2.3180, 'rew_loss':    97.3693, 'lr':     0.0010, 'eps_e':     0.3117, 'lr_e':     0.0010})
Step:  131000, Reward:  -215.149 [ 111.666], Avg:  -229.230 (0.309) <0-01:58:57> ({'r_t': -1022.8475, 'eps':     0.3085, 'dyn_loss':    10.5413, 'dot_loss':     1.5727, 'ddot_loss':     2.3111, 'rew_loss':    94.0716, 'lr':     0.0010, 'eps_e':     0.3085, 'lr_e':     0.0010})
Step:  132000, Reward:  -187.041 [ 119.728], Avg:  -228.912 (0.305) <0-02:00:14> ({'r_t': -1017.2331, 'eps':     0.3055, 'dyn_loss':    11.0213, 'dot_loss':     1.5774, 'ddot_loss':     2.3277, 'rew_loss':    95.8006, 'lr':     0.0010, 'eps_e':     0.3055, 'lr_e':     0.0010})
Step:  133000, Reward:  -185.968 [ 125.760], Avg:  -228.592 (0.302) <0-02:01:30> ({'r_t':  -988.1970, 'eps':     0.3024, 'dyn_loss':    10.6297, 'dot_loss':     1.5795, 'ddot_loss':     2.3082, 'rew_loss':    88.0420, 'lr':     0.0010, 'eps_e':     0.3024, 'lr_e':     0.0010})
Step:  134000, Reward:  -160.103 [  86.791], Avg:  -228.085 (0.299) <0-02:02:42> ({'r_t':  -971.3737, 'eps':     0.2994, 'dyn_loss':     9.1815, 'dot_loss':     1.5669, 'ddot_loss':     2.2938, 'rew_loss':    96.0758, 'lr':     0.0010, 'eps_e':     0.2994, 'lr_e':     0.0010})
Step:  135000, Reward:  -144.449 [  61.410], Avg:  -227.470 (0.296) <0-02:03:55> ({'r_t':  -985.7169, 'eps':     0.2964, 'dyn_loss':    10.5132, 'dot_loss':     1.5736, 'ddot_loss':     2.3195, 'rew_loss':    94.4145, 'lr':     0.0010, 'eps_e':     0.2964, 'lr_e':     0.0010})
Step:  136000, Reward:  -210.750 [ 120.023], Avg:  -227.348 (0.293) <0-02:05:14> ({'r_t':  -991.2510, 'eps':     0.2934, 'dyn_loss':    10.0241, 'dot_loss':     1.5830, 'ddot_loss':     2.2990, 'rew_loss':    89.8952, 'lr':     0.0010, 'eps_e':     0.2934, 'lr_e':     0.0010})
Step:  137000, Reward:  -218.994 [ 174.913], Avg:  -227.287 (0.290) <0-02:06:34> ({'r_t':  -984.0211, 'eps':     0.2905, 'dyn_loss':     9.2489, 'dot_loss':     1.5681, 'ddot_loss':     2.2802, 'rew_loss':    88.7872, 'lr':     0.0010, 'eps_e':     0.2905, 'lr_e':     0.0010})
Step:  138000, Reward:  -181.328 [  84.600], Avg:  -226.956 (0.288) <0-02:07:46> ({'r_t': -1047.0366, 'eps':     0.2876, 'dyn_loss':     9.3235, 'dot_loss':     1.5771, 'ddot_loss':     2.2733, 'rew_loss':    88.2636, 'lr':     0.0010, 'eps_e':     0.2876, 'lr_e':     0.0010})
Step:  139000, Reward:  -221.895 [ 108.761], Avg:  -226.920 (0.285) <0-02:09:08> ({'r_t':  -948.5034, 'eps':     0.2847, 'dyn_loss':    10.4500, 'dot_loss':     1.5779, 'ddot_loss':     2.2831, 'rew_loss':    86.8374, 'lr':     0.0010, 'eps_e':     0.2847, 'lr_e':     0.0010})
Step:  140000, Reward:  -192.015 [ 122.960], Avg:  -226.673 (0.282) <0-02:10:28> ({'r_t':  -964.1251, 'eps':     0.2819, 'dyn_loss':    11.1878, 'dot_loss':     1.5916, 'ddot_loss':     2.3208, 'rew_loss':    94.6810, 'lr':     0.0010, 'eps_e':     0.2819, 'lr_e':     0.0010})
Step:  141000, Reward:  -179.850 [ 138.709], Avg:  -226.343 (0.279) <0-02:11:50> ({'r_t':  -983.0534, 'eps':     0.2790, 'dyn_loss':    10.2369, 'dot_loss':     1.5883, 'ddot_loss':     2.3154, 'rew_loss':    84.2060, 'lr':     0.0010, 'eps_e':     0.2790, 'lr_e':     0.0010})
Step:  142000, Reward:  -179.633 [  93.651], Avg:  -226.016 (0.276) <0-02:13:04> ({'r_t': -1004.7609, 'eps':     0.2763, 'dyn_loss':    39.0836, 'dot_loss':     1.8503, 'ddot_loss':     2.5056, 'rew_loss':    86.0963, 'lr':     0.0010, 'eps_e':     0.2763, 'lr_e':     0.0010})
Step:  143000, Reward:  -207.042 [ 113.892], Avg:  -225.885 (0.273) <0-02:14:26> ({'r_t': -1032.9853, 'eps':     0.2735, 'dyn_loss':    59.1389, 'dot_loss':     2.1988, 'ddot_loss':     3.3907, 'rew_loss':   102.4141, 'lr':     0.0010, 'eps_e':     0.2735, 'lr_e':     0.0010})
Step:  144000, Reward:  -290.136 [ 161.711], Avg:  -226.328 (0.271) <0-02:15:45> ({'r_t': -1002.2312, 'eps':     0.2708, 'dyn_loss':    23.8662, 'dot_loss':     1.6652, 'ddot_loss':     2.8291, 'rew_loss':   108.4707, 'lr':     0.0010, 'eps_e':     0.2708, 'lr_e':     0.0010})
Step:  145000, Reward:  -203.717 [ 114.581], Avg:  -226.173 (0.268) <0-02:17:06> ({'r_t':  -967.5531, 'eps':     0.2680, 'dyn_loss':    18.7364, 'dot_loss':     1.5900, 'ddot_loss':     2.6886, 'rew_loss':    96.9423, 'lr':     0.0010, 'eps_e':     0.2680, 'lr_e':     0.0010})
Step:  146000, Reward:  -225.953 [ 125.313], Avg:  -226.171 (0.265) <0-02:18:23> ({'r_t':  -960.1504, 'eps':     0.2654, 'dyn_loss':    17.7464, 'dot_loss':     1.5812, 'ddot_loss':     2.6313, 'rew_loss':   105.6517, 'lr':     0.0010, 'eps_e':     0.2654, 'lr_e':     0.0010})
Step:  147000, Reward:  -149.919 [ 118.701], Avg:  -225.656 (0.263) <0-02:19:45> ({'r_t':  -980.0079, 'eps':     0.2627, 'dyn_loss':    15.1174, 'dot_loss':     1.5629, 'ddot_loss':     2.5720, 'rew_loss':    91.2792, 'lr':     0.0010, 'eps_e':     0.2627, 'lr_e':     0.0010})
Step:  148000, Reward:  -353.250 [ 198.278], Avg:  -226.512 (0.260) <0-02:21:10> ({'r_t':  -888.7755, 'eps':     0.2601, 'dyn_loss':    14.8663, 'dot_loss':     1.5532, 'ddot_loss':     2.5285, 'rew_loss':    82.4109, 'lr':     0.0010, 'eps_e':     0.2601, 'lr_e':     0.0010})
Step:  149000, Reward:  -228.102 [ 169.995], Avg:  -226.523 (0.257) <0-02:22:35> ({'r_t':  -957.0662, 'eps':     0.2575, 'dyn_loss':    14.2382, 'dot_loss':     1.5846, 'ddot_loss':     2.5475, 'rew_loss':    90.8217, 'lr':     0.0010, 'eps_e':     0.2575, 'lr_e':     0.0010})
Step:  150000, Reward:  -234.272 [ 153.228], Avg:  -226.574 (0.255) <0-02:23:58> ({'r_t':  -908.0907, 'eps':     0.2549, 'dyn_loss':    13.7082, 'dot_loss':     1.5603, 'ddot_loss':     2.4758, 'rew_loss':    82.1015, 'lr':     0.0010, 'eps_e':     0.2549, 'lr_e':     0.0010})
Step:  151000, Reward:  -162.768 [  90.572], Avg:  -226.155 (0.252) <0-02:25:23> ({'r_t':  -966.9262, 'eps':     0.2524, 'dyn_loss':    13.5313, 'dot_loss':     1.5785, 'ddot_loss':     2.4805, 'rew_loss':    73.5457, 'lr':     0.0010, 'eps_e':     0.2524, 'lr_e':     0.0010})
Step:  152000, Reward:  -216.242 [ 136.513], Avg:  -226.090 (0.250) <0-02:26:45> ({'r_t': -1027.6281, 'eps':     0.2498, 'dyn_loss':    12.2785, 'dot_loss':     1.5743, 'ddot_loss':     2.4541, 'rew_loss':    84.0984, 'lr':     0.0010, 'eps_e':     0.2498, 'lr_e':     0.0010})
Step:  153000, Reward:  -212.080 [ 165.398], Avg:  -225.999 (0.247) <0-02:28:10> ({'r_t':  -928.7804, 'eps':     0.2473, 'dyn_loss':    13.4681, 'dot_loss':     1.5723, 'ddot_loss':     2.4162, 'rew_loss':    78.5676, 'lr':     0.0010, 'eps_e':     0.2473, 'lr_e':     0.0010})
Step:  154000, Reward:  -135.198 [  57.333], Avg:  -225.413 (0.245) <0-02:29:24> ({'r_t':  -942.5762, 'eps':     0.2449, 'dyn_loss':    12.0853, 'dot_loss':     1.5666, 'ddot_loss':     2.3964, 'rew_loss':    75.5779, 'lr':     0.0010, 'eps_e':     0.2449, 'lr_e':     0.0010})
Step:  155000, Reward:  -179.713 [ 121.594], Avg:  -225.120 (0.242) <0-02:30:46> ({'r_t':  -936.7169, 'eps':     0.2424, 'dyn_loss':    12.5291, 'dot_loss':     1.5751, 'ddot_loss':     2.4006, 'rew_loss':    74.4711, 'lr':     0.0010, 'eps_e':     0.2424, 'lr_e':     0.0010})
Step:  156000, Reward:  -146.740 [  80.348], Avg:  -224.621 (0.240) <0-02:32:06> ({'r_t':  -958.1371, 'eps':     0.2400, 'dyn_loss':    12.0507, 'dot_loss':     1.5861, 'ddot_loss':     2.4053, 'rew_loss':    76.5505, 'lr':     0.0010, 'eps_e':     0.2400, 'lr_e':     0.0010})
Step:  157000, Reward:  -219.436 [ 137.983], Avg:  -224.588 (0.238) <0-02:33:31> ({'r_t':  -874.8585, 'eps':     0.2376, 'dyn_loss':    11.5789, 'dot_loss':     1.5698, 'ddot_loss':     2.3470, 'rew_loss':    74.3804, 'lr':     0.0010, 'eps_e':     0.2376, 'lr_e':     0.0010})
Step:  158000, Reward:  -203.357 [ 145.953], Avg:  -224.455 (0.235) <0-02:34:58> ({'r_t':  -948.4408, 'eps':     0.2352, 'dyn_loss':    11.3111, 'dot_loss':     1.5860, 'ddot_loss':     2.3874, 'rew_loss':    76.4059, 'lr':     0.0010, 'eps_e':     0.2352, 'lr_e':     0.0010})
Step:  159000, Reward:  -224.584 [ 170.014], Avg:  -224.455 (0.233) <0-02:36:22> ({'r_t':  -913.4742, 'eps':     0.2329, 'dyn_loss':    11.5279, 'dot_loss':     1.5874, 'ddot_loss':     2.3647, 'rew_loss':    88.6535, 'lr':     0.0010, 'eps_e':     0.2329, 'lr_e':     0.0010})
Step:  160000, Reward:  -223.415 [ 145.312], Avg:  -224.449 (0.231) <0-02:37:45> ({'r_t':  -950.9748, 'eps':     0.2305, 'dyn_loss':    11.9911, 'dot_loss':     1.5730, 'ddot_loss':     2.3318, 'rew_loss':    72.0372, 'lr':     0.0010, 'eps_e':     0.2305, 'lr_e':     0.0010})
Step:  161000, Reward:  -165.467 [ 141.547], Avg:  -224.085 (0.228) <0-02:39:09> ({'r_t':  -923.8533, 'eps':     0.2282, 'dyn_loss':    10.8192, 'dot_loss':     1.5763, 'ddot_loss':     2.3435, 'rew_loss':    87.8662, 'lr':     0.0010, 'eps_e':     0.2282, 'lr_e':     0.0010})
Step:  162000, Reward:  -204.279 [ 115.747], Avg:  -223.963 (0.226) <0-02:40:30> ({'r_t':  -887.9349, 'eps':     0.2259, 'dyn_loss':    11.0593, 'dot_loss':     1.5962, 'ddot_loss':     2.3592, 'rew_loss':    82.6937, 'lr':     0.0010, 'eps_e':     0.2259, 'lr_e':     0.0010})
Step:  163000, Reward:  -224.557 [ 128.557], Avg:  -223.967 (0.224) <0-02:41:53> ({'r_t':  -851.9646, 'eps':     0.2237, 'dyn_loss':    11.5241, 'dot_loss':     1.5868, 'ddot_loss':     2.3325, 'rew_loss':    87.1740, 'lr':     0.0010, 'eps_e':     0.2237, 'lr_e':     0.0010})
Step:  164000, Reward:  -222.821 [ 120.868], Avg:  -223.960 (0.221) <0-02:43:20> ({'r_t':  -923.9360, 'eps':     0.2215, 'dyn_loss':    10.5550, 'dot_loss':     1.5993, 'ddot_loss':     2.3440, 'rew_loss':    72.3895, 'lr':     0.0010, 'eps_e':     0.2215, 'lr_e':     0.0010})
Step:  165000, Reward:  -199.645 [ 109.756], Avg:  -223.813 (0.219) <0-02:44:40> ({'r_t':  -887.0705, 'eps':     0.2192, 'dyn_loss':    11.4819, 'dot_loss':     1.5851, 'ddot_loss':     2.3097, 'rew_loss':    84.3055, 'lr':     0.0010, 'eps_e':     0.2192, 'lr_e':     0.0010})
Step:  166000, Reward:  -156.662 [  92.030], Avg:  -223.411 (0.217) <0-02:46:00> ({'r_t':  -884.1923, 'eps':     0.2170, 'dyn_loss':    10.5796, 'dot_loss':     1.5813, 'ddot_loss':     2.2967, 'rew_loss':    73.1660, 'lr':     0.0010, 'eps_e':     0.2170, 'lr_e':     0.0010})
Step:  167000, Reward:  -231.796 [ 170.826], Avg:  -223.461 (0.215) <0-02:47:28> ({'r_t':  -822.8904, 'eps':     0.2149, 'dyn_loss':    10.7428, 'dot_loss':     1.5952, 'ddot_loss':     2.3107, 'rew_loss':    71.2250, 'lr':     0.0010, 'eps_e':     0.2149, 'lr_e':     0.0010})
Step:  168000, Reward:  -146.254 [ 132.338], Avg:  -223.004 (0.213) <0-02:48:50> ({'r_t':  -873.8711, 'eps':     0.2127, 'dyn_loss':    11.3926, 'dot_loss':     1.6101, 'ddot_loss':     2.3249, 'rew_loss':    76.9829, 'lr':     0.0010, 'eps_e':     0.2127, 'lr_e':     0.0010})
Step:  169000, Reward:  -143.491 [  93.877], Avg:  -222.537 (0.211) <0-02:50:12> ({'r_t':  -845.2632, 'eps':     0.2106, 'dyn_loss':    11.0179, 'dot_loss':     1.5965, 'ddot_loss':     2.3164, 'rew_loss':    71.8655, 'lr':     0.0010, 'eps_e':     0.2106, 'lr_e':     0.0010})
Step:  170000, Reward:  -163.949 [ 109.204], Avg:  -222.194 (0.208) <0-02:51:39> ({'r_t':  -977.8348, 'eps':     0.2085, 'dyn_loss':    10.2532, 'dot_loss':     1.5915, 'ddot_loss':     2.3033, 'rew_loss':    75.9135, 'lr':     0.0010, 'eps_e':     0.2085, 'lr_e':     0.0010})
Step:  171000, Reward:  -181.060 [ 140.790], Avg:  -221.955 (0.206) <0-02:53:01> ({'r_t':  -870.2980, 'eps':     0.2064, 'dyn_loss':    10.6214, 'dot_loss':     1.5921, 'ddot_loss':     2.2996, 'rew_loss':    76.2465, 'lr':     0.0010, 'eps_e':     0.2064, 'lr_e':     0.0010})
Step:  172000, Reward:  -140.468 [ 128.334], Avg:  -221.484 (0.204) <0-02:54:31> ({'r_t':  -928.5506, 'eps':     0.2043, 'dyn_loss':    10.9088, 'dot_loss':     1.5946, 'ddot_loss':     2.2601, 'rew_loss':    69.0744, 'lr':     0.0010, 'eps_e':     0.2043, 'lr_e':     0.0010})
Step:  173000, Reward:  -168.899 [ 112.266], Avg:  -221.182 (0.202) <0-02:56:03> ({'r_t':  -992.2333, 'eps':     0.2023, 'dyn_loss':    10.0322, 'dot_loss':     1.6104, 'ddot_loss':     2.3194, 'rew_loss':    71.8687, 'lr':     0.0010, 'eps_e':     0.2023, 'lr_e':     0.0010})
Step:  174000, Reward:  -251.281 [ 192.735], Avg:  -221.354 (0.200) <0-02:57:32> ({'r_t':  -829.5184, 'eps':     0.2003, 'dyn_loss':     9.7977, 'dot_loss':     1.5948, 'ddot_loss':     2.2727, 'rew_loss':    63.8213, 'lr':     0.0010, 'eps_e':     0.2003, 'lr_e':     0.0010})
Step:  175000, Reward:  -196.833 [ 150.297], Avg:  -221.214 (0.198) <0-02:58:59> ({'r_t':  -865.2162, 'eps':     0.1983, 'dyn_loss':    10.2171, 'dot_loss':     1.6043, 'ddot_loss':     2.2738, 'rew_loss':    73.1413, 'lr':     0.0010, 'eps_e':     0.1983, 'lr_e':     0.0010})
Step:  176000, Reward:  -207.644 [ 116.522], Avg:  -221.138 (0.196) <0-03:00:25> ({'r_t':  -860.2609, 'eps':     0.1963, 'dyn_loss':    10.9658, 'dot_loss':     1.5922, 'ddot_loss':     2.2589, 'rew_loss':    68.7282, 'lr':     0.0010, 'eps_e':     0.1963, 'lr_e':     0.0010})
Step:  177000, Reward:  -156.489 [ 109.994], Avg:  -220.774 (0.194) <0-03:01:43> ({'r_t':  -851.3012, 'eps':     0.1943, 'dyn_loss':    10.8684, 'dot_loss':     1.6072, 'ddot_loss':     2.2674, 'rew_loss':    77.0290, 'lr':     0.0010, 'eps_e':     0.1943, 'lr_e':     0.0010})
Step:  178000, Reward:  -204.643 [ 120.187], Avg:  -220.684 (0.192) <0-03:03:09> ({'r_t':  -875.4889, 'eps':     0.1924, 'dyn_loss':    11.1505, 'dot_loss':     1.6021, 'ddot_loss':     2.2603, 'rew_loss':    64.8088, 'lr':     0.0010, 'eps_e':     0.1924, 'lr_e':     0.0010})
Step:  179000, Reward:  -219.277 [ 142.614], Avg:  -220.677 (0.190) <0-03:04:39> ({'r_t':  -837.4508, 'eps':     0.1905, 'dyn_loss':    11.0456, 'dot_loss':     1.6024, 'ddot_loss':     2.2571, 'rew_loss':    69.4147, 'lr':     0.0010, 'eps_e':     0.1905, 'lr_e':     0.0010})
Step:  180000, Reward:  -210.217 [ 125.129], Avg:  -220.619 (0.189) <0-03:06:09> ({'r_t':  -934.1925, 'eps':     0.1886, 'dyn_loss':    11.4238, 'dot_loss':     1.6204, 'ddot_loss':     2.2814, 'rew_loss':    76.0321, 'lr':     0.0010, 'eps_e':     0.1886, 'lr_e':     0.0010})
Step:  181000, Reward:  -136.826 [  87.283], Avg:  -220.158 (0.187) <0-03:07:31> ({'r_t':  -809.8020, 'eps':     0.1867, 'dyn_loss':    10.8486, 'dot_loss':     1.5970, 'ddot_loss':     2.2502, 'rew_loss':    64.8099, 'lr':     0.0010, 'eps_e':     0.1867, 'lr_e':     0.0010})
Step:  182000, Reward:  -184.581 [ 136.833], Avg:  -219.964 (0.185) <0-03:08:56> ({'r_t':  -873.7300, 'eps':     0.1848, 'dyn_loss':     9.7795, 'dot_loss':     1.6008, 'ddot_loss':     2.2541, 'rew_loss':    68.4557, 'lr':     0.0010, 'eps_e':     0.1848, 'lr_e':     0.0010})
Step:  183000, Reward:  -208.080 [ 150.717], Avg:  -219.899 (0.183) <0-03:10:26> ({'r_t':  -853.5687, 'eps':     0.1830, 'dyn_loss':    13.1939, 'dot_loss':     1.6132, 'ddot_loss':     2.2708, 'rew_loss':    83.5527, 'lr':     0.0010, 'eps_e':     0.1830, 'lr_e':     0.0010})
Step:  184000, Reward:  -209.940 [ 122.701], Avg:  -219.846 (0.181) <0-03:11:49> ({'r_t':  -795.0496, 'eps':     0.1811, 'dyn_loss':    11.3112, 'dot_loss':     1.6171, 'ddot_loss':     2.2767, 'rew_loss':    66.1515, 'lr':     0.0010, 'eps_e':     0.1811, 'lr_e':     0.0010})
Step:  185000, Reward:  -165.314 [ 105.444], Avg:  -219.552 (0.179) <0-03:13:14> ({'r_t':  -891.6203, 'eps':     0.1793, 'dyn_loss':    11.2907, 'dot_loss':     1.6055, 'ddot_loss':     2.2540, 'rew_loss':    76.9567, 'lr':     0.0010, 'eps_e':     0.1793, 'lr_e':     0.0010})
Step:  186000, Reward:  -117.376 [  71.209], Avg:  -219.006 (0.178) <0-03:14:41> ({'r_t':  -784.5520, 'eps':     0.1775, 'dyn_loss':    10.7197, 'dot_loss':     1.6081, 'ddot_loss':     2.2553, 'rew_loss':    70.1348, 'lr':     0.0010, 'eps_e':     0.1775, 'lr_e':     0.0010})
Step:  187000, Reward:  -270.926 [ 142.291], Avg:  -219.282 (0.176) <0-03:16:13> ({'r_t':  -832.1824, 'eps':     0.1757, 'dyn_loss':    10.3149, 'dot_loss':     1.6104, 'ddot_loss':     2.2349, 'rew_loss':    58.0889, 'lr':     0.0010, 'eps_e':     0.1757, 'lr_e':     0.0010})
Step:  188000, Reward:  -189.809 [ 152.475], Avg:  -219.126 (0.174) <0-03:17:46> ({'r_t':  -735.6146, 'eps':     0.1740, 'dyn_loss':    10.5992, 'dot_loss':     1.5986, 'ddot_loss':     2.2200, 'rew_loss':    73.1629, 'lr':     0.0010, 'eps_e':     0.1740, 'lr_e':     0.0010})
Step:  189000, Reward:  -149.846 [  75.178], Avg:  -218.762 (0.172) <0-03:19:07> ({'r_t':  -912.6381, 'eps':     0.1722, 'dyn_loss':    10.9954, 'dot_loss':     1.6197, 'ddot_loss':     2.2536, 'rew_loss':    69.8991, 'lr':     0.0010, 'eps_e':     0.1722, 'lr_e':     0.0010})
Step:  190000, Reward:  -161.081 [ 102.898], Avg:  -218.460 (0.171) <0-03:20:29> ({'r_t':  -793.6653, 'eps':     0.1705, 'dyn_loss':    10.5840, 'dot_loss':     1.6150, 'ddot_loss':     2.2551, 'rew_loss':    71.4636, 'lr':     0.0010, 'eps_e':     0.1705, 'lr_e':     0.0010})
Step:  191000, Reward:  -156.062 [ 108.980], Avg:  -218.135 (0.169) <0-03:21:59> ({'r_t':  -815.6094, 'eps':     0.1688, 'dyn_loss':    10.4723, 'dot_loss':     1.6037, 'ddot_loss':     2.2174, 'rew_loss':    59.3907, 'lr':     0.0010, 'eps_e':     0.1688, 'lr_e':     0.0010})
Step:  192000, Reward:  -214.054 [ 126.536], Avg:  -218.113 (0.167) <0-03:23:26> ({'r_t':  -794.9623, 'eps':     0.1671, 'dyn_loss':     9.4916, 'dot_loss':     1.6136, 'ddot_loss':     2.2349, 'rew_loss':    66.5491, 'lr':     0.0010, 'eps_e':     0.1671, 'lr_e':     0.0010})
Step:  193000, Reward:  -162.440 [ 111.127], Avg:  -217.826 (0.165) <0-03:24:55> ({'r_t':  -783.7062, 'eps':     0.1655, 'dyn_loss':     9.9183, 'dot_loss':     1.5994, 'ddot_loss':     2.2071, 'rew_loss':    56.2137, 'lr':     0.0010, 'eps_e':     0.1655, 'lr_e':     0.0010})
Step:  194000, Reward:  -152.058 [ 119.006], Avg:  -217.489 (0.164) <0-03:26:21> ({'r_t':  -823.9704, 'eps':     0.1638, 'dyn_loss':    10.6348, 'dot_loss':     1.6190, 'ddot_loss':     2.2337, 'rew_loss':    75.4608, 'lr':     0.0010, 'eps_e':     0.1638, 'lr_e':     0.0010})
Step:  195000, Reward:  -194.112 [ 159.042], Avg:  -217.370 (0.162) <0-03:27:52> ({'r_t':  -760.7883, 'eps':     0.1622, 'dyn_loss':    10.6325, 'dot_loss':     1.6124, 'ddot_loss':     2.2332, 'rew_loss':    80.7013, 'lr':     0.0010, 'eps_e':     0.1622, 'lr_e':     0.0010})
Step:  196000, Reward:  -145.734 [  85.113], Avg:  -217.006 (0.161) <0-03:29:19> ({'r_t':  -860.2675, 'eps':     0.1605, 'dyn_loss':     9.9071, 'dot_loss':     1.5961, 'ddot_loss':     2.2038, 'rew_loss':    65.7121, 'lr':     0.0010, 'eps_e':     0.1605, 'lr_e':     0.0010})
Step:  197000, Reward:  -170.802 [ 105.589], Avg:  -216.773 (0.159) <0-03:30:41> ({'r_t':  -972.3415, 'eps':     0.1589, 'dyn_loss':    10.5320, 'dot_loss':     1.6240, 'ddot_loss':     2.2389, 'rew_loss':    67.1073, 'lr':     0.0010, 'eps_e':     0.1589, 'lr_e':     0.0010})
Step:  198000, Reward:  -210.894 [ 202.686], Avg:  -216.743 (0.157) <0-03:32:14> ({'r_t':  -675.5264, 'eps':     0.1574, 'dyn_loss':    10.3289, 'dot_loss':     1.6060, 'ddot_loss':     2.2199, 'rew_loss':    59.0966, 'lr':     0.0010, 'eps_e':     0.1574, 'lr_e':     0.0010})
Step:  199000, Reward:  -237.463 [ 150.488], Avg:  -216.847 (0.156) <0-03:33:45> ({'r_t':  -977.0263, 'eps':     0.1558, 'dyn_loss':    10.2863, 'dot_loss':     1.6080, 'ddot_loss':     2.2191, 'rew_loss':    64.3241, 'lr':     0.0010, 'eps_e':     0.1558, 'lr_e':     0.0010})
Step:  200000, Reward:  -135.528 [ 103.796], Avg:  -216.442 (0.154) <0-03:35:11> ({'r_t':  -681.1500, 'eps':     0.1542, 'dyn_loss':     9.8413, 'dot_loss':     1.5948, 'ddot_loss':     2.1883, 'rew_loss':    61.8026, 'lr':     0.0010, 'eps_e':     0.1542, 'lr_e':     0.0010})
Step:  201000, Reward:  -201.336 [ 124.075], Avg:  -216.368 (0.153) <0-03:36:41> ({'r_t':  -824.0615, 'eps':     0.1527, 'dyn_loss':     9.3754, 'dot_loss':     1.6082, 'ddot_loss':     2.2047, 'rew_loss':    66.3367, 'lr':     0.0010, 'eps_e':     0.1527, 'lr_e':     0.0010})
Step:  202000, Reward:  -213.139 [ 163.537], Avg:  -216.352 (0.151) <0-03:38:12> ({'r_t':  -824.1595, 'eps':     0.1512, 'dyn_loss':    11.1915, 'dot_loss':     1.6238, 'ddot_loss':     2.2306, 'rew_loss':    68.7978, 'lr':     0.0010, 'eps_e':     0.1512, 'lr_e':     0.0010})
Step:  203000, Reward:  -180.389 [ 135.520], Avg:  -216.175 (0.150) <0-03:39:42> ({'r_t':  -853.6911, 'eps':     0.1496, 'dyn_loss':    10.0310, 'dot_loss':     1.5933, 'ddot_loss':     2.1700, 'rew_loss':    63.4385, 'lr':     0.0010, 'eps_e':     0.1496, 'lr_e':     0.0010})
Step:  204000, Reward:  -210.633 [ 196.151], Avg:  -216.148 (0.148) <0-03:41:14> ({'r_t':  -654.7764, 'eps':     0.1481, 'dyn_loss':    10.0762, 'dot_loss':     1.6002, 'ddot_loss':     2.1934, 'rew_loss':    63.0782, 'lr':     0.0010, 'eps_e':     0.1481, 'lr_e':     0.0010})
Step:  205000, Reward:  -147.188 [ 160.711], Avg:  -215.814 (0.147) <0-03:42:44> ({'r_t':  -751.2170, 'eps':     0.1467, 'dyn_loss':     9.9026, 'dot_loss':     1.5906, 'ddot_loss':     2.1730, 'rew_loss':    63.4012, 'lr':     0.0010, 'eps_e':     0.1467, 'lr_e':     0.0010})
Step:  206000, Reward:  -225.307 [ 160.131], Avg:  -215.859 (0.145) <0-03:44:17> ({'r_t':  -790.2872, 'eps':     0.1452, 'dyn_loss':     9.8863, 'dot_loss':     1.6166, 'ddot_loss':     2.2093, 'rew_loss':    69.1355, 'lr':     0.0010, 'eps_e':     0.1452, 'lr_e':     0.0010})
Step:  207000, Reward:  -177.135 [ 120.763], Avg:  -215.673 (0.144) <0-03:45:50> ({'r_t':  -816.3240, 'eps':     0.1437, 'dyn_loss':    10.7966, 'dot_loss':     1.6097, 'ddot_loss':     2.2071, 'rew_loss':    62.4445, 'lr':     0.0010, 'eps_e':     0.1437, 'lr_e':     0.0010})
Step:  208000, Reward:  -160.107 [ 134.766], Avg:  -215.407 (0.142) <0-03:47:19> ({'r_t':  -696.1032, 'eps':     0.1423, 'dyn_loss':     9.8704, 'dot_loss':     1.6091, 'ddot_loss':     2.1875, 'rew_loss':    64.3606, 'lr':     0.0010, 'eps_e':     0.1423, 'lr_e':     0.0010})
Step:  209000, Reward:  -286.179 [ 426.897], Avg:  -215.744 (0.141) <0-03:48:53> ({'r_t':  -810.7880, 'eps':     0.1409, 'dyn_loss':     9.7798, 'dot_loss':     1.6143, 'ddot_loss':     2.1985, 'rew_loss':    61.2929, 'lr':     0.0010, 'eps_e':     0.1409, 'lr_e':     0.0010})
Step:  210000, Reward:  -206.117 [ 146.591], Avg:  -215.699 (0.139) <0-03:50:27> ({'r_t':  -822.1493, 'eps':     0.1395, 'dyn_loss':    10.1248, 'dot_loss':     1.6065, 'ddot_loss':     2.1889, 'rew_loss':    58.5641, 'lr':     0.0010, 'eps_e':     0.1395, 'lr_e':     0.0010})
Step:  211000, Reward:  -202.681 [ 148.401], Avg:  -215.637 (0.138) <0-03:52:02> ({'r_t':  -788.3902, 'eps':     0.1381, 'dyn_loss':    10.1661, 'dot_loss':     1.6058, 'ddot_loss':     2.1872, 'rew_loss':    58.6612, 'lr':     0.0010, 'eps_e':     0.1381, 'lr_e':     0.0010})
Step:  212000, Reward:   -98.586 [  44.506], Avg:  -215.088 (0.137) <0-03:53:23> ({'r_t':  -668.7504, 'eps':     0.1367, 'dyn_loss':    11.9704, 'dot_loss':     1.6222, 'ddot_loss':     2.2130, 'rew_loss':    73.7672, 'lr':     0.0010, 'eps_e':     0.1367, 'lr_e':     0.0010})
Step:  213000, Reward:  -185.243 [ 168.578], Avg:  -214.948 (0.135) <0-03:54:57> ({'r_t':  -800.7233, 'eps':     0.1353, 'dyn_loss':    10.9429, 'dot_loss':     1.6102, 'ddot_loss':     2.2127, 'rew_loss':    66.9125, 'lr':     0.0010, 'eps_e':     0.1353, 'lr_e':     0.0010})
Step:  214000, Reward:  -201.381 [ 393.784], Avg:  -214.885 (0.134) <0-03:56:24> ({'r_t':  -955.7755, 'eps':     0.1340, 'dyn_loss':    10.3085, 'dot_loss':     1.6013, 'ddot_loss':     2.1914, 'rew_loss':    70.9631, 'lr':     0.0010, 'eps_e':     0.1340, 'lr_e':     0.0010})
Step:  215000, Reward:  -122.429 [ 121.099], Avg:  -214.457 (0.133) <0-03:57:50> ({'r_t':  -788.3486, 'eps':     0.1326, 'dyn_loss':     9.8587, 'dot_loss':     1.6195, 'ddot_loss':     2.1972, 'rew_loss':    72.9647, 'lr':     0.0010, 'eps_e':     0.1326, 'lr_e':     0.0010})
Step:  216000, Reward:  -214.203 [ 180.268], Avg:  -214.456 (0.131) <0-03:59:23> ({'r_t':  -827.6271, 'eps':     0.1313, 'dyn_loss':     9.6082, 'dot_loss':     1.6074, 'ddot_loss':     2.1828, 'rew_loss':    57.9239, 'lr':     0.0010, 'eps_e':     0.1313, 'lr_e':     0.0010})
Step:  217000, Reward:  -133.524 [  88.309], Avg:  -214.085 (0.130) <0-04:00:53> ({'r_t':  -776.6687, 'eps':     0.1300, 'dyn_loss':     9.2817, 'dot_loss':     1.5999, 'ddot_loss':     2.1663, 'rew_loss':    60.1964, 'lr':     0.0010, 'eps_e':     0.1300, 'lr_e':     0.0010})
Step:  218000, Reward:  -202.582 [ 132.445], Avg:  -214.032 (0.129) <0-04:02:23> ({'r_t':  -730.6133, 'eps':     0.1287, 'dyn_loss':     8.6068, 'dot_loss':     1.6054, 'ddot_loss':     2.1688, 'rew_loss':    65.6471, 'lr':     0.0010, 'eps_e':     0.1287, 'lr_e':     0.0010})
Step:  219000, Reward:  -162.632 [ 105.204], Avg:  -213.799 (0.127) <0-04:03:49> ({'r_t':  -842.2547, 'eps':     0.1274, 'dyn_loss':     9.2247, 'dot_loss':     1.6204, 'ddot_loss':     2.1860, 'rew_loss':    50.1564, 'lr':     0.0010, 'eps_e':     0.1274, 'lr_e':     0.0010})
Step:  220000, Reward:  -172.199 [ 138.039], Avg:  -213.610 (0.126) <0-04:05:19> ({'r_t':  -713.3204, 'eps':     0.1261, 'dyn_loss':    14.5584, 'dot_loss':     1.6457, 'ddot_loss':     2.2781, 'rew_loss':    70.2748, 'lr':     0.0010, 'eps_e':     0.1261, 'lr_e':     0.0010})
Step:  221000, Reward:  -174.229 [ 180.909], Avg:  -213.433 (0.125) <0-04:06:54> ({'r_t':  -737.2974, 'eps':     0.1249, 'dyn_loss':    11.5632, 'dot_loss':     1.6139, 'ddot_loss':     2.2040, 'rew_loss':    61.3371, 'lr':     0.0010, 'eps_e':     0.1249, 'lr_e':     0.0010})
Step:  222000, Reward:  -157.763 [ 157.189], Avg:  -213.183 (0.124) <0-04:08:28> ({'r_t':  -811.0715, 'eps':     0.1236, 'dyn_loss':    10.2432, 'dot_loss':     1.6070, 'ddot_loss':     2.1882, 'rew_loss':    64.1335, 'lr':     0.0010, 'eps_e':     0.1236, 'lr_e':     0.0010})
Step:  223000, Reward:  -167.057 [ 114.815], Avg:  -212.978 (0.122) <0-04:10:03> ({'r_t':  -744.1870, 'eps':     0.1224, 'dyn_loss':    10.6274, 'dot_loss':     1.6237, 'ddot_loss':     2.1979, 'rew_loss':    61.7539, 'lr':     0.0010, 'eps_e':     0.1224, 'lr_e':     0.0010})
Step:  224000, Reward:  -145.833 [ 108.513], Avg:  -212.679 (0.121) <0-04:11:34> ({'r_t':  -755.7689, 'eps':     0.1212, 'dyn_loss':    10.2459, 'dot_loss':     1.5901, 'ddot_loss':     2.1545, 'rew_loss':    49.8091, 'lr':     0.0010, 'eps_e':     0.1212, 'lr_e':     0.0010})
Step:  225000, Reward:  -207.637 [ 216.468], Avg:  -212.657 (0.120) <0-04:13:12> ({'r_t':  -886.8493, 'eps':     0.1200, 'dyn_loss':    10.1023, 'dot_loss':     1.6087, 'ddot_loss':     2.1650, 'rew_loss':    63.9931, 'lr':     0.0010, 'eps_e':     0.1200, 'lr_e':     0.0010})
Step:  226000, Reward:  -201.882 [ 208.099], Avg:  -212.609 (0.119) <0-04:14:47> ({'r_t':  -805.1282, 'eps':     0.1188, 'dyn_loss':     9.7494, 'dot_loss':     1.6070, 'ddot_loss':     2.1646, 'rew_loss':    55.0541, 'lr':     0.0010, 'eps_e':     0.1188, 'lr_e':     0.0010})
Step:  227000, Reward:  -133.058 [  97.130], Avg:  -212.260 (0.118) <0-04:16:16> ({'r_t':  -793.2624, 'eps':     0.1176, 'dyn_loss':    10.2916, 'dot_loss':     1.6208, 'ddot_loss':     2.1700, 'rew_loss':    66.9029, 'lr':     0.0010, 'eps_e':     0.1176, 'lr_e':     0.0010})
Step:  228000, Reward:  -165.417 [ 204.615], Avg:  -212.056 (0.116) <0-04:17:55> ({'r_t':  -759.6615, 'eps':     0.1164, 'dyn_loss':    10.3778, 'dot_loss':     1.6173, 'ddot_loss':     2.1762, 'rew_loss':    53.3601, 'lr':     0.0010, 'eps_e':     0.1164, 'lr_e':     0.0010})
Step:  229000, Reward:  -189.529 [ 100.530], Avg:  -211.958 (0.115) <0-04:19:31> ({'r_t':  -780.6542, 'eps':     0.1152, 'dyn_loss':     9.3469, 'dot_loss':     1.5963, 'ddot_loss':     2.1318, 'rew_loss':    58.8529, 'lr':     0.0010, 'eps_e':     0.1152, 'lr_e':     0.0010})
Step:  230000, Reward:  -151.006 [  85.893], Avg:  -211.694 (0.114) <0-04:21:01> ({'r_t':  -838.7568, 'eps':     0.1141, 'dyn_loss':     9.1822, 'dot_loss':     1.6043, 'ddot_loss':     2.1597, 'rew_loss':    68.2792, 'lr':     0.0010, 'eps_e':     0.1141, 'lr_e':     0.0010})
Step:  231000, Reward:  -156.146 [  57.695], Avg:  -211.455 (0.113) <0-04:22:35> ({'r_t':  -775.5974, 'eps':     0.1129, 'dyn_loss':     9.7966, 'dot_loss':     1.6271, 'ddot_loss':     2.1894, 'rew_loss':    70.4034, 'lr':     0.0010, 'eps_e':     0.1129, 'lr_e':     0.0010})
Step:  232000, Reward:  -123.843 [  64.080], Avg:  -211.079 (0.112) <0-04:23:57> ({'r_t':  -731.2895, 'eps':     0.1118, 'dyn_loss':     9.5599, 'dot_loss':     1.5920, 'ddot_loss':     2.1295, 'rew_loss':    62.0475, 'lr':     0.0010, 'eps_e':     0.1118, 'lr_e':     0.0010})
Step:  233000, Reward:  -135.349 [ 133.097], Avg:  -210.755 (0.111) <0-04:25:30> ({'r_t':  -835.5167, 'eps':     0.1107, 'dyn_loss':    10.3258, 'dot_loss':     1.6003, 'ddot_loss':     2.1376, 'rew_loss':    50.3779, 'lr':     0.0010, 'eps_e':     0.1107, 'lr_e':     0.0010})
Step:  234000, Reward:  -220.874 [ 186.659], Avg:  -210.798 (0.110) <0-04:27:04> ({'r_t':  -778.0884, 'eps':     0.1096, 'dyn_loss':     9.8805, 'dot_loss':     1.6049, 'ddot_loss':     2.1611, 'rew_loss':    55.8499, 'lr':     0.0010, 'eps_e':     0.1096, 'lr_e':     0.0010})
Step:  235000, Reward:  -190.447 [ 211.202], Avg:  -210.712 (0.108) <0-04:28:40> ({'r_t':  -674.1273, 'eps':     0.1085, 'dyn_loss':     9.5009, 'dot_loss':     1.6004, 'ddot_loss':     2.1302, 'rew_loss':    57.8013, 'lr':     0.0010, 'eps_e':     0.1085, 'lr_e':     0.0010})
Step:  236000, Reward:  -226.842 [ 164.020], Avg:  -210.780 (0.107) <0-04:30:14> ({'r_t':  -778.6136, 'eps':     0.1074, 'dyn_loss':     9.7170, 'dot_loss':     1.6135, 'ddot_loss':     2.1618, 'rew_loss':    61.1236, 'lr':     0.0010, 'eps_e':     0.1074, 'lr_e':     0.0010})
Step:  237000, Reward:  -186.190 [ 140.313], Avg:  -210.677 (0.106) <0-04:31:42> ({'r_t':  -928.8364, 'eps':     0.1063, 'dyn_loss':     9.1819, 'dot_loss':     1.6128, 'ddot_loss':     2.1547, 'rew_loss':    55.5703, 'lr':     0.0010, 'eps_e':     0.1063, 'lr_e':     0.0010})
Step:  238000, Reward:  -140.064 [  91.971], Avg:  -210.381 (0.105) <0-04:33:09> ({'r_t':  -798.7039, 'eps':     0.1053, 'dyn_loss':     8.5394, 'dot_loss':     1.5939, 'ddot_loss':     2.1267, 'rew_loss':    56.6488, 'lr':     0.0010, 'eps_e':     0.1053, 'lr_e':     0.0010})
Step:  239000, Reward:  -124.663 [ 109.803], Avg:  -210.024 (0.104) <0-04:34:34> ({'r_t':  -714.2231, 'eps':     0.1042, 'dyn_loss':     9.1565, 'dot_loss':     1.6093, 'ddot_loss':     2.1368, 'rew_loss':    56.9049, 'lr':     0.0010, 'eps_e':     0.1042, 'lr_e':     0.0010})
Step:  240000, Reward:  -171.149 [ 125.882], Avg:  -209.863 (0.103) <0-04:36:08> ({'r_t':  -726.3962, 'eps':     0.1032, 'dyn_loss':    12.3561, 'dot_loss':     1.6166, 'ddot_loss':     2.1637, 'rew_loss':    53.2589, 'lr':     0.0010, 'eps_e':     0.1032, 'lr_e':     0.0010})
Step:  241000, Reward:  -170.675 [ 163.429], Avg:  -209.701 (0.102) <0-04:37:43> ({'r_t':  -915.4845, 'eps':     0.1021, 'dyn_loss':    57.7165, 'dot_loss':     2.1671, 'ddot_loss':     2.6763, 'rew_loss':    55.5821, 'lr':     0.0010, 'eps_e':     0.1021, 'lr_e':     0.0010})
Step:  242000, Reward:  -248.020 [ 218.553], Avg:  -209.858 (0.101) <0-04:39:19> ({'r_t':  -780.4848, 'eps':     0.1011, 'dyn_loss': 43812.9805, 'dot_loss':   569.0602, 'ddot_loss':    52.0769, 'rew_loss':   109.9262, 'lr':     0.0010, 'eps_e':     0.1011, 'lr_e':     0.0010})
Step:  243000, Reward:  -129.791 [  75.574], Avg:  -209.530 (0.100) <0-04:40:47> ({'r_t': -1114.1831, 'eps':     0.1001, 'dyn_loss': 806902.5625, 'dot_loss':  6503.9136, 'ddot_loss':   670.1638, 'rew_loss':    97.5681, 'lr':     0.0010, 'eps_e':     0.1001, 'lr_e':     0.0010})
Step:  244000, Reward:  -151.259 [ 103.562], Avg:  -209.292 (0.100) <0-04:42:15> ({'r_t': -1105.7583, 'eps':     0.1000, 'dyn_loss': 2719262.5000, 'dot_loss': 16777.2266, 'ddot_loss':  1178.8993, 'rew_loss':    80.2550, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  245000, Reward:  -107.651 [ 125.254], Avg:  -208.879 (0.100) <0-04:43:46> ({'r_t': -1102.4509, 'eps':     0.1000, 'dyn_loss': 3629006.7500, 'dot_loss': 20325.6152, 'ddot_loss':   751.1318, 'rew_loss':    65.1970, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  246000, Reward:  -157.565 [ 119.523], Avg:  -208.671 (0.100) <0-04:45:16> ({'r_t': -1157.2294, 'eps':     0.1000, 'dyn_loss': 1538274.1250, 'dot_loss': 13041.5615, 'ddot_loss':   702.4093, 'rew_loss':    66.7069, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  247000, Reward:  -180.985 [ 183.968], Avg:  -208.560 (0.100) <0-04:46:53> ({'r_t': -1079.5095, 'eps':     0.1000, 'dyn_loss': 2283965.7500, 'dot_loss': 20152.6016, 'ddot_loss':   858.5251, 'rew_loss':    71.0175, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  248000, Reward:  -104.008 [  70.463], Avg:  -208.140 (0.100) <0-04:48:21> ({'r_t': -1108.0424, 'eps':     0.1000, 'dyn_loss': 1095727.3750, 'dot_loss': 16479.1406, 'ddot_loss':   812.9875, 'rew_loss':    57.7193, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  249000, Reward:  -154.069 [ 150.950], Avg:  -207.924 (0.100) <0-04:49:54> ({'r_t': -1108.8948, 'eps':     0.1000, 'dyn_loss': 936321.6250, 'dot_loss': 12287.3027, 'ddot_loss':   654.8641, 'rew_loss':    69.4155, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  250000, Reward:  -103.389 [  59.347], Avg:  -207.507 (0.100) <0-04:51:16> ({'r_t': -1103.7936, 'eps':     0.1000, 'dyn_loss': 1895131.5000, 'dot_loss': 14265.1445, 'ddot_loss':   574.3131, 'rew_loss':    73.0626, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  251000, Reward:  -112.611 [ 117.473], Avg:  -207.131 (0.100) <0-04:52:44> ({'r_t': -1105.5678, 'eps':     0.1000, 'dyn_loss': 1635852.1250, 'dot_loss': 11245.6924, 'ddot_loss':   547.3109, 'rew_loss':    65.0915, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  252000, Reward:  -105.772 [  72.421], Avg:  -206.730 (0.100) <0-04:54:09> ({'r_t': -1107.2367, 'eps':     0.1000, 'dyn_loss': 941104.6875, 'dot_loss': 10197.1611, 'ddot_loss':   637.1618, 'rew_loss':    68.5844, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  253000, Reward:  -106.396 [  70.674], Avg:  -206.335 (0.100) <0-04:55:34> ({'r_t': -1113.2758, 'eps':     0.1000, 'dyn_loss': 2103662.2500, 'dot_loss': 14518.5215, 'ddot_loss':   746.2536, 'rew_loss':    66.1831, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  254000, Reward:  -174.598 [ 152.744], Avg:  -206.210 (0.100) <0-04:57:07> ({'r_t': -1113.2457, 'eps':     0.1000, 'dyn_loss': 1314711.0000, 'dot_loss': 13234.3369, 'ddot_loss':   860.5770, 'rew_loss':    70.3162, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  255000, Reward:  -145.150 [ 142.208], Avg:  -205.972 (0.100) <0-04:58:44> ({'r_t': -1124.8042, 'eps':     0.1000, 'dyn_loss': 1392133.8750, 'dot_loss': 13407.1758, 'ddot_loss':   895.8641, 'rew_loss':    71.2339, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  256000, Reward:  -138.153 [ 146.033], Avg:  -205.708 (0.100) <0-05:00:18> ({'r_t': -1164.5566, 'eps':     0.1000, 'dyn_loss': 1549624.0000, 'dot_loss': 15780.5752, 'ddot_loss':   863.9856, 'rew_loss':    57.5197, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  257000, Reward:  -264.113 [ 242.545], Avg:  -205.934 (0.100) <0-05:01:58> ({'r_t': -1121.1668, 'eps':     0.1000, 'dyn_loss': 2476200.7500, 'dot_loss': 16448.6758, 'ddot_loss':   805.4578, 'rew_loss':    61.3891, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  258000, Reward:  -187.473 [ 194.056], Avg:  -205.863 (0.100) <0-05:03:35> ({'r_t': -1141.9538, 'eps':     0.1000, 'dyn_loss': 780421.9375, 'dot_loss':  9664.9580, 'ddot_loss':   703.0471, 'rew_loss':    53.1145, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  259000, Reward:  -119.435 [  75.149], Avg:  -205.531 (0.100) <0-05:05:02> ({'r_t': -1134.2349, 'eps':     0.1000, 'dyn_loss': 1478509.2500, 'dot_loss': 12225.2578, 'ddot_loss':   743.9856, 'rew_loss':    51.2843, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  260000, Reward:  -161.559 [ 137.285], Avg:  -205.362 (0.100) <0-05:06:32> ({'r_t': -1108.4584, 'eps':     0.1000, 'dyn_loss': 979454.0625, 'dot_loss': 11563.2246, 'ddot_loss':   694.5013, 'rew_loss':    59.9001, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  261000, Reward:  -116.811 [  77.830], Avg:  -205.024 (0.100) <0-05:08:03> ({'r_t': -1115.1613, 'eps':     0.1000, 'dyn_loss': 1575631.3750, 'dot_loss': 17901.7969, 'ddot_loss':   919.1879, 'rew_loss':    60.5446, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  262000, Reward:  -133.662 [  98.388], Avg:  -204.753 (0.100) <0-05:09:32> ({'r_t': -1115.1469, 'eps':     0.1000, 'dyn_loss': 1805137.1250, 'dot_loss': 15144.5781, 'ddot_loss':   804.7517, 'rew_loss':    64.1450, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  263000, Reward:  -127.043 [ 144.973], Avg:  -204.459 (0.100) <0-05:11:05> ({'r_t': -1134.0517, 'eps':     0.1000, 'dyn_loss': 3266304.0000, 'dot_loss': 23588.8027, 'ddot_loss':  1065.6202, 'rew_loss':    67.9343, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  264000, Reward:   -90.276 [  52.329], Avg:  -204.028 (0.100) <0-05:12:27> ({'r_t': -1157.7384, 'eps':     0.1000, 'dyn_loss': 2650641.5000, 'dot_loss': 26934.1895, 'ddot_loss':  1128.3601, 'rew_loss':    58.4160, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  265000, Reward:  -105.197 [  37.418], Avg:  -203.656 (0.100) <0-05:13:52> ({'r_t': -1169.9044, 'eps':     0.1000, 'dyn_loss': 2640721.0000, 'dot_loss': 19792.1543, 'ddot_loss':   926.8005, 'rew_loss':    58.9520, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  266000, Reward:  -112.577 [  83.765], Avg:  -203.315 (0.100) <0-05:15:20> ({'r_t': -1126.4203, 'eps':     0.1000, 'dyn_loss': 2615288.5000, 'dot_loss': 15652.1992, 'ddot_loss':   708.3461, 'rew_loss':    54.9154, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  267000, Reward:  -121.893 [  73.603], Avg:  -203.011 (0.100) <0-05:16:48> ({'r_t': -1115.2074, 'eps':     0.1000, 'dyn_loss': 1434004.6250, 'dot_loss': 12441.1250, 'ddot_loss':   671.5923, 'rew_loss':    60.5068, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  268000, Reward:  -134.401 [ 116.864], Avg:  -202.756 (0.100) <0-05:18:26> ({'r_t': -1157.6579, 'eps':     0.1000, 'dyn_loss': 1184575.7500, 'dot_loss': 13784.6729, 'ddot_loss':   871.5338, 'rew_loss':    61.0325, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  269000, Reward:   -89.733 [  60.075], Avg:  -202.338 (0.100) <0-05:19:51> ({'r_t': -1062.3413, 'eps':     0.1000, 'dyn_loss': 3765106.5000, 'dot_loss': 24818.1094, 'ddot_loss':   992.2032, 'rew_loss':    69.1088, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  270000, Reward:  -162.733 [ 110.211], Avg:  -202.191 (0.100) <0-05:21:17> ({'r_t': -1203.9417, 'eps':     0.1000, 'dyn_loss': 5119645.0000, 'dot_loss': 47261.5586, 'ddot_loss':  1300.9204, 'rew_loss':    56.4515, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  271000, Reward:  -129.357 [  91.992], Avg:  -201.924 (0.100) <0-05:22:46> ({'r_t': -1152.8851, 'eps':     0.1000, 'dyn_loss': 1789034.1250, 'dot_loss': 27650.6094, 'ddot_loss':  1149.3322, 'rew_loss':    65.1332, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  272000, Reward:  -217.098 [ 191.824], Avg:  -201.979 (0.100) <0-05:24:26> ({'r_t': -1106.1044, 'eps':     0.1000, 'dyn_loss': 2329715.2500, 'dot_loss': 28241.3789, 'ddot_loss':  1281.5729, 'rew_loss':    52.4435, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  273000, Reward:  -132.252 [  98.288], Avg:  -201.725 (0.100) <0-05:26:03> ({'r_t': -1079.2303, 'eps':     0.1000, 'dyn_loss': 2702699.0000, 'dot_loss': 24060.9570, 'ddot_loss':  1182.9622, 'rew_loss':    57.3794, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  274000, Reward:  -180.369 [ 151.271], Avg:  -201.647 (0.100) <0-05:27:35> ({'r_t': -1109.1595, 'eps':     0.1000, 'dyn_loss': 51326336.0000, 'dot_loss': 186580.5469, 'ddot_loss':  1525.6536, 'rew_loss':    46.9771, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  275000, Reward:  -181.229 [ 150.162], Avg:  -201.573 (0.100) <0-05:29:06> ({'r_t': -1157.0199, 'eps':     0.1000, 'dyn_loss': 3769320.5000, 'dot_loss': 38033.5273, 'ddot_loss':  2212.8765, 'rew_loss':    54.4457, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  276000, Reward:  -150.989 [  95.820], Avg:  -201.391 (0.100) <0-05:30:34> ({'r_t': -1149.7867, 'eps':     0.1000, 'dyn_loss': 2439422.0000, 'dot_loss': 37857.3711, 'ddot_loss':  2426.6304, 'rew_loss':    59.5122, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  277000, Reward:  -162.007 [  96.814], Avg:  -201.249 (0.100) <0-05:32:00> ({'r_t': -1222.8569, 'eps':     0.1000, 'dyn_loss': 2206172.7500, 'dot_loss': 39817.2148, 'ddot_loss':  2467.8472, 'rew_loss':    67.7329, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  278000, Reward:  -165.420 [ 154.921], Avg:  -201.120 (0.100) <0-05:33:33> ({'r_t': -1159.0839, 'eps':     0.1000, 'dyn_loss': 2756321.2500, 'dot_loss': 32699.4902, 'ddot_loss':  1967.3528, 'rew_loss':    57.1698, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  279000, Reward:  -157.300 [ 127.822], Avg:  -200.964 (0.100) <0-05:35:15> ({'r_t': -1168.8807, 'eps':     0.1000, 'dyn_loss': 2115081.2500, 'dot_loss': 27288.4590, 'ddot_loss':  1764.4541, 'rew_loss':    56.1777, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  280000, Reward:  -215.966 [ 177.261], Avg:  -201.017 (0.100) <0-05:36:52> ({'r_t': -1112.6333, 'eps':     0.1000, 'dyn_loss': 2843622.0000, 'dot_loss': 27674.9355, 'ddot_loss':  1643.3328, 'rew_loss':    48.4577, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  281000, Reward:  -127.084 [ 101.387], Avg:  -200.755 (0.100) <0-05:38:17> ({'r_t': -1187.4515, 'eps':     0.1000, 'dyn_loss': 3525807.2500, 'dot_loss': 27607.7598, 'ddot_loss':  1536.5608, 'rew_loss':    56.8419, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  282000, Reward:  -203.036 [ 168.040], Avg:  -200.763 (0.100) <0-05:39:50> ({'r_t': -1185.3473, 'eps':     0.1000, 'dyn_loss': 7679250.5000, 'dot_loss': 50524.8008, 'ddot_loss':  1667.0856, 'rew_loss':    60.5054, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  283000, Reward:  -208.837 [ 181.571], Avg:  -200.792 (0.100) <0-05:41:26> ({'r_t': -1174.6391, 'eps':     0.1000, 'dyn_loss': 3428674.0000, 'dot_loss': 34816.7617, 'ddot_loss':  1738.4005, 'rew_loss':    54.8189, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  284000, Reward:  -174.344 [ 161.634], Avg:  -200.699 (0.100) <0-05:43:01> ({'r_t': -1183.3523, 'eps':     0.1000, 'dyn_loss': 5101156.5000, 'dot_loss': 33091.0312, 'ddot_loss':  1633.4270, 'rew_loss':    56.1903, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  285000, Reward:  -232.377 [ 199.498], Avg:  -200.810 (0.100) <0-05:44:37> ({'r_t': -1164.0087, 'eps':     0.1000, 'dyn_loss': 3322491.7500, 'dot_loss': 29813.8418, 'ddot_loss':  1650.7750, 'rew_loss':    49.3213, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  286000, Reward:  -166.091 [ 109.229], Avg:  -200.689 (0.100) <0-05:46:14> ({'r_t': -1168.3787, 'eps':     0.1000, 'dyn_loss': 2918783.5000, 'dot_loss': 25207.1191, 'ddot_loss':  1482.9485, 'rew_loss':    52.6488, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  287000, Reward:  -162.275 [ 135.174], Avg:  -200.555 (0.100) <0-05:47:44> ({'r_t': -1137.2124, 'eps':     0.1000, 'dyn_loss': 2694346.0000, 'dot_loss': 26509.7695, 'ddot_loss':  1585.7520, 'rew_loss':    43.7963, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  288000, Reward:  -144.140 [  86.203], Avg:  -200.360 (0.100) <0-05:49:08> ({'r_t': -1157.1305, 'eps':     0.1000, 'dyn_loss': 6562420.5000, 'dot_loss': 30604.4922, 'ddot_loss':  1282.7881, 'rew_loss':    48.5225, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  289000, Reward:  -133.129 [ 117.804], Avg:  -200.128 (0.100) <0-05:50:35> ({'r_t': -1160.8266, 'eps':     0.1000, 'dyn_loss': 4982834.5000, 'dot_loss': 38675.0742, 'ddot_loss':  1753.8784, 'rew_loss':    70.9787, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  290000, Reward:  -219.548 [ 127.106], Avg:  -200.195 (0.100) <0-05:52:06> ({'r_t': -1153.3594, 'eps':     0.1000, 'dyn_loss': 14388728.0000, 'dot_loss': 74964.8516, 'ddot_loss':  2146.3550, 'rew_loss':    59.3458, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  291000, Reward:  -106.207 [  44.159], Avg:  -199.873 (0.100) <0-05:53:21> ({'r_t': -1181.1427, 'eps':     0.1000, 'dyn_loss': 273885152.0000, 'dot_loss': 887788.5625, 'ddot_loss':  4179.2944, 'rew_loss':    49.8059, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
