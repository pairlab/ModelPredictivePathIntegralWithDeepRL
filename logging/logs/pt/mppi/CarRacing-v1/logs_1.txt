Model: <class 'src.models.pytorch.mpc.mppi.MPPIAgent'>, Env: CarRacing-v1, Date: 03/06/2020 00:27:11
CPU: 8 Core, 5.0GHz, 62.66 GB, Linux-5.3.0-53-generic-x86_64-with-debian-buster-sid
GPU 0: GeForce RTX 2070, 7.98 GB (Driver: 440.64.00)
Git URL: git@github.com:shawnmanuel000/ModelPredictivePathIntegralWithDeepRL.git
Hash: 7ab06f66e0334f41638191fec0a495ee88f27799
Branch: master

config: 
   TRIAL_AT = 1000
   SAVE_AT = 1
   SEED = 0
   REG_LAMBDA = 1e-06
   LEARN_RATE = 0.0001
   DISCOUNT_RATE = 0.99
   ADVANTAGE_DECAY = 0.95
   INPUT_LAYER = 512
   ACTOR_HIDDEN = 256
   CRITIC_HIDDEN = 1024
   EPS_MAX = 1.0
   EPS_MIN = 0.1
   EPS_DECAY = 0.98
   NUM_STEPS = 40
   MAX_BUFFER_SIZE = 1000000
   REPLAY_BATCH_SIZE = 5000
   TARGET_UPDATE_RATE = 0.0004
   BATCH_SIZE = 250
   DYN_EPOCHS = 10
   TRAIN_EVERY = 1000
   ENV_MODEL = dfrntl
   MPC = 
      NSAMPLES = 100
      HORIZON = 40
      LAMBDA = 0.1
      CONTROL_FREQ = 1
   REWARD_MODEL = src.envs.CarRacing.objective.cost:CostModel
   DYNAMICS_SPEC = src.envs.CarRacing.car_racing:CarRacing
   dynamics_size = 13
   state_size = (80,)
   action_size = (3,)
   env_name = CarRacing-v1
   rank = 0
   size = 17
   split = 17
   model = mppi
   framework = pt
   train_prop = 1.0
   tcp_ports = [9000, 9001, 9002, 9003, 9004, 9005, 9006, 9007, 9008, 9009, 9010, 9011, 9012, 9013, 9014, 9015, 9016]
   tcp_rank = 0
   num_envs = 1
   nsteps = 500000
   render = False
   trial = False
   icm = False
   rs = False
   DYN = 
      REG_LAMBDA = 1e-06
      FACTOR = 0.5
      PATIENCE = 5
      LEARN_RATE = 0.001
      TRANSITION_HIDDEN = 256
      REWARD_HIDDEN = 256
      BETA_DYN = 0.1
      BETA_DOT = 1
      BETA_DDOT = 1,
num_envs: 16,
envs: <src.utils.envs.EnvManager object at 0x7f66ae98b790> 
	env = <GymEnv<CarRacing<CarRacing-v1>>> 
		env = <CarRacing<CarRacing-v1>> 
			channel = <mlagents_envs.side_channel.engine_configuration_channel.EngineConfigurationChannel object at 0x7f66ae96d5d0>
			scale_sim = <function CarRacing.__init__.<locals>.<lambda> at 0x7f66ae8d78c0>
			env = <UnityToGymWrapper instance> 
				visual_obs = None
				game_over = False
				name = CarBehavior?team=0
				group_spec = BehaviorSpec(observation_shapes=[(30,)], action_type=<ActionType.CONTINUOUS: 1>, action_shape=3)
				use_visual = False
				uint8_visual = False
			cost_model = <src.envs.CarRacing.objective.cost.CostModel object at 0x7f66aecea6d0> 
				track = <src.envs.CarRacing.objective.track.Track object at 0x7f66ae8d6990> 
					track = <list len=500>
					X = (1.540585208684206, 1.5814536064863205, 1.6016383588314056, 1.6350171357393264, 1.6559478223323822, 1.6717498254776002, 1.709812204837799, 1.7354034245014192, 1.7725858569145203, 1.8077154874801635, 1.958074402809143, 2.0178433418273927, 2.1851138830184937, 2.258661150932312, 2.3439700841903686, 2.452700424194336, 2.586679172515869, 2.782884216308594, 3.047244071960449, 3.4783129692077637, 3.9734771251678467, 4.596014499664307, 5.29957389831543, 6.05716609954834, 6.824328422546387, 7.646727561950684, 8.59219741821289, 9.675070762634277, 10.77119255065918, 11.868535041809082, 12.83842658996582, 13.727555274963379, 14.569844245910645, 15.391722679138184, 16.204023361206055, 17.02372169494629, 17.626384735107422, 18.072078704833984, 18.462026596069336, 18.803436279296875, 19.08125877380371, 19.200590133666992, 19.074377059936523, 18.833162307739258, 18.582487106323242, 18.339160919189453, 17.97744369506836, 17.59515380859375, 17.09140968322754, 16.50218391418457, 15.817791938781738, 14.983868598937988, 13.986822128295898, 12.817933082580566, 11.528505325317383, 10.241579055786133, 8.946599960327148, 7.588953971862793, 6.2032341957092285, 4.799948692321777, 3.3720505237579346, 1.9454675912857056, 0.4815756678581238, -0.9242660999298096, -2.3082480430603027, -3.7190709114074707, -5.090760231018066, -6.490819931030273, -7.933252811431885, -9.48039722442627, -11.141877174377441, -12.927711486816406, -14.796602249145508, -16.603300094604492, -18.390233993530273, -20.1385498046875, -21.805997848510742, -23.41408920288086, -25.02754783630371, -26.801597595214844, -28.776451110839844, -30.972705841064453, -33.385520935058594, -35.90762710571289, -38.527618408203125, -41.362369537353516, -44.435585021972656, -47.831398010253906, -51.587188720703125, -55.642662048339844, -59.980804443359375, -64.55036163330078, -69.1060562133789, -73.4732666015625, -77.65788269042969, -81.6474380493164, -85.45370483398438, -89.12055206298828, -92.67816925048828, -96.15220642089844, -99.54827117919922, -102.86875915527344, -106.01786804199219, -109.03597259521484, -111.96282958984375, -114.75870513916016, -117.48453521728516, -120.2335205078125, -123.01750946044922, -125.81232452392578, -128.56246948242188, -131.20936584472656, -133.767333984375, -136.21359252929688, -138.6573486328125, -141.0603485107422, -143.3613739013672, -145.4899444580078, -147.5723114013672, -149.41514587402344, -150.9908905029297, -152.32089233398438, -153.6006622314453, -154.83030700683594, -156.0063018798828, -157.14691162109375, -158.23680114746094, -159.30880737304688, -160.30152893066406, -161.2411651611328, -162.03582763671875, -162.72186279296875, -163.28753662109375, -163.81460571289062, -164.31549072265625, -164.78814697265625, -165.1201171875, -165.26596069335938, -165.24961853027344, -165.20376586914062, -165.07931518554688, -165.0469512939453, -165.03262329101562, -164.86660766601562, -164.62220764160156, -164.3842315673828, -164.145263671875, -163.90011596679688, -163.64981079101562, -163.3218231201172, -162.726318359375, -161.83493041992188, -160.71856689453125, -159.4139862060547, -157.9736328125, -156.54212951660156, -155.10464477539062, -153.63636779785156, -152.13641357421875, -150.6412811279297, -149.1659698486328, -147.64437866210938, -146.01336669921875, -144.21286010742188, -142.3518829345703, -140.49502563476562, -138.6591796875, -136.8135986328125, -134.9413604736328, -132.9547882080078, -130.7132110595703, -128.1597137451172, -125.3279037475586, -122.26266479492188, -118.97386932373047, -115.49871826171875, -111.90750122070312, -108.16539764404297, -104.34297180175781, -100.58757781982422, -96.96247863769531, -93.51396942138672, -90.1981201171875, -86.93607330322266, -83.70171356201172, -80.58210754394531, -77.49177551269531, -74.4620132446289, -71.53809356689453, -68.60317993164062, -65.52932739257812, -62.46957778930664, -59.48895263671875, -56.56187057495117, -53.813289642333984, -51.1711311340332, -48.648197174072266, -46.242332458496094, -43.94118118286133, -41.766075134277344, -39.70472717285156, -37.813140869140625, -36.01365280151367, -34.269657135009766, -32.50520706176758, -30.680166244506836, -28.837051391601562, -27.001256942749023, -25.25333023071289, -23.701873779296875, -22.668081283569336, -22.199195861816406, -22.169893264770508, -22.46630859375, -23.134033203125, -24.32797622680664, -26.001781463623047, -27.869766235351562, -29.80392074584961, -31.775949478149414, -33.793365478515625, -35.771907806396484, -37.70563888549805, -39.61886215209961, -41.516029357910156, -43.41127014160156, -45.27768325805664, -47.11109924316406, -48.94091796875, -50.77583694458008, -52.619163513183594, -54.48332977294922, -56.314815521240234, -58.103755950927734, -59.823333740234375, -61.56585693359375, -63.30061340332031, -64.97642517089844, -66.51130676269531, -67.94270324707031, -69.3357925415039, -70.66708374023438, -71.93402099609375, -73.18978118896484, -74.31753540039062, -75.23255920410156, -75.95966339111328, -76.61920166015625, -77.26768493652344, -77.9359130859375, -78.5946273803711, -79.26289367675781, -79.79534912109375, -80.2015380859375, -80.60335540771484, -81.02714538574219, -81.53772735595703, -82.04193878173828, -82.53047180175781, -83.04158020019531, -83.56088256835938, -84.14714813232422, -84.81393432617188, -85.55133056640625, -86.36656188964844, -87.24837493896484, -88.13751983642578, -88.99240112304688, -89.81124877929688, -90.60415649414062, -91.33631896972656, -92.02133178710938, -92.65229034423828, -93.23121643066406, -93.7853012084961, -94.3372573852539, -94.88070678710938, -95.41710662841797, -95.84803771972656, -96.24778747558594, -96.6568374633789, -97.0496826171875, -97.41992950439453, -97.77052307128906, -97.91485595703125, -97.96147155761719, -97.87026977539062, -97.53227233886719, -96.85386657714844, -95.81302642822266, -94.54135131835938, -93.15739440917969, -91.603271484375, -89.95466613769531, -88.35015106201172, -86.80291748046875, -85.39144134521484, -84.07344055175781, -82.86149597167969, -81.5972671508789, -80.11182403564453, -78.36345672607422, -76.40621948242188, -74.32894134521484, -72.0761489868164, -69.69659423828125, -67.17849731445312, -64.48152160644531, -61.61235046386719, -58.499427795410156, -55.10073471069336, -51.55522918701172, -47.74736785888672, -43.832923889160156, -39.801971435546875, -35.743858337402344, -31.80649757385254, -28.028738021850586, -24.38759994506836, -20.836519241333008, -17.374597549438477, -14.002902030944824, -10.617079734802246, -7.34421443939209, -4.187110424041748, -1.115414023399353, 2.037353277206421, 5.401520252227783, 8.870983123779297, 12.423381805419922, 16.180818557739258, 20.157392501831055, 24.33769989013672, 28.77823829650879, 33.3828010559082, 38.12346267700195, 42.767642974853516, 47.21396255493164, 51.497074127197266, 55.640106201171875, 59.61445999145508, 63.45794677734375, 67.16992950439453, 70.71627044677734, 74.12809753417969, 77.53622436523438, 80.97876739501953, 84.45626068115234, 87.9986572265625, 91.61026000976562, 95.1865234375, 98.68260192871094, 102.08172607421875, 105.37554168701172, 108.5978012084961, 111.72406005859375, 114.72969818115234, 117.6103515625, 120.28418731689453, 122.77039337158203, 125.10813903808594, 127.35991668701172, 129.5707550048828, 131.73577880859375, 133.8451385498047, 135.88076782226562, 137.81361389160156, 139.69195556640625, 141.56494140625, 143.51321411132812, 145.43582153320312, 147.37954711914062, 149.30592346191406, 151.1349334716797, 152.76832580566406, 154.18382263183594, 155.40008544921875, 156.48155212402344, 157.39840698242188, 158.19866943359375, 158.91281127929688, 159.4974822998047, 160.02337646484375, 160.31883239746094, 160.23129272460938, 159.7694854736328, 159.0675506591797, 158.11312866210938, 157.08311462402344, 155.8784942626953, 154.47816467285156, 152.8489990234375, 151.00660705566406, 149.11109924316406, 147.24368286132812, 145.35427856445312, 143.4554443359375, 141.39073181152344, 139.07090759277344, 136.57705688476562, 134.08177185058594, 131.63348388671875, 129.23263549804688, 126.91446685791016, 124.63007354736328, 122.27965545654297, 119.90943145751953, 117.51732635498047, 115.1493148803711, 112.83964538574219, 110.53994750976562, 108.22462463378906, 105.85285949707031, 103.4562759399414, 101.13794708251953, 98.82323455810547, 96.44384765625, 93.94629669189453, 91.3570556640625, 88.73168182373047, 86.05917358398438, 83.26211547851562, 80.25263214111328, 77.10718536376953, 73.97905731201172, 70.96484375, 68.1133804321289, 65.44701385498047, 62.890159606933594, 60.41355514526367, 57.95263671875, 55.59248352050781, 53.20044708251953, 50.7462272644043, 48.28958511352539, 45.88505935668945, 43.5562744140625, 41.31084442138672, 39.171634674072266, 37.183380126953125, 35.43268966674805, 33.800804138183594, 32.20466613769531, 30.66669273376465, 29.13826560974121, 27.552635192871094, 25.97852325439453, 24.294662475585938, 22.565439224243164, 20.874217987060547, 19.30082893371582, 17.831933975219727, 16.408084869384766, 15.044317245483398, 13.766607284545898, 12.577005386352539, 11.475253105163574, 10.496495246887207, 9.622332572937012, 8.769275665283203, 7.927954196929932, 7.112521648406982, 6.322704315185547, 5.563619136810303, 4.829586982727051, 4.113427639007568, 3.3697121143341064, 2.5567243099212646, 1.7977246046066284, 1.0246542692184448, 0.2572939395904541, -0.4480553865432739, -1.1242897510528564, -1.6556841135025024, -2.0525705814361572, -2.214649200439453, -2.169621467590332, -2.035892963409424, -1.9102517366409302, -1.7909443378448486, -1.7162281274795532, -1.651557445526123, -1.5775796175003052, -1.5097243785858154, -1.4451829195022583, -1.3808107376098633, -1.3076838254928589, -1.1195673942565918, -0.8252816200256348, -0.5349398255348206, -0.2580118477344513, 0.009828831069171429, 0.2716897428035736, 0.5349469780921936, 0.7902784943580627, 1.052398443222046, 1.31592857837677, 1.570581078529358, 1.6137370109558105, 1.6365979194641114)
					Z = (-0.8819639682769775, -0.8812801241874695, -0.8804802298545837, -0.8791921734809875, -0.8777425289154053, -0.8758563995361328, -0.873963475227356, -0.8539403676986694, -0.7802032232284546, -0.761174201965332, -0.7716957926750183, -0.8395041823387146, -0.8772552609443665, -0.8344407081604004, -0.788372814655304, -0.80742347240448, -0.8527643084526062, -0.8346409797668457, -0.824370265007019, -0.8134136199951172, -0.7967275381088257, -0.7752544283866882, -0.7417746782302856, -0.6927484273910522, -0.633834719657898, -0.5747796297073364, -0.5113369226455688, -0.4433113932609558, -0.3737497925758362, -0.3008161187171936, -0.2312106341123581, -0.16523221135139465, -0.09990986436605453, -0.033577218651771545, 0.03842548280954361, 0.11881522089242935, 0.1981208622455597, 0.28177762031555176, 0.38250869512557983, 0.5017393231391907, 0.625041127204895, 0.7394312620162964, 0.8367793560028076, 0.9279725551605225, 1.0242633819580078, 1.1258037090301514, 1.2272775173187256, 1.3421326875686646, 1.4506069421768188, 1.561546802520752, 1.6706804037094116, 1.7743912935256958, 1.8515067100524902, 1.9097793102264404, 1.948763370513916, 1.9814872741699219, 2.0233898162841797, 2.07637095451355, 2.132861375808716, 2.17509126663208, 2.2180161476135254, 2.274773597717285, 2.3546767234802246, 2.4420950412750244, 2.5328733921051025, 2.6344215869903564, 2.7358694076538086, 2.8366494178771973, 2.9418249130249023, 3.0620920658111572, 3.1827614307403564, 3.30625581741333, 3.427833080291748, 3.5489587783813477, 3.675954818725586, 3.79117488861084, 3.901960849761963, 4.005653381347656, 4.107993125915527, 4.2158284187316895, 4.328779220581055, 4.445080280303955, 4.569532871246338, 4.690032005310059, 4.799752712249756, 4.872299671173096, 4.92843770980835, 4.985036849975586, 5.057000637054443, 5.13352108001709, 5.213327884674072, 5.295718193054199, 5.3766703605651855, 5.451817512512207, 5.519579887390137, 5.582165718078613, 5.639312267303467, 5.692175388336182, 5.7414727210998535, 5.787367820739746, 5.830183506011963, 5.869744300842285, 5.905086994171143, 5.936120986938477, 5.963281154632568, 5.987318992614746, 6.008669376373291, 6.027542591094971, 6.044310569763184, 6.057828903198242, 6.067286968231201, 6.074985504150391, 6.081448554992676, 6.086737155914307, 6.091536998748779, 6.096595764160156, 6.1012773513793945, 6.104137420654297, 6.10720682144165, 6.105283260345459, 6.09289026260376, 6.069871425628662, 6.042582988739014, 6.011574745178223, 5.977062702178955, 5.945542812347412, 5.9195661544799805, 5.900696277618408, 5.875031471252441, 5.850343227386475, 5.822032451629639, 5.787215232849121, 5.749323844909668, 5.708043575286865, 5.672667503356934, 5.640613079071045, 5.58774995803833, 5.510519504547119, 5.4132280349731445, 5.318352222442627, 5.21757173538208, 5.129578113555908, 5.049224376678467, 4.955892086029053, 4.855170726776123, 4.759181022644043, 4.6699957847595215, 4.590251922607422, 4.507761478424072, 4.420248508453369, 4.298507213592529, 4.1367998123168945, 3.954977035522461, 3.7536673545837402, 3.5393548011779785, 3.336235761642456, 3.13871431350708, 2.941469192504883, 2.743802785873413, 2.5500059127807617, 2.362222671508789, 2.172161817550659, 1.9712504148483276, 1.7527763843536377, 1.5335578918457031, 1.3216581344604492, 1.11974036693573, 0.924856424331665, 0.7362942099571228, 0.548167884349823, 0.3510936498641968, 0.14911779761314392, -0.04503828287124634, -0.22794248163700104, -0.3905165493488312, -0.5209499597549438, -0.6174218654632568, -0.6916936039924622, -0.7458155751228333, -0.7768694162368774, -0.7899942994117737, -0.7893635630607605, -0.7789414525032043, -0.7635725736618042, -0.7461717128753662, -0.7283236980438232, -0.704211413860321, -0.6622856855392456, -0.5993924140930176, -0.5216199159622192, -0.426088809967041, -0.3150973916053772, -0.1974087506532669, -0.07835512608289719, 0.03133012354373932, 0.13556505739688873, 0.24022513628005981, 0.3493971824645996, 0.45991453528404236, 0.5715771317481995, 0.6827750205993652, 0.7940959930419922, 0.907843291759491, 1.025125503540039, 1.148614764213562, 1.2811535596847534, 1.417541265487671, 1.5532535314559937, 1.6824359893798828, 1.7986339330673218, 1.8819316625595093, 1.9304401874542236, 1.9543043375015259, 1.9636659622192383, 1.9588732719421387, 1.916387915611267, 1.8345577716827393, 1.7349056005477905, 1.6296110153198242, 1.5208213329315186, 1.405418872833252, 1.2866981029510498, 1.16438889503479, 1.0394600629806519, 0.9107307195663452, 0.7798608541488647, 0.6512886881828308, 0.5262399315834045, 0.4030036926269531, 0.2815271019935608, 0.16398224234580994, 0.05072043836116791, -0.05590145289897919, -0.15327762067317963, -0.24135041236877441, -0.3243723213672638, -0.3988741636276245, -0.4620799124240875, -0.542617678642273, -0.646656334400177, -0.7287228107452393, -0.7844877243041992, -0.806078314781189, -0.8148013949394226, -0.8116025924682617, -0.8039451837539673, -0.7978506088256836, -0.8006065487861633, -0.8066939115524292, -0.8129818439483643, -0.8215823173522949, -0.8290983438491821, -0.8362972736358643, -0.8428731560707092, -0.8489797711372375, -0.8558133840560913, -0.8626493811607361, -0.8682581186294556, -0.8741699457168579, -0.879978597164154, -0.8859436511993408, -0.8909560441970825, -0.8937748670578003, -0.8939367532730103, -0.8897822499275208, -0.8787690997123718, -0.8593403697013855, -0.8307321667671204, -0.8021003603935242, -0.7821503281593323, -0.7700151801109314, -0.7592963576316833, -0.7492351531982422, -0.7390634417533875, -0.7314242720603943, -0.7212424278259277, -0.7080341577529907, -0.6888165473937988, -0.66937655210495, -0.6463529467582703, -0.6128187775611877, -0.5654257535934448, -0.5037499666213989, -0.42715343832969666, -0.34471648931503296, -0.25006303191185, -0.14578062295913696, -0.03818090260028839, 0.0759134441614151, 0.21288788318634033, 0.35622480511665344, 0.515775203704834, 0.6532223224639893, 0.7738814949989319, 0.8932506442070007, 1.0421302318572998, 1.2146294116973877, 1.385721206665039, 1.5515326261520386, 1.7406084537506104, 1.9566478729248047, 2.214561700820923, 2.5135207176208496, 2.8274102210998535, 3.160696268081665, 3.501220941543579, 3.8431997299194336, 4.200472354888916, 4.574350357055664, 4.894090175628662, 5.0936360359191895, 5.216364860534668, 5.390469074249268, 5.586197853088379, 5.784314155578613, 5.985593795776367, 6.1828765869140625, 6.373883247375488, 6.556783199310303, 6.733740329742432, 6.906088829040527, 7.071183204650879, 7.233142852783203, 7.3868231773376465, 7.530625343322754, 7.665377616882324, 7.797634124755859, 7.930730819702148, 8.059279441833496, 8.180848121643066, 8.296680450439453, 8.406368255615234, 8.505520820617676, 8.589674949645996, 8.655287742614746, 8.70052719116211, 8.722027778625488, 8.70865249633789, 8.652679443359375, 8.560135841369629, 8.443024635314941, 8.307100296020508, 8.149582862854004, 7.971302032470703, 7.780361175537109, 7.575259685516357, 7.355491638183594, 7.124767303466797, 6.885737419128418, 6.638427257537842, 6.395895481109619, 6.166090488433838, 5.953654766082764, 5.738729953765869, 5.529703140258789, 5.342148303985596, 5.179572105407715, 5.024766445159912, 4.851255416870117, 4.646117210388184, 4.430662155151367, 4.217848777770996, 4.0131144523620605, 3.7878849506378174, 3.559556245803833, 3.3353841304779053, 3.1190574169158936, 2.9180359840393066, 2.7267343997955322, 2.5381720066070557, 2.3227102756500244, 2.0959630012512207, 1.8809078931808472, 1.6847819089889526, 1.495663046836853, 1.3055880069732666, 1.1171165704727173, 0.9520562887191772, 0.8042331337928772, 0.681337833404541, 0.5795820951461792, 0.5025584101676941, 0.46133852005004883, 0.4328932762145996, 0.3858243227005005, 0.3234015107154846, 0.2624247372150421, 0.19709435105323792, 0.15313704311847687, 0.11826862394809723, 0.08544927090406418, 0.04712279140949249, 0.0015682056546211243, -0.026410788297653198, -0.03486667573451996, -0.027389593422412872, -0.0065015703439712524, 0.0059362053871154785, 0.002570606768131256, -0.006264716386795044, -0.013282939791679382, -0.018584154546260834, -0.022372961044311523, -0.0232115238904953, -0.02133723348379135, -0.030498042702674866, -0.057736508548259735, -0.09805164486169815, -0.13833804428577423, -0.17615404725074768, -0.21290594339370728, -0.24737012386322021, -0.26589956879615784, -0.2773838937282562, -0.2822290062904358, -0.2861996591091156, -0.2940981388092041, -0.2990141808986664, -0.3035801351070404, -0.3050832152366638, -0.3049992024898529, -0.30373987555503845, -0.3003387153148651, -0.29614898562431335, -0.2985635995864868, -0.31389492750167847, -0.34401920437812805, -0.3844596743583679, -0.4300534129142761, -0.4741150140762329, -0.5105020999908447, -0.5354415774345398, -0.552415132522583, -0.5600359439849854, -0.5654557943344116, -0.5681073665618896, -0.5666967630386353, -0.5622239112854004, -0.5597591996192932, -0.5650179386138916, -0.579081654548645, -0.5969113707542419, -0.6101321578025818, -0.622231125831604, -0.6340838074684143, -0.6458472609519958, -0.657522976398468, -0.6685013771057129, -0.6801296472549438, -0.6912583708763123, -0.7032382488250732, -0.7155491709709167, -0.7265709042549133, -0.7348979115486145, -0.7445682287216187, -0.7536845207214355, -0.761847198009491, -0.7706142067909241, -0.7806366682052612, -0.7898868322372437, -0.7978246212005615, -0.8051745295524597, -0.8114349842071533, -0.8171375393867493, -0.821597158908844, -0.8264663219451904, -0.8312869071960449, -0.8363567590713501, -0.8399266004562378, -0.8434712290763855, -0.8482410907745361, -0.8517320156097412, -0.8557907342910767, -0.8605977296829224, -0.864855170249939, -0.8680832982063293, -0.869952917098999, -0.8720065951347351, -0.8741781711578369, -0.8759156465530396, -0.8775535821914673, -0.8793764710426331, -0.8817098140716553, -0.8832718729972839, -0.8847836852073669, -0.8870889544487, -0.8891378045082092, -0.8896875977516174, -0.8895387649536133, -0.8889559507369995, -0.8881706595420837, -0.8874912261962891, -0.8865614533424377, -0.8851791024208069, -0.8832001686096191, -0.8809881806373596, -0.8781297206878662, -0.8746054172515869, -0.8718098402023315, -0.8688086271286011)
					Y = (0.24426956474781036, 0.4990326166152954, 0.819128692150116, 1.153626799583435, 1.5026447772979736, 1.8859440088272095, 2.373248815536499, 2.968236207962036, 3.61586332321167, 4.355114459991455, 5.173743724822998, 6.038478374481201, 6.951005458831787, 7.899267673492432, 8.918261528015137, 10.051026344299316, 11.312947273254395, 12.90755558013916, 14.871548652648926, 17.198680877685547, 19.908754348754883, 22.898487091064453, 26.10063934326172, 29.397844314575195, 32.636375427246094, 35.74137878417969, 38.707183837890625, 41.484439849853516, 44.07951736450195, 46.60736846923828, 49.15201187133789, 51.65317916870117, 54.06341552734375, 56.4561882019043, 58.852813720703125, 61.29132080078125, 63.84211730957031, 66.49172973632812, 69.07376861572266, 71.62057495117188, 74.08918762207031, 76.49169158935547, 78.78299713134766, 80.95753479003906, 83.06936645507812, 85.1029281616211, 87.12429809570312, 89.12969970703125, 91.03314971923828, 92.87902069091797, 94.55635070800781, 96.09061431884766, 97.33863830566406, 98.26770782470703, 98.91900634765625, 99.34143829345703, 99.79500579833984, 100.22048950195312, 100.46652221679688, 100.50714111328125, 100.43055725097656, 100.3218765258789, 100.27439880371094, 100.24840545654297, 100.22171020507812, 100.19712829589844, 100.16851043701172, 100.09687042236328, 100.02641296386719, 99.95970153808594, 99.8285140991211, 99.58265686035156, 99.25724792480469, 98.94861602783203, 98.7610855102539, 98.6032943725586, 98.43841552734375, 98.27819061279297, 98.11662292480469, 97.93367004394531, 97.72758483886719, 97.4378662109375, 97.10028839111328, 96.74153900146484, 96.36189270019531, 95.95005798339844, 95.50723266601562, 95.01679229736328, 94.47090911865234, 93.8803482055664, 93.24833679199219, 92.5796127319336, 91.90768432617188, 91.14244079589844, 90.31917572021484, 89.48597717285156, 88.64861297607422, 87.82418823242188, 87.01628875732422, 86.22871398925781, 85.56230163574219, 84.96900177001953, 84.57625579833984, 84.36016082763672, 84.20700073242188, 84.08193969726562, 83.97764587402344, 83.87611389160156, 83.92423248291016, 84.14193725585938, 84.41809844970703, 84.70330810546875, 85.00025939941406, 85.29436492919922, 85.68895721435547, 86.27693176269531, 87.06804656982422, 88.0323715209961, 89.15747833251953, 90.61774444580078, 92.43035125732422, 94.46464538574219, 96.57106018066406, 98.82080078125, 101.0973129272461, 103.33666229248047, 105.50848388671875, 107.6570053100586, 109.891357421875, 112.15137481689453, 114.42011260986328, 116.68489074707031, 118.90473175048828, 121.11170959472656, 123.25049591064453, 125.32403564453125, 127.53121185302734, 129.89825439453125, 132.2855987548828, 134.6158905029297, 136.92697143554688, 139.15802001953125, 141.3134002685547, 143.4351806640625, 145.5569305419922, 147.65158081054688, 149.7096405029297, 151.71261596679688, 153.65261840820312, 155.51608276367188, 157.31924438476562, 159.11117553710938, 160.7533416748047, 162.2732696533203, 163.74002075195312, 165.19287109375, 166.6624298095703, 168.05679321289062, 169.36721801757812, 170.6645965576172, 171.94862365722656, 173.23680114746094, 174.46946716308594, 175.60227966308594, 176.68606567382812, 177.7667236328125, 178.8304901123047, 179.89537048339844, 180.9698944091797, 182.1023712158203, 183.38099670410156, 184.83396911621094, 186.4405059814453, 188.17733764648438, 190.03277587890625, 191.99041748046875, 193.9769287109375, 195.76626586914062, 197.2998809814453, 198.64427185058594, 199.84442138671875, 201.0236358642578, 202.19769287109375, 203.31591796875, 204.40118408203125, 205.4407196044922, 206.46392822265625, 207.45944213867188, 208.4150848388672, 209.36993408203125, 210.36520385742188, 211.35165405273438, 212.19497680664062, 212.80360412597656, 212.99081420898438, 212.8595428466797, 212.59893798828125, 212.30372619628906, 211.88113403320312, 211.2249298095703, 210.27505493164062, 209.16802978515625, 207.95042419433594, 206.6737060546875, 205.3536376953125, 203.98805236816406, 202.4827117919922, 200.79603576660156, 198.84075927734375, 196.52613830566406, 193.94662475585938, 191.1892852783203, 188.33187866210938, 185.4967803955078, 182.7758331298828, 180.3319091796875, 178.08534240722656, 175.87472534179688, 173.57350158691406, 171.1052703857422, 168.51658630371094, 165.9554443359375, 163.4188995361328, 160.97314453125, 158.5869903564453, 156.26071166992188, 154.0010223388672, 151.86273193359375, 149.84214782714844, 147.8561553955078, 145.87100219726562, 143.8812255859375, 141.9394073486328, 140.04071044921875, 138.22088623046875, 136.38259887695312, 134.54953002929688, 132.78271484375, 130.9574737548828, 129.08750915527344, 127.25975799560547, 125.4315185546875, 123.64933013916016, 121.882080078125, 120.05531311035156, 118.18463134765625, 116.25498962402344, 114.34269714355469, 112.4908447265625, 110.6985092163086, 108.94164276123047, 107.16153717041016, 105.32911682128906, 103.44462585449219, 101.6138916015625, 99.76459503173828, 97.91300964355469, 96.16510772705078, 94.41311645507812, 92.58258056640625, 90.4946517944336, 88.02781677246094, 85.19628143310547, 82.00907135009766, 78.48986053466797, 74.69635772705078, 70.86166381835938, 67.15168762207031, 63.572113037109375, 60.10674285888672, 56.803375244140625, 53.6189079284668, 50.549373626708984, 47.61164474487305, 44.77302932739258, 41.92876434326172, 39.06986999511719, 36.2219352722168, 33.32758331298828, 30.242610931396484, 26.973918914794922, 23.662368774414062, 20.41046714782715, 17.231449127197266, 14.126823425292969, 11.168815612792969, 8.347853660583496, 5.706920623779297, 3.3018741607666016, 1.2335699796676636, -0.5328974723815918, -2.043576717376709, -3.110535144805908, -3.740983486175537, -4.098943710327148, -4.4906511306762695, -4.8972249031066895, -5.2530198097229, -5.577995777130127, -5.934023857116699, -6.255759239196777, -6.630918025970459, -7.013139724731445, -7.412384033203125, -7.725191116333008, -8.017799377441406, -8.335323333740234, -8.662646293640137, -9.008383750915527, -9.383427619934082, -9.718378067016602, -10.013775825500488, -10.301630973815918, -10.562592506408691, -10.815587997436523, -11.065951347351074, -11.301687240600586, -11.448249816894531, -11.537090301513672, -11.524465560913086, -11.443005561828613, -11.383244514465332, -11.339241981506348, -11.295818328857422, -11.257658004760742, -11.223909378051758, -11.219079971313477, -11.304905891418457, -11.446738243103027, -11.616390228271484, -11.812542915344238, -12.02774429321289, -12.266841888427734, -12.534515380859375, -12.815123558044434, -13.006359100341797, -13.117430686950684, -13.182148933410645, -13.210461616516113, -13.223767280578613, -13.236565589904785, -13.257308006286621, -13.364906311035156, -13.60283374786377, -13.906349182128906, -14.247852325439453, -14.630463600158691, -15.034890174865723, -15.458684921264648, -15.909191131591797, -16.372478485107422, -16.83634376525879, -17.298728942871094, -17.954330444335938, -18.74985694885254, -19.579227447509766, -20.42566680908203, -21.43193817138672, -22.800357818603516, -24.44293212890625, -26.13048553466797, -27.82823944091797, -29.55722427368164, -31.477741241455078, -33.487709045410156, -35.511478424072266, -37.493263244628906, -39.456016540527344, -41.433685302734375, -43.504295349121094, -45.86669158935547, -48.45779037475586, -51.14822006225586, -53.83092498779297, -56.52829360961914, -59.291015625, -62.107452392578125, -64.86852264404297, -67.60960388183594, -70.36067199707031, -73.03939819335938, -75.66210174560547, -78.23661041259766, -80.80587005615234, -83.38500213623047, -85.95026397705078, -88.392578125, -90.68785095214844, -92.96864318847656, -95.2093505859375, -97.35236358642578, -99.36150360107422, -101.18042755126953, -102.92134857177734, -104.60369110107422, -106.27859497070312, -107.93692779541016, -109.50454711914062, -110.95790100097656, -112.26480102539062, -113.4476318359375, -114.55032348632812, -115.59841918945312, -116.59353637695312, -117.56787872314453, -118.43424987792969, -119.07018280029297, -119.529541015625, -119.9432144165039, -120.33118438720703, -120.70291137695312, -121.06876373291016, -121.57264709472656, -122.14915466308594, -122.72602844238281, -123.31329345703125, -123.84371948242188, -124.38484191894531, -124.94699096679688, -125.50639343261719, -126.06773376464844, -126.62725067138672, -127.21639251708984, -127.76771545410156, -128.14712524414062, -128.24986267089844, -128.0001220703125, -127.45743560791016, -126.70941925048828, -125.85266876220703, -124.98062133789062, -124.1561508178711, -123.36287689208984, -122.56819915771484, -121.65084838867188, -120.66740417480469, -119.70370483398438, -118.76301574707031, -117.76809692382812, -116.55887603759766, -115.09596252441406, -113.52935028076172, -111.99527740478516, -110.50000762939453, -108.9967041015625, -107.39553833007812, -105.7052001953125, -103.86796569824219, -101.89085388183594, -99.83897399902344, -97.75530242919922, -95.71993255615234, -93.73746490478516, -91.82310485839844, -89.95047760009766, -88.10604858398438, -86.26592254638672, -84.39051818847656, -82.42990112304688, -80.4601821899414, -78.54206085205078, -76.67953491210938, -74.87965393066406, -73.13782501220703, -71.447998046875, -69.79700469970703, -68.07174682617188, -66.20356750488281, -64.17756652832031, -62.02452850341797, -59.78955841064453, -57.599979400634766, -55.49079895019531, -53.38170623779297, -51.32799530029297, -49.24906539916992, -47.25999069213867, -45.2713508605957, -43.23389434814453, -41.17817687988281, -39.17205047607422, -37.22850799560547, -35.21967697143555, -33.25495910644531, -31.328039169311523, -29.30510902404785, -27.14748191833496, -24.93663215637207, -22.68917465209961, -20.511201858520508, -18.440406799316406, -16.442750930786133, -14.476696014404297, -12.49740982055664, -10.538829803466797, -8.549440383911133, -6.5612688064575195, -4.653802394866943, -2.830416679382324, -1.0931862592697144)
					Xmap = [-215.266 -214.266 -213.266 -212.266 -211.266 -210.266 -209.266 -208.266 -207.266 -206.266 -205.266 -204.266 -203.266 -202.266 -201.266 -200.266 -199.266 -198.266 -197.266 -196.266 -195.266 -194.266 -193.266 -192.266 -191.266 -190.266 -189.266 -188.266 -187.266 -186.266 -185.266 -184.266 -183.266 -182.266 -181.266 -180.266 -179.266 -178.266 -177.266 -176.266 -175.266 -174.266 -173.266 -172.266 -171.266 -170.266 -169.266 -168.266 -167.266 -166.266 -165.266 -164.266 -163.266 -162.266 -161.266 -160.266 -159.266 -158.266 -157.266 -156.266 -155.266 -154.266 -153.266 -152.266 -151.266 -150.266 -149.266 -148.266 -147.266 -146.266 -145.266 -144.266 -143.266 -142.266 -141.266 -140.266 -139.266 -138.266 -137.266 -136.266 -135.266 -134.266 -133.266 -132.266 -131.266 -130.266 -129.266 -128.266 -127.266 -126.266 -125.266 -124.266 -123.266 -122.266 -121.266 -120.266 -119.266 -118.266 -117.266 -116.266 -115.266 -114.266 -113.266 -112.266 -111.266 -110.266 -109.266 -108.266 -107.266 -106.266 -105.266 -104.266 -103.266 -102.266 -101.266 -100.266  -99.266  -98.266  -97.266  -96.266  -95.266  -94.266  -93.266  -92.266  -91.266  -90.266  -89.266  -88.266  -87.266  -86.266  -85.266  -84.266  -83.266  -82.266  -81.266  -80.266  -79.266  -78.266  -77.266  -76.266  -75.266  -74.266  -73.266  -72.266  -71.266  -70.266  -69.266  -68.266  -67.266  -66.266  -65.266  -64.266  -63.266  -62.266  -61.266  -60.266  -59.266  -58.266  -57.266  -56.266  -55.266  -54.266  -53.266  -52.266  -51.266  -50.266  -49.266  -48.266  -47.266  -46.266  -45.266  -44.266  -43.266  -42.266  -41.266  -40.266  -39.266  -38.266  -37.266  -36.266  -35.266  -34.266  -33.266  -32.266  -31.266  -30.266  -29.266  -28.266  -27.266  -26.266  -25.266  -24.266  -23.266  -22.266  -21.266  -20.266  -19.266  -18.266  -17.266  -16.266  -15.266  -14.266  -13.266  -12.266  -11.266  -10.266   -9.266   -8.266   -7.266   -6.266   -5.266   -4.266   -3.266   -2.266   -1.266   -0.266    0.734    1.734    2.734    3.734    4.734    5.734
					    6.734    7.734    8.734    9.734   10.734   11.734   12.734   13.734   14.734   15.734   16.734   17.734   18.734   19.734   20.734   21.734   22.734   23.734   24.734   25.734   26.734   27.734   28.734   29.734   30.734   31.734   32.734   33.734   34.734   35.734   36.734   37.734   38.734   39.734   40.734   41.734   42.734   43.734   44.734   45.734   46.734   47.734   48.734   49.734   50.734   51.734   52.734   53.734   54.734   55.734   56.734   57.734   58.734   59.734   60.734   61.734   62.734   63.734   64.734   65.734   66.734   67.734   68.734   69.734   70.734   71.734   72.734   73.734   74.734   75.734   76.734   77.734   78.734   79.734   80.734   81.734   82.734   83.734   84.734   85.734   86.734   87.734   88.734   89.734   90.734   91.734   92.734   93.734   94.734   95.734   96.734   97.734   98.734   99.734  100.734  101.734  102.734  103.734  104.734  105.734  106.734  107.734  108.734  109.734  110.734  111.734  112.734  113.734  114.734  115.734  116.734  117.734  118.734  119.734  120.734  121.734  122.734  123.734  124.734  125.734  126.734  127.734  128.734  129.734  130.734  131.734  132.734  133.734  134.734  135.734  136.734  137.734  138.734  139.734  140.734  141.734  142.734  143.734  144.734  145.734  146.734  147.734  148.734  149.734  150.734  151.734  152.734  153.734  154.734  155.734  156.734  157.734  158.734  159.734  160.734  161.734  162.734  163.734  164.734  165.734  166.734  167.734  168.734  169.734  170.734  171.734  172.734  173.734  174.734  175.734  176.734  177.734  178.734  179.734  180.734  181.734  182.734  183.734  184.734  185.734  186.734  187.734  188.734  189.734  190.734  191.734  192.734  193.734  194.734  195.734  196.734  197.734  198.734  199.734  200.734  201.734  202.734  203.734  204.734  205.734  206.734  207.734  208.734  209.734]
					Ymap = [-1.782e+02 -1.772e+02 -1.762e+02 -1.752e+02 -1.742e+02 -1.732e+02 -1.722e+02 -1.712e+02 -1.702e+02 -1.692e+02 -1.682e+02 -1.672e+02 -1.662e+02 -1.652e+02 -1.642e+02 -1.632e+02 -1.622e+02 -1.612e+02 -1.602e+02 -1.592e+02 -1.582e+02 -1.572e+02 -1.562e+02 -1.552e+02 -1.542e+02 -1.532e+02 -1.522e+02 -1.512e+02 -1.502e+02 -1.492e+02 -1.482e+02 -1.472e+02 -1.462e+02 -1.452e+02 -1.442e+02 -1.432e+02 -1.422e+02 -1.412e+02 -1.402e+02 -1.392e+02 -1.382e+02 -1.372e+02 -1.362e+02 -1.352e+02 -1.342e+02 -1.332e+02 -1.322e+02 -1.312e+02 -1.302e+02 -1.292e+02 -1.282e+02 -1.272e+02 -1.262e+02 -1.252e+02 -1.242e+02 -1.232e+02 -1.222e+02 -1.212e+02 -1.202e+02 -1.192e+02 -1.182e+02 -1.172e+02 -1.162e+02 -1.152e+02 -1.142e+02 -1.132e+02 -1.122e+02 -1.112e+02 -1.102e+02 -1.092e+02 -1.082e+02 -1.072e+02 -1.062e+02 -1.052e+02 -1.042e+02 -1.032e+02 -1.022e+02 -1.012e+02 -1.002e+02 -9.925e+01 -9.825e+01 -9.725e+01 -9.625e+01 -9.525e+01 -9.425e+01 -9.325e+01 -9.225e+01 -9.125e+01 -9.025e+01 -8.925e+01 -8.825e+01 -8.725e+01 -8.625e+01 -8.525e+01 -8.425e+01 -8.325e+01 -8.225e+01 -8.125e+01 -8.025e+01 -7.925e+01 -7.825e+01 -7.725e+01 -7.625e+01 -7.525e+01 -7.425e+01 -7.325e+01 -7.225e+01 -7.125e+01 -7.025e+01 -6.925e+01 -6.825e+01 -6.725e+01 -6.625e+01 -6.525e+01 -6.425e+01 -6.325e+01 -6.225e+01 -6.125e+01 -6.025e+01 -5.925e+01 -5.825e+01 -5.725e+01 -5.625e+01 -5.525e+01 -5.425e+01 -5.325e+01 -5.225e+01 -5.125e+01 -5.025e+01 -4.925e+01 -4.825e+01 -4.725e+01 -4.625e+01 -4.525e+01 -4.425e+01 -4.325e+01 -4.225e+01 -4.125e+01 -4.025e+01 -3.925e+01 -3.825e+01 -3.725e+01 -3.625e+01 -3.525e+01 -3.425e+01 -3.325e+01 -3.225e+01 -3.125e+01 -3.025e+01 -2.925e+01 -2.825e+01 -2.725e+01 -2.625e+01 -2.525e+01 -2.425e+01 -2.325e+01 -2.225e+01 -2.125e+01 -2.025e+01 -1.925e+01 -1.825e+01 -1.725e+01 -1.625e+01 -1.525e+01 -1.425e+01 -1.325e+01 -1.225e+01 -1.125e+01 -1.025e+01 -9.250e+00 -8.250e+00 -7.250e+00 -6.250e+00 -5.250e+00 -4.250e+00 -3.250e+00 -2.250e+00 -1.250e+00 -2.499e-01  7.501e-01  1.750e+00
					  2.750e+00  3.750e+00  4.750e+00  5.750e+00  6.750e+00  7.750e+00  8.750e+00  9.750e+00  1.075e+01  1.175e+01  1.275e+01  1.375e+01  1.475e+01  1.575e+01  1.675e+01  1.775e+01  1.875e+01  1.975e+01  2.075e+01  2.175e+01  2.275e+01  2.375e+01  2.475e+01  2.575e+01  2.675e+01  2.775e+01  2.875e+01  2.975e+01  3.075e+01  3.175e+01  3.275e+01  3.375e+01  3.475e+01  3.575e+01  3.675e+01  3.775e+01  3.875e+01  3.975e+01  4.075e+01  4.175e+01  4.275e+01  4.375e+01  4.475e+01  4.575e+01  4.675e+01  4.775e+01  4.875e+01  4.975e+01  5.075e+01  5.175e+01  5.275e+01  5.375e+01  5.475e+01  5.575e+01  5.675e+01  5.775e+01  5.875e+01  5.975e+01  6.075e+01  6.175e+01  6.275e+01  6.375e+01  6.475e+01  6.575e+01  6.675e+01  6.775e+01  6.875e+01  6.975e+01  7.075e+01  7.175e+01  7.275e+01  7.375e+01  7.475e+01  7.575e+01  7.675e+01  7.775e+01  7.875e+01  7.975e+01  8.075e+01  8.175e+01  8.275e+01  8.375e+01  8.475e+01  8.575e+01  8.675e+01  8.775e+01  8.875e+01  8.975e+01  9.075e+01  9.175e+01  9.275e+01  9.375e+01  9.475e+01  9.575e+01  9.675e+01  9.775e+01  9.875e+01  9.975e+01  1.008e+02  1.018e+02  1.028e+02  1.038e+02  1.048e+02  1.058e+02  1.068e+02  1.078e+02  1.088e+02  1.098e+02  1.108e+02  1.118e+02  1.128e+02  1.138e+02  1.148e+02  1.158e+02  1.168e+02  1.178e+02  1.188e+02  1.198e+02  1.208e+02  1.218e+02  1.228e+02  1.238e+02  1.248e+02  1.258e+02  1.268e+02  1.278e+02  1.288e+02  1.298e+02  1.308e+02  1.318e+02  1.328e+02  1.338e+02  1.348e+02  1.358e+02  1.368e+02  1.378e+02  1.388e+02  1.398e+02  1.408e+02  1.418e+02  1.428e+02  1.438e+02  1.448e+02  1.458e+02  1.468e+02  1.478e+02  1.488e+02  1.498e+02  1.508e+02  1.518e+02  1.528e+02  1.538e+02  1.548e+02  1.558e+02  1.568e+02  1.578e+02  1.588e+02  1.598e+02  1.608e+02  1.618e+02  1.628e+02  1.638e+02  1.648e+02  1.658e+02  1.668e+02  1.678e+02  1.688e+02  1.698e+02  1.708e+02  1.718e+02  1.728e+02  1.738e+02  1.748e+02  1.758e+02  1.768e+02  1.778e+02  1.788e+02  1.798e+02  1.808e+02  1.818e+02  1.828e+02
					  1.838e+02  1.848e+02  1.858e+02  1.868e+02  1.878e+02  1.888e+02  1.898e+02  1.908e+02  1.918e+02  1.928e+02  1.938e+02  1.948e+02  1.958e+02  1.968e+02  1.978e+02  1.988e+02  1.998e+02  2.008e+02  2.018e+02  2.028e+02  2.038e+02  2.048e+02  2.058e+02  2.068e+02  2.078e+02  2.088e+02  2.098e+02  2.108e+02  2.118e+02  2.128e+02  2.138e+02  2.148e+02  2.158e+02  2.168e+02  2.178e+02  2.188e+02  2.198e+02  2.208e+02  2.218e+02  2.228e+02  2.238e+02  2.248e+02  2.258e+02  2.268e+02  2.278e+02  2.288e+02  2.298e+02  2.308e+02  2.318e+02  2.328e+02  2.338e+02  2.348e+02  2.358e+02  2.368e+02  2.378e+02  2.388e+02  2.398e+02  2.408e+02  2.418e+02  2.428e+02  2.438e+02  2.448e+02  2.458e+02  2.468e+02  2.478e+02  2.488e+02  2.498e+02  2.508e+02  2.518e+02  2.528e+02  2.538e+02  2.548e+02  2.558e+02  2.568e+02  2.578e+02  2.588e+02  2.598e+02  2.608e+02  2.618e+02  2.628e+02]
					Zmap = [-5.894 -4.894 -3.894 -2.894 -1.894 -0.894  0.106  1.106  2.106  3.106  4.106  5.106  6.106  7.106  8.106  9.106 10.106 11.106 12.106 13.106]
					point_map = [[[291 291 291 ... 291 291 291]
					  [291 291 291 ... 291 291 291]
					  [291 291 291 ... 291 291 291]
					  ...
					  [161 161 161 ... 161 161 161]
					  [161 161 161 ... 161 161 161]
					  [161 161 161 ... 161 161 161]]
					
					 [[291 291 291 ... 291 291 291]
					  [291 291 291 ... 291 291 291]
					  [291 291 291 ... 291 291 291]
					  ...
					  [161 161 161 ... 161 161 161]
					  [161 161 161 ... 161 161 161]
					  [162 162 162 ... 161 161 161]]
					
					 [[291 291 291 ... 292 292 292]
					  [291 291 291 ... 291 292 292]
					  [291 291 291 ... 291 291 291]
					  ...
					  [162 162 161 ... 161 161 161]
					  [162 162 162 ... 161 161 161]
					  [162 162 162 ... 161 161 161]]
					
					 ...
					
					 [[395 395 395 ... 395 395 395]
					  [395 395 395 ... 395 395 395]
					  [395 395 395 ... 395 395 395]
					  ...
					  [210 210 210 ... 210 210 210]
					  [210 210 210 ... 210 210 210]
					  [210 210 210 ... 210 210 210]]
					
					 [[395 395 395 ... 395 395 395]
					  [395 395 395 ... 395 395 395]
					  [395 395 395 ... 395 395 395]
					  ...
					  [210 210 210 ... 210 210 210]
					  [210 210 210 ... 210 210 210]
					  [210 210 210 ... 210 210 210]]
					
					 [[395 395 395 ... 395 395 395]
					  [395 395 395 ... 395 395 395]
					  [394 394 394 ... 394 394 394]
					  ...
					  [210 210 210 ... 210 210 210]
					  [210 210 210 ... 210 210 210]
					  [210 210 210 ... 210 210 210]]]
					res = 1
					min_point = [-215.266 -178.250   -5.894]
					max_point = [ 209.734  262.750   13.106]
				X = [-215.266 -215.166 -215.066 ...  210.034  210.134  210.234]
				Y = [-178.250 -178.150 -178.050 ...  262.750  262.850  262.950]
				Z = [-0.894  8.722]
				cost_map = [[[ 214.381  214.381]
				  [ 214.299  214.299]
				  [ 214.217  214.217]
				  ...
				  [ 112.184  112.184]
				  [ 112.264  112.264]
				  [ 112.344  112.344]]
				
				 [[ 214.324  214.324]
				  [ 214.242  214.242]
				  [ 214.160  214.160]
				  ...
				  [ 112.124  112.124]
				  [ 112.204  112.204]
				  [ 112.284  112.284]]
				
				 [[ 214.267  214.267]
				  [ 214.185  214.185]
				  [ 214.103  214.103]
				  ...
				  [ 112.064  112.064]
				  [ 112.144  112.144]
				  [ 112.224  112.224]]
				
				 ...
				
				 [[  96.764   96.764]
				  [  96.690   96.690]
				  [  96.616   96.616]
				  ...
				  [ 242.661  242.661]
				  [ 242.689  242.689]
				  [ 242.717  242.717]]
				
				 [[  96.831   96.831]
				  [  96.757   96.757]
				  [  96.683   96.683]
				  ...
				  [ 242.757  242.757]
				  [ 242.785  242.785]
				  [ 242.813  242.813]]
				
				 [[  96.898   96.898]
				  [  96.824   96.824]
				  [  96.750   96.750]
				  ...
				  [ 242.852  242.852]
				  [ 242.881  242.881]
				  [ 242.909  242.909]]]
				res = 0.1
				min_point = [-215.266 -178.250   -0.894]
				max_point = [ 210.234  262.950    8.722]
				src = 
						def get_cost(self, state, prevstate=None):
							prevstate = state if prevstate is None else prevstate
							prevpos = prevstate["pos"][...,[0,2,1]]
							pos = state["pos"][...,[0,2,1]]
							vy = state["vel"][...,-1]
							cost = self.get_point_cost(pos, transform=True)
							progress = self.track.get_progress(prevpos, pos)
							reward = np.minimum(progress,0) + 2*progress + np.tanh(vy/self.vtarget)-np.power(self.vtarget-vy,2)/self.vtarget**2 - cost
							# reward = progress + np.tanh(vy/self.vtarget) - cost
				
				vtarget = 20
			action_space = Box(3,) 
				dtype = float32
				shape = (3,)
				low = [-1.000 -1.000 -1.000]
				high = [ 1.000  1.000  1.000]
				bounded_below = [ True  True  True]
				bounded_above = [ True  True  True]
				np_random = RandomState(MT19937)
			cost_queries = <list len=25>
			dynamics_size = 13
			obs = [ 1.617e-09 -3.908e-03 -7.273e-09  1.777e-12 -1.954e-01  3.555e-13  0.000e+00  0.000e+00  0.000e+00  1.000e+00  9.095e-13 -1.164e-10 -4.547e-12  0.000e+00  2.000e-02  3.657e-01  4.017e-01  4.572e-01  5.260e-01  6.036e-01  2.700e-01  3.171e-01  3.850e-01  4.646e-01  5.509e-01  1.792e-01  2.444e-01  3.277e-01  4.184e-01  5.125e-01  1.063e-01  1.973e-01  2.942e-01  3.927e-01  4.918e-01  1.024e-01  1.953e-01  2.929e-01  3.917e-01  4.910e-01]
			observation_space = Box(80,) 
				dtype = float32
				shape = (80,)
				low = [-inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf]
				high = [ inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf]
				bounded_below = [False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False]
				bounded_above = [False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False]
				np_random = RandomState(MT19937)
			src = 		return state
				
					def step(self, action):
						self.time += 1
						next_state, reward, done, info = self.env.step(action)
						idle = next_state[29]
						done = done or idle>self.idle_timeout or self.time > self.max_time
						next_state, next_spec = self.observation(next_state)
						terminal = -(1-self.time/self.max_time)*int(done)
						reward = -self.cost_model.get_cost(next_spec, self.spec) + terminal
						self.spec = next_spec
			
			max_time = 500
			time = 0
			idle_timeout = 10
			spec = EnvSpec(CarRacing-v1) 
				id = CarRacing-v1
				entry_point = <class 'src.envs.CarRacing.car_racing.CarRacing'> 
					reset = <function CarRacing.reset at 0x7f672e896710>
					step = <function CarRacing.step at 0x7f672e896680>
					render = <function CarRacing.render at 0x7f6758cfec20>
					dynamics_spec = <staticmethod object at 0x7f672e894e50>
					track_spec = <function CarRacing.track_spec at 0x7f6758cfed40>
					observation = <function CarRacing.observation at 0x7f6758cfedd0>
					dynamics_keys = <staticmethod object at 0x7f672e894d50>
					observation_spec = <staticmethod object at 0x7f672e894d90>
					close = <function CarRacing.close at 0x7f6758cfef80>
					id = 2
				reward_threshold = None
				nondeterministic = False
				max_episode_steps = None
			verbose = 0
		action_space = Box(3,) 
			dtype = float32
			shape = (3,)
			low = [-1.000 -1.000 -1.000]
			high = [ 1.000  1.000  1.000]
			bounded_below = [ True  True  True]
			bounded_above = [ True  True  True]
			np_random = RandomState(MT19937)
		observation_space = Box(80,) 
			dtype = float32
			shape = (80,)
			low = [-inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf]
			high = [ inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf]
			bounded_below = [False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False]
			bounded_above = [False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False]
			np_random = RandomState(MT19937)
		reward_range = (-inf, inf)
		metadata = {'render.modes': []}
		preprocess = <src.envs.wrappers.RawPreprocess object at 0x7f66ae8d67d0> 
			observation_space = Box(80,) 
				dtype = float32
				shape = (80,)
				low = [-inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf]
				high = [ inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf]
				bounded_below = [False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False]
				bounded_above = [False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False]
				np_random = RandomState(MT19937)
	state_size = (80,)
	action_size = (3,)
	action_space = Box(3,) 
		dtype = float32
		shape = (3,)
		low = [-1.000 -1.000 -1.000]
		high = [ 1.000  1.000  1.000]
		bounded_below = [ True  True  True]
		bounded_above = [ True  True  True]
		np_random = RandomState(MT19937)
	server_ports = <list len=16>
	conn = <src.utils.multiprocess.TCPClient object at 0x7f66ae8d6910> 
		num_clients = 16
		client_ranks = <list len=16>
		client_ports = <list len=16>
		client_sockets = {9001: <socket.socket fd=89, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 54310), raddr=('127.0.0.1', 9001)>, 9002: <socket.socket fd=91, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 49494), raddr=('127.0.0.1', 9002)>, 9003: <socket.socket fd=92, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 40982), raddr=('127.0.0.1', 9003)>, 9004: <socket.socket fd=115, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 52706), raddr=('127.0.0.1', 9004)>, 9005: <socket.socket fd=131, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 48130), raddr=('127.0.0.1', 9005)>, 9006: <socket.socket fd=181, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 50880), raddr=('127.0.0.1', 9006)>, 9007: <socket.socket fd=182, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 41198), raddr=('127.0.0.1', 9007)>, 9008: <socket.socket fd=183, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 44208), raddr=('127.0.0.1', 9008)>, 9009: <socket.socket fd=184, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 57854), raddr=('127.0.0.1', 9009)>, 9010: <socket.socket fd=185, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 60668), raddr=('127.0.0.1', 9010)>, 9011: <socket.socket fd=186, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 44622), raddr=('127.0.0.1', 9011)>, 9012: <socket.socket fd=187, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 58982), raddr=('127.0.0.1', 9012)>, 9013: <socket.socket fd=188, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 32820), raddr=('127.0.0.1', 9013)>, 9014: <socket.socket fd=189, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 35892), raddr=('127.0.0.1', 9014)>, 9015: <socket.socket fd=190, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 51204), raddr=('127.0.0.1', 9015)>, 9016: <socket.socket fd=191, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 50030), raddr=('127.0.0.1', 9016)>}
	num_envs = 16
	max_steps = 1000,
agent: <src.models.wrappers.ParallelAgent object at 0x7f66ae8d66d0> 
	icm = None
	stack = <src.models.wrappers.RawState object at 0x7f66ae8d6f10> 
		state_size = (80,)
	agent = <src.models.pytorch.mpc.mppi.MPPIAgent object at 0x7f66ae8d6d90> 
		noise_process = <src.utils.rand.BrownianNoise object at 0x7f66ae8d6690> 
			size = (3,)
			dt = 0.2
			action = [-1.000  0.406  0.093]
			daction_dt = [ 0.382  0.734  0.758]
		discrete = False
		action_size = (3,)
		state_size = (80,)
		config = <src.utils.config.Config object at 0x7f66b40d74d0> 
			TRIAL_AT = 1000
			SAVE_AT = 1
			SEED = 0
			REG_LAMBDA = 1e-06
			LEARN_RATE = 0.0001
			DISCOUNT_RATE = 0.99
			ADVANTAGE_DECAY = 0.95
			INPUT_LAYER = 512
			ACTOR_HIDDEN = 256
			CRITIC_HIDDEN = 1024
			EPS_MAX = 1.0
			EPS_MIN = 0.1
			EPS_DECAY = 0.98
			NUM_STEPS = 40
			MAX_BUFFER_SIZE = 1000000
			REPLAY_BATCH_SIZE = 5000
			TARGET_UPDATE_RATE = 0.0004
			BATCH_SIZE = 250
			DYN_EPOCHS = 10
			TRAIN_EVERY = 1000
			ENV_MODEL = dfrntl
			MPC = <src.utils.config.Config object at 0x7f6758c1ba90> 
				NSAMPLES = 100
				HORIZON = 40
				LAMBDA = 0.1
				CONTROL_FREQ = 1
			REWARD_MODEL = src.envs.CarRacing.objective.cost:CostModel
			DYNAMICS_SPEC = src.envs.CarRacing.car_racing:CarRacing
			dynamics_size = 13
			state_size = (80,)
			action_size = (3,)
			env_name = CarRacing-v1
			rank = 0
			size = 17
			split = 17
			model = mppi
			framework = pt
			train_prop = 1.0
			tcp_ports = <list len=17>
			tcp_rank = 0
			num_envs = 1
			nsteps = 500000
			render = False
			trial = False
			icm = False
			rs = False
			DYN = <src.utils.config.Config object at 0x7f66b40c0bd0> 
				REG_LAMBDA = 1e-06
				FACTOR = 0.5
				PATIENCE = 5
				LEARN_RATE = 0.001
				TRANSITION_HIDDEN = 256
				REWARD_HIDDEN = 256
				BETA_DYN = 0.1
				BETA_DOT = 1
				BETA_DDOT = 1
		stats = <src.utils.logger.Stats object at 0x7f66ae8d6a10> 
			mean_dict = {}
			sum_dict = {}
		eps = 1.0
		network = MPPIController() 
			training = True
			tau = 0.0004
			name = mppi
			stats = <src.utils.logger.Stats object at 0x7f66ae8d6d10> 
				mean_dict = {}
				sum_dict = {}
			config = <src.utils.config.Config object at 0x7f66b40d74d0> 
				TRIAL_AT = 1000
				SAVE_AT = 1
				SEED = 0
				REG_LAMBDA = 1e-06
				LEARN_RATE = 0.0001
				DISCOUNT_RATE = 0.99
				ADVANTAGE_DECAY = 0.95
				INPUT_LAYER = 512
				ACTOR_HIDDEN = 256
				CRITIC_HIDDEN = 1024
				EPS_MAX = 1.0
				EPS_MIN = 0.1
				EPS_DECAY = 0.98
				NUM_STEPS = 40
				MAX_BUFFER_SIZE = 1000000
				REPLAY_BATCH_SIZE = 5000
				TARGET_UPDATE_RATE = 0.0004
				BATCH_SIZE = 250
				DYN_EPOCHS = 10
				TRAIN_EVERY = 1000
				ENV_MODEL = dfrntl
				MPC = <src.utils.config.Config object at 0x7f6758c1ba90> 
					NSAMPLES = 100
					HORIZON = 40
					LAMBDA = 0.1
					CONTROL_FREQ = 1
				REWARD_MODEL = src.envs.CarRacing.objective.cost:CostModel
				DYNAMICS_SPEC = src.envs.CarRacing.car_racing:CarRacing
				dynamics_size = 13
				state_size = (80,)
				action_size = (3,)
				env_name = CarRacing-v1
				rank = 0
				size = 17
				split = 17
				model = mppi
				framework = pt
				train_prop = 1.0
				tcp_ports = <list len=17>
				tcp_rank = 0
				num_envs = 1
				nsteps = 500000
				render = False
				trial = False
				icm = False
				rs = False
				DYN = <src.utils.config.Config object at 0x7f66b40c0bd0> 
					REG_LAMBDA = 1e-06
					FACTOR = 0.5
					PATIENCE = 5
					LEARN_RATE = 0.001
					TRANSITION_HIDDEN = 256
					REWARD_HIDDEN = 256
					BETA_DYN = 0.1
					BETA_DOT = 1
					BETA_DDOT = 1
			device = cuda
			envmodel = <src.models.pytorch.mpc.EnvModel object at 0x7f66ae8d6890> 
				network = DifferentialEnv(
					  (reward): RewardModel(
					    (linear1): Linear(in_features=29, out_features=256, bias=True)
					    (linear2): Linear(in_features=256, out_features=256, bias=True)
					    (linear3): Linear(in_features=256, out_features=1, bias=True)
					  )
					  (dynamics): TransitionModel(
					    (gru): GRUCell(29, 256)
					    (linear1): Linear(in_features=256, out_features=256, bias=True)
					    (linear2): Linear(in_features=256, out_features=256, bias=True)
					    (state_ddot): Linear(in_features=256, out_features=13, bias=True)
					  )
					) 
					training = True
					tau = 0.0004
					name = dfrntl
					stats = <src.utils.logger.Stats object at 0x7f66ae8d6c10> 
						mean_dict = {}
						sum_dict = {}
					config = <src.utils.config.Config object at 0x7f66b40d74d0> 
						TRIAL_AT = 1000
						SAVE_AT = 1
						SEED = 0
						REG_LAMBDA = 1e-06
						LEARN_RATE = 0.0001
						DISCOUNT_RATE = 0.99
						ADVANTAGE_DECAY = 0.95
						INPUT_LAYER = 512
						ACTOR_HIDDEN = 256
						CRITIC_HIDDEN = 1024
						EPS_MAX = 1.0
						EPS_MIN = 0.1
						EPS_DECAY = 0.98
						NUM_STEPS = 40
						MAX_BUFFER_SIZE = 1000000
						REPLAY_BATCH_SIZE = 5000
						TARGET_UPDATE_RATE = 0.0004
						BATCH_SIZE = 250
						DYN_EPOCHS = 10
						TRAIN_EVERY = 1000
						ENV_MODEL = dfrntl
						MPC = <src.utils.config.Config object at 0x7f6758c1ba90> 
							NSAMPLES = 100
							HORIZON = 40
							LAMBDA = 0.1
							CONTROL_FREQ = 1
						REWARD_MODEL = src.envs.CarRacing.objective.cost:CostModel
						DYNAMICS_SPEC = src.envs.CarRacing.car_racing:CarRacing
						dynamics_size = 13
						state_size = (80,)
						action_size = (3,)
						env_name = CarRacing-v1
						rank = 0
						size = 17
						split = 17
						model = mppi
						framework = pt
						train_prop = 1.0
						tcp_ports = <list len=17>
						tcp_rank = 0
						num_envs = 1
						nsteps = 500000
						render = False
						trial = False
						icm = False
						rs = False
						DYN = <src.utils.config.Config object at 0x7f66b40c0bd0> 
							REG_LAMBDA = 1e-06
							FACTOR = 0.5
							PATIENCE = 5
							LEARN_RATE = 0.001
							TRANSITION_HIDDEN = 256
							REWARD_HIDDEN = 256
							BETA_DYN = 0.1
							BETA_DOT = 1
							BETA_DDOT = 1
					device = cuda
					state_size = (80,)
					action_size = (3,)
					discrete = False
					dyn_index = 13
					optimizer = Adam (
					Parameter Group 0
					    amsgrad: False
					    betas: (0.9, 0.999)
					    eps: 1e-08
					    lr: 0.001
					    weight_decay: 1e-06
					)
					scheduler = <torch.optim.lr_scheduler.ReduceLROnPlateau object at 0x7f66ae906910>
				state_size = (80,)
				action_size = (3,)
			mu = [ 0.000  0.000  0.000]
			cov = [[ 0.500  0.000  0.000]
			 [ 0.000  0.500  0.000]
			 [ 0.000  0.000  0.500]]
			icov = [[ 2.000  0.000  0.000]
			 [ 0.000  2.000  0.000]
			 [ 0.000  0.000  2.000]]
			lamda = 0.1
			horizon = 40
			nsamples = 100
			action_size = (3,)
			control = [[[ 0.039  0.639 -0.379]
			  [-0.222  0.022  0.703]
			  [ 0.021  0.830 -0.375]
			  [ 0.434 -0.460 -0.919]
			  [ 0.632  0.362 -0.159]
			  [-0.956 -0.391 -0.049]
			  [-0.148 -0.144 -0.797]
			  [ 0.474 -0.681 -0.876]
			  [-0.446  0.848 -0.630]
			  [ 0.583  0.007  0.176]
			  [ 0.455 -0.837  0.617]
			  [ 0.495  0.422  0.646]
			  [ 0.562  0.591  0.998]
			  [-0.432  0.046  0.584]
			  [-0.685 -0.498  0.727]
			  [-0.548 -0.419 -0.448]
			  [ 0.685 -0.169  0.952]
			  [-0.270 -0.687 -0.904]
			  [ 0.724 -0.131 -0.065]
			  [ 0.245 -0.519 -0.042]
			  [-0.509 -0.135 -0.625]
			  [ 0.311 -0.583  0.138]
			  [-0.279  0.215  0.709]
			  [-0.924 -0.123 -0.595]
			  [ 0.350  0.950 -0.159]
			  [ 0.837 -0.913  0.079]
			  [ 0.022  0.586  0.686]
			  [-0.496 -0.547  0.254]
			  [ 0.066  0.302 -0.098]
			  [-0.286 -0.837  0.214]
			  [ 0.210  0.215 -0.384]
			  [-0.189  0.014  0.552]
			  [ 0.154  0.466 -0.071]
			  [ 0.848  0.441  0.246]
			  [ 0.909 -0.433  0.597]
			  [-0.202  0.770  0.835]
			  [ 0.263  0.894 -0.121]
			  [-0.778  0.886 -0.628]
			  [ 0.867  0.972 -0.894]
			  [ 0.520 -0.513  0.621]]]
			noise = [[[[ 0.433 -0.466 -0.464]
			   [ 0.480 -0.044 -1.604]
			   [ 0.277  0.256 -0.360]
			   ...
			   [-0.296  0.484 -0.860]
			   [-0.147 -0.696  0.855]
			   [-0.075 -0.677 -0.323]]
			
			  [[-0.146 -0.413 -0.644]
			   [ 0.936 -0.307  0.243]
			   [ 0.281 -0.101  0.495]
			   ...
			   [ 0.986  0.642 -1.515]
			   [ 0.387  0.124 -0.753]
			   [ 0.052  0.460 -0.229]]
			
			  [[-0.358 -0.824 -0.531]
			   [ 1.450  0.115  0.334]
			   [ 0.679  0.371 -0.326]
			   ...
			   [-0.932  0.407 -0.252]
			   [ 0.593  0.851  0.780]
			   [-0.728 -0.542  0.584]]
			
			  ...
			
			  [[-0.705 -0.698  0.151]
			   [ 0.520  0.663  0.867]
			   [ 0.459  0.401  0.462]
			   ...
			   [-1.067  0.187 -0.461]
			   [ 0.576 -0.198  0.805]
			   [ 0.115  1.017  0.153]]
			
			  [[ 0.692  0.138  0.388]
			   [-0.854  0.702  0.093]
			   [-0.205 -0.825  0.511]
			   ...
			   [ 1.111 -0.284  2.066]
			   [-1.264 -0.370 -1.203]
			   [-0.640  0.563 -0.674]]
			
			  [[-1.019 -1.002 -0.197]
			   [-0.022  1.432 -0.530]
			   [ 0.453 -0.130 -0.388]
			   ...
			   [ 0.098  0.056 -0.707]
			   [ 0.439  1.500  0.062]
			   [-0.428  0.038  0.628]]]]
			init_cost = [[ -0.103  -5.269  -1.378   1.781  -3.559  -1.781  10.417  13.182 -10.327  -0.512   2.300   2.535  -9.633   4.342  -2.403   3.073   3.826  -9.666   3.319   8.934  -7.233   3.819 -11.991   7.935  10.381  -7.980  -0.852   0.936   3.940   4.899   8.836  19.823  -0.158  11.395   2.448   1.820  12.658   0.547   8.081   6.446   5.987  11.470   0.707  -0.369  -0.997   9.672  -3.027  -0.984  -7.853   4.977  -8.203   2.186  -6.931  -9.343  -5.169  -3.357 -14.461  -0.052  -2.594  -3.432   1.227  -8.377  -1.952   4.683   1.018  -1.088   6.641 -15.534   0.556  -7.280  10.504 -15.143   2.170   1.981   2.106  -5.026   8.429   1.984  12.031 -15.994   1.746   0.852  12.286  -7.213 -11.131   7.891   2.532   8.050   3.607 -13.217  -3.369  12.309  -2.098   0.574   7.429   4.066  -8.725   6.579 -11.353   5.699]]
		replay_buffer = <src.utils.rand.ReplayBuffer object at 0x7f66ae906a90> 
			buffer = deque([], maxlen=1000000)
		buffer = []
	noise_process = <src.utils.rand.BrownianNoise object at 0x7f66ae8b6190> 
		size = (3,)
		dt = 0.2
		action = [-1.000 -1.000  0.032]
		daction_dt = [-0.437  0.871  2.085]
	discrete = False
	action_size = (3,)
	state_size = (80,)
	config = <src.utils.config.Config object at 0x7f66b40d74d0> 
		TRIAL_AT = 1000
		SAVE_AT = 1
		SEED = 0
		REG_LAMBDA = 1e-06
		LEARN_RATE = 0.0001
		DISCOUNT_RATE = 0.99
		ADVANTAGE_DECAY = 0.95
		INPUT_LAYER = 512
		ACTOR_HIDDEN = 256
		CRITIC_HIDDEN = 1024
		EPS_MAX = 1.0
		EPS_MIN = 0.1
		EPS_DECAY = 0.98
		NUM_STEPS = 40
		MAX_BUFFER_SIZE = 1000000
		REPLAY_BATCH_SIZE = 5000
		TARGET_UPDATE_RATE = 0.0004
		BATCH_SIZE = 250
		DYN_EPOCHS = 10
		TRAIN_EVERY = 1000
		ENV_MODEL = dfrntl
		MPC = <src.utils.config.Config object at 0x7f6758c1ba90> 
			NSAMPLES = 100
			HORIZON = 40
			LAMBDA = 0.1
			CONTROL_FREQ = 1
		REWARD_MODEL = src.envs.CarRacing.objective.cost:CostModel
		DYNAMICS_SPEC = src.envs.CarRacing.car_racing:CarRacing
		dynamics_size = 13
		state_size = (80,)
		action_size = (3,)
		env_name = CarRacing-v1
		rank = 0
		size = 17
		split = 17
		model = mppi
		framework = pt
		train_prop = 1.0
		tcp_ports = <list len=17>
		tcp_rank = 0
		num_envs = 1
		nsteps = 500000
		render = False
		trial = False
		icm = False
		rs = False
		DYN = <src.utils.config.Config object at 0x7f66b40c0bd0> 
			REG_LAMBDA = 1e-06
			FACTOR = 0.5
			PATIENCE = 5
			LEARN_RATE = 0.001
			TRANSITION_HIDDEN = 256
			REWARD_HIDDEN = 256
			BETA_DYN = 0.1
			BETA_DOT = 1
			BETA_DDOT = 1
	stats = <src.utils.logger.Stats object at 0x7f66ae8b6090> 
		mean_dict = {}
		sum_dict = {},
conn: None,

import tqdm
import torch
import random
import numpy as np
import scipy as sp
from scipy.stats import multivariate_normal
from src.utils.rand import RandomAgent, ReplayBuffer
from ..agents.base import PTNetwork, PTAgent, Conv, one_hot_from_indices
from . import EnvModel

class MPPIController(PTNetwork):
	def __init__(self, state_size, action_size, config, load="", gpu=True, name="mppi"):
		super().__init__(config, gpu=gpu, name=name)
		self.envmodel = EnvModel(state_size, action_size, config, load=load, gpu=gpu)
		self.mu = np.zeros(action_size)
		self.cov = np.diag(np.ones(action_size))*0.5
		self.icov = np.linalg.inv(self.cov)
		self.lamda = config.MPC.LAMBDA
		self.horizon = config.MPC.HORIZON
		self.nsamples = config.MPC.NSAMPLES
		self.config = config
		self.action_size = action_size
		self.init_control()

	def get_action(self, state, eps=None, sample=True):
		batch = state.shape[:-1]
		if len(batch) and self.control.shape[0] != batch[0]: self.init_control(batch[0])
		x = torch.Tensor(state).view(*batch, 1,-1).repeat_interleave(self.nsamples, -2)
		controls = np.clip(self.control[:,None,:,:] + self.noise, -1, 1)
		self.states, rewards = self.envmodel.rollout(controls, x, numpy=True)
		costs = -np.sum(rewards, -1) #+ self.lamda * np.copy(self.init_cost)
		beta = np.min(costs, -1, keepdims=True)
		costs_norm = -(costs - beta)/self.lamda
		weights = sp.special.softmax(costs_norm)
		self.control += np.sum(weights[:,:,None,None]*self.noise, len(batch))
		action = self.control[...,0,:]
		self.control = np.roll(self.control, -1, axis=-2)
		self.control[...,-1,:] = 0
		return action

	def init_control(self, batch_size=1):
		self.control = np.random.uniform(-1, 1, size=[batch_size, self.horizon, *self.action_size])
		self.noise = np.random.multivariate_normal(self.mu, self.cov, size=[batch_size, self.nsamples, self.horizon])
		self.init_cost = np.sum(self.control[:,None,:,None,:] @ self.icov[None,None,None,:,:] @ self.noise[:,:,:,:,None], axis=(2,3,4))

	def optimize(self, states, actions, next_states, rewards, dones):
		return self.envmodel.optimize(states, actions, next_states, rewards, dones)

	def save_model(self, dirname="pytorch", name="checkpoint", net=None):
		return self.envmodel.save_model(dirname, name, net)
		
	def load_model(self, dirname="pytorch", name="checkpoint", net=None):
		return self.envmodel.load_model(dirname, name, net)

	def get_stats(self):
		return {**super().get_stats(), **self.envmodel.get_stats()}

class MPPIAgent(PTAgent):
	def __init__(self, state_size, action_size, config, gpu=True, load=None):
		super().__init__(state_size, action_size, config, MPPIController, gpu=gpu, load=load)

	def get_action(self, state, eps=None, sample=True):
		eps = self.eps if eps is None else eps
		if random.random() < eps: return super().get_action(state)
		action = self.network.get_action(np.array(state))
		return np.clip(action, -1, 1)

	def partition(self, x):
		num_splits = x.shape[0]//self.config.NUM_STEPS
		if num_splits == 0:
			arr = np.zeros([self.config.NUM_STEPS, *x.shape[1:]])
			arr[-x.shape[0]:] = x
			num_splits = 1
			x = arr
		arr = x[-num_splits*self.config.NUM_STEPS:].reshape(num_splits, self.config.NUM_STEPS, *x.shape[1:])
		return arr

	def train(self, state, action, next_state, reward, done):
		self.time = getattr(self, "time", 0) + 1
		if not hasattr(self, "buffers"): self.buffers = [[] for _ in done]
		for buffer, s, a, ns, r, d in zip(self.buffers, state, action, next_state, reward, done):
			buffer.append((s, a, ns, r, d))
			if not d: continue
			states, actions, next_states, rewards, dones = map(np.array, zip(*buffer))
			states, actions, next_states, rewards, dones = [self.partition(x) for x in (states, actions, next_states, rewards, dones)]
			buffer.clear()
			self.replay_buffer.extend(list(zip(states, actions, next_states, rewards, dones)), shuffle=False)
		if len(self.replay_buffer) > self.config.REPLAY_BATCH_SIZE and self.time % self.config.TRAIN_EVERY == 0:
			pbar = tqdm.trange(self.config.DYN_EPOCHS*self.config.REPLAY_BATCH_SIZE//self.config.BATCH_SIZE)
			for _ in pbar:
				transform = lambda x: self.to_tensor(x).transpose(0,1)
				states, actions, next_states, rewards, dones = self.replay_buffer.sample(self.config.BATCH_SIZE, dtype=transform)[0]
				loss = self.network.optimize(states, actions, next_states, rewards, dones)
				pbar.set_postfix_str(f"Loss: {loss:.4f}")
			self.eps = max(self.eps * self.config.EPS_DECAY, self.config.EPS_MIN)


Step:       0, Reward:  -279.697 [ 398.392], Avg:  -279.697 (1.000) <0-00:00:00> ({'r_t':    -1.1339, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:    1000, Reward:  -246.404 [ 184.050], Avg:  -263.051 (1.000) <0-00:00:27> ({'r_t': -2257.6572, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:    2000, Reward:  -303.850 [ 374.305], Avg:  -276.651 (1.000) <0-00:00:52> ({'r_t': -1677.3320, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:    3000, Reward:  -259.279 [ 230.221], Avg:  -272.308 (1.000) <0-00:01:17> ({'r_t': -2228.4562, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:    4000, Reward:  -445.363 [ 543.754], Avg:  -306.919 (1.000) <0-00:01:46> ({'r_t': -1851.2473, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:    5000, Reward:  -265.958 [ 222.743], Avg:  -300.092 (1.000) <0-00:02:10> ({'r_t': -2037.5233, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:    6000, Reward:  -215.630 [ 137.441], Avg:  -288.026 (1.000) <0-00:02:35> ({'r_t': -2110.6101, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:    7000, Reward:  -392.859 [ 547.638], Avg:  -301.130 (1.000) <0-00:03:03> ({'r_t': -2238.5975, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:    8000, Reward:  -284.196 [ 494.265], Avg:  -299.249 (1.000) <0-00:03:30> ({'r_t': -3207.3115, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:    9000, Reward:  -220.936 [ 188.299], Avg:  -291.417 (1.000) <0-00:03:59> ({'r_t': -2280.0431, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:   10000, Reward:  -201.470 [ 133.865], Avg:  -283.240 (1.000) <0-00:04:25> ({'r_t': -2320.9359, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:   11000, Reward:  -265.914 [ 504.508], Avg:  -281.796 (1.000) <0-00:04:48> ({'r_t': -1680.8961, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:   12000, Reward:  -303.847 [ 350.971], Avg:  -283.493 (1.000) <0-00:05:18> ({'r_t': -1659.9281, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:   13000, Reward:  -324.068 [ 452.506], Avg:  -286.391 (1.000) <0-00:05:44> ({'r_t': -1713.2393, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:   14000, Reward:  -500.173 [ 641.760], Avg:  -300.643 (1.000) <0-00:06:12> ({'r_t': -1502.2272, 'eps':     1.0000, 'lr':     0.0010, 'eps_e':     1.0000, 'lr_e':     0.0010})
Step:   15000, Reward:  -290.789 [ 411.202], Avg:  -300.027 (0.980) <0-00:07:38> ({'r_t': -1952.1836, 'eps':     0.9800, 'dyn_loss': 2578481664.0000, 'dot_loss': 299709.1875, 'ddot_loss':    50.9960, 'rew_loss': 2737099243520.0000, 'lr':     0.0010, 'eps_e':     0.9800, 'lr_e':     0.0010})
Step:   16000, Reward:  -253.159 [ 199.380], Avg:  -297.270 (0.960) <0-00:09:05> ({'r_t': -2295.7637, 'eps':     0.9604, 'dyn_loss': 1410946304.0000, 'dot_loss': 182313.3750, 'ddot_loss':    64.6789, 'rew_loss': 771078750208.0000, 'lr':     0.0010, 'eps_e':     0.9604, 'lr_e':     0.0010})
Step:   17000, Reward:  -169.379 [  89.846], Avg:  -290.165 (0.941) <0-00:10:31> ({'r_t': -1794.4419, 'eps':     0.9412, 'dyn_loss': 1497283968.0000, 'dot_loss': 192211.5312, 'ddot_loss':    76.6966, 'rew_loss': 1528366628864.0000, 'lr':     0.0010, 'eps_e':     0.9412, 'lr_e':     0.0010})
Step:   18000, Reward:  -273.602 [ 251.246], Avg:  -289.293 (0.922) <0-00:12:02> ({'r_t': -1624.7757, 'eps':     0.9224, 'dyn_loss': 2124038144.0000, 'dot_loss': 251921.2500, 'ddot_loss':    87.3768, 'rew_loss': 644366336000.0000, 'lr':     0.0010, 'eps_e':     0.9224, 'lr_e':     0.0010})
Step:   19000, Reward:  -336.244 [ 220.005], Avg:  -291.641 (0.904) <0-00:13:34> ({'r_t': -1609.6517, 'eps':     0.9039, 'dyn_loss': 1548315520.0000, 'dot_loss': 163565.2969, 'ddot_loss':    63.1263, 'rew_loss': 100410507264.0000, 'lr':     0.0010, 'eps_e':     0.9039, 'lr_e':     0.0010})
Step:   20000, Reward:  -179.278 [  97.126], Avg:  -286.290 (0.886) <0-00:15:04> ({'r_t': -1282.7867, 'eps':     0.8858, 'dyn_loss': 4793592832.0000, 'dot_loss': 597190.5625, 'ddot_loss':   146.8058, 'rew_loss': 4110225506304.0000, 'lr':     0.0010, 'eps_e':     0.8858, 'lr_e':     0.0010})
Step:   21000, Reward:  -277.198 [ 218.419], Avg:  -285.877 (0.868) <0-00:16:35> ({'r_t': -1430.8773, 'eps':     0.8681, 'dyn_loss': 17773066240.0000, 'dot_loss': 1993946.8750, 'ddot_loss':   286.5043, 'rew_loss': 106495324717056.0000, 'lr':     0.0010, 'eps_e':     0.8681, 'lr_e':     0.0010})
Step:   22000, Reward:  -144.087 [  68.410], Avg:  -279.712 (0.851) <0-00:18:00> ({'r_t': -1310.0152, 'eps':     0.8508, 'dyn_loss': 10610757632.0000, 'dot_loss': 1053715.6250, 'ddot_loss':   158.2803, 'rew_loss': 165408988463104.0000, 'lr':     0.0010, 'eps_e':     0.8508, 'lr_e':     0.0010})
Step:   23000, Reward:  -348.433 [ 478.426], Avg:  -282.576 (0.834) <0-00:19:32> ({'r_t': -1339.7482, 'eps':     0.8337, 'dyn_loss': 18104401920.0000, 'dot_loss': 1875719.5000, 'ddot_loss':   242.7769, 'rew_loss': 306146611036160.0000, 'lr':     0.0010, 'eps_e':     0.8337, 'lr_e':     0.0010})
Step:   24000, Reward:  -298.182 [ 237.255], Avg:  -283.200 (0.817) <0-00:21:03> ({'r_t': -1341.0142, 'eps':     0.8171, 'dyn_loss': 6321103360.0000, 'dot_loss': 734975.5000, 'ddot_loss':   280.1402, 'rew_loss': 101583618572288.0000, 'lr':     0.0010, 'eps_e':     0.8171, 'lr_e':     0.0010})
Step:   25000, Reward:  -142.181 [  57.184], Avg:  -277.776 (0.801) <0-00:22:31> ({'r_t': -1301.8074, 'eps':     0.8007, 'dyn_loss': 19904501760.0000, 'dot_loss': 2280896.2500, 'ddot_loss':   461.4757, 'rew_loss': 476749490028544.0000, 'lr':     0.0010, 'eps_e':     0.8007, 'lr_e':     0.0010})
Step:   26000, Reward:  -216.395 [ 242.855], Avg:  -275.503 (0.785) <0-00:24:06> ({'r_t': -1272.2456, 'eps':     0.7847, 'dyn_loss': 16006760448.0000, 'dot_loss': 1695892.6250, 'ddot_loss':   258.1134, 'rew_loss': 905507887906816.0000, 'lr':     0.0010, 'eps_e':     0.7847, 'lr_e':     0.0010})
Step:   27000, Reward:  -177.120 [ 101.830], Avg:  -271.989 (0.769) <0-00:25:39> ({'r_t': -1285.2618, 'eps':     0.7690, 'dyn_loss': 114902720512.0000, 'dot_loss': 10968879.0000, 'ddot_loss':   702.2587, 'rew_loss': 3542968719900672.0000, 'lr':     0.0010, 'eps_e':     0.7690, 'lr_e':     0.0010})
Step:   28000, Reward:  -170.201 [ 139.162], Avg:  -268.479 (0.754) <0-00:27:12> ({'r_t': -1366.7165, 'eps':     0.7536, 'dyn_loss': 8708890624.0000, 'dot_loss': 818196.1250, 'ddot_loss':   197.9790, 'rew_loss': 90096057450496.0000, 'lr':     0.0010, 'eps_e':     0.7536, 'lr_e':     0.0010})
Step:   29000, Reward:  -173.881 [  71.958], Avg:  -265.326 (0.739) <0-00:28:44> ({'r_t': -1361.0140, 'eps':     0.7386, 'dyn_loss': 10666423296.0000, 'dot_loss': 1091790.1250, 'ddot_loss':   281.5561, 'rew_loss': 55736142921728.0000, 'lr':     0.0010, 'eps_e':     0.7386, 'lr_e':     0.0010})
Step:   30000, Reward:  -130.041 [  70.501], Avg:  -260.962 (0.724) <0-00:30:20> ({'r_t': -1185.7571, 'eps':     0.7238, 'dyn_loss': 16388712448.0000, 'dot_loss': 1733077.1250, 'ddot_loss':   433.8038, 'rew_loss': 86320563093504.0000, 'lr':     0.0010, 'eps_e':     0.7238, 'lr_e':     0.0010})
Step:   31000, Reward:  -191.348 [ 143.592], Avg:  -258.786 (0.709) <0-00:31:58> ({'r_t': -1332.4698, 'eps':     0.7093, 'dyn_loss': 12389449728.0000, 'dot_loss': 977283.5000, 'ddot_loss':   249.9267, 'rew_loss': 55163079360512.0000, 'lr':     0.0010, 'eps_e':     0.7093, 'lr_e':     0.0010})
Step:   32000, Reward:  -169.664 [  98.507], Avg:  -256.086 (0.695) <0-00:33:38> ({'r_t': -1229.9393, 'eps':     0.6951, 'dyn_loss': 4405236736.0000, 'dot_loss': 464441.5625, 'ddot_loss':   267.9215, 'rew_loss': 21259005984768.0000, 'lr':     0.0010, 'eps_e':     0.6951, 'lr_e':     0.0010})
Step:   33000, Reward:  -176.283 [  91.226], Avg:  -253.739 (0.681) <0-00:35:14> ({'r_t': -1230.9446, 'eps':     0.6812, 'dyn_loss': 87895891968.0000, 'dot_loss': 8355083.0000, 'ddot_loss':   726.2327, 'rew_loss': 2269585004822528.0000, 'lr':     0.0010, 'eps_e':     0.6812, 'lr_e':     0.0010})
Step:   34000, Reward:  -125.776 [ 120.999], Avg:  -250.082 (0.668) <0-00:36:53> ({'r_t': -1442.8633, 'eps':     0.6676, 'dyn_loss': 98779987968.0000, 'dot_loss': 8745624.0000, 'ddot_loss':   686.9955, 'rew_loss': 727274999513088.0000, 'lr':     0.0010, 'eps_e':     0.6676, 'lr_e':     0.0010})
Step:   35000, Reward:  -230.855 [ 221.443], Avg:  -249.548 (0.654) <0-00:38:37> ({'r_t': -1214.9648, 'eps':     0.6543, 'dyn_loss': 5270287360.0000, 'dot_loss': 533705.5000, 'ddot_loss':   358.3042, 'rew_loss': 6246856916992.0000, 'lr':     0.0010, 'eps_e':     0.6543, 'lr_e':     0.0010})
Step:   36000, Reward:  -128.958 [  75.853], Avg:  -246.289 (0.641) <0-00:40:18> ({'r_t': -1150.5822, 'eps':     0.6412, 'dyn_loss': 3880080896.0000, 'dot_loss': 427116.3125, 'ddot_loss':   333.1971, 'rew_loss': 1719001415680.0000, 'lr':     0.0010, 'eps_e':     0.6412, 'lr_e':     0.0010})
Step:   37000, Reward:  -228.790 [ 214.900], Avg:  -245.829 (0.628) <0-00:42:04> ({'r_t': -1189.2816, 'eps':     0.6283, 'dyn_loss': 11115820032.0000, 'dot_loss': 1315314.1250, 'ddot_loss':   525.1343, 'rew_loss': 4617226158080.0000, 'lr':     0.0010, 'eps_e':     0.6283, 'lr_e':     0.0010})
Step:   38000, Reward:  -111.252 [  49.728], Avg:  -242.378 (0.616) <0-00:43:42> ({'r_t': -1141.4954, 'eps':     0.6158, 'dyn_loss': 7887003648.0000, 'dot_loss': 1370310.7500, 'ddot_loss':   688.7851, 'rew_loss': 3504379002880.0000, 'lr':     0.0010, 'eps_e':     0.6158, 'lr_e':     0.0010})
Step:   39000, Reward:  -114.710 [  36.589], Avg:  -239.186 (0.603) <0-00:45:21> ({'r_t': -1175.7585, 'eps':     0.6035, 'dyn_loss': 6119907840.0000, 'dot_loss': 1017006.5625, 'ddot_loss':   659.3014, 'rew_loss': 1135202271232.0000, 'lr':     0.0010, 'eps_e':     0.6035, 'lr_e':     0.0010})
Step:   40000, Reward:  -176.024 [ 122.958], Avg:  -237.646 (0.591) <0-00:47:07> ({'r_t': -1216.0099, 'eps':     0.5914, 'dyn_loss': 22844528640.0000, 'dot_loss': 2200478.7500, 'ddot_loss':   353.1313, 'rew_loss': 297226869932032.0000, 'lr':     0.0010, 'eps_e':     0.5914, 'lr_e':     0.0010})
Step:   41000, Reward:  -129.542 [  82.761], Avg:  -235.072 (0.580) <0-00:48:49> ({'r_t': -1170.1713, 'eps':     0.5796, 'dyn_loss': 6736281088.0000, 'dot_loss': 616958.6875, 'ddot_loss':   226.0946, 'rew_loss': 19832722423808.0000, 'lr':     0.0010, 'eps_e':     0.5796, 'lr_e':     0.0010})
Step:   42000, Reward:  -128.866 [  92.127], Avg:  -232.602 (0.568) <0-00:50:37> ({'r_t': -1174.8129, 'eps':     0.5680, 'dyn_loss': 19097747456.0000, 'dot_loss': 1827469.2500, 'ddot_loss':   439.6192, 'rew_loss': 56131812589568.0000, 'lr':     0.0010, 'eps_e':     0.5680, 'lr_e':     0.0010})
Step:   43000, Reward:  -139.489 [  79.513], Avg:  -230.486 (0.557) <0-00:52:22> ({'r_t': -1168.2314, 'eps':     0.5566, 'dyn_loss': 13514436608.0000, 'dot_loss': 1643578.3750, 'ddot_loss':   501.9947, 'rew_loss': 12601384763392.0000, 'lr':     0.0010, 'eps_e':     0.5566, 'lr_e':     0.0010})
Step:   44000, Reward:  -162.298 [  89.750], Avg:  -228.970 (0.545) <0-00:54:06> ({'r_t': -1202.3124, 'eps':     0.5455, 'dyn_loss': 14085813248.0000, 'dot_loss': 1453494.3750, 'ddot_loss':   483.2161, 'rew_loss': 15450141360128.0000, 'lr':     0.0010, 'eps_e':     0.5455, 'lr_e':     0.0010})
Step:   45000, Reward:  -131.165 [  81.003], Avg:  -226.844 (0.535) <0-00:55:53> ({'r_t': -1174.6480, 'eps':     0.5346, 'dyn_loss': 10094316544.0000, 'dot_loss': 1292577.0000, 'ddot_loss':   627.1252, 'rew_loss': 4019254198272.0000, 'lr':     0.0010, 'eps_e':     0.5346, 'lr_e':     0.0010})
Step:   46000, Reward:  -177.195 [ 146.069], Avg:  -225.788 (0.524) <0-00:57:48> ({'r_t': -1179.6704, 'eps':     0.5239, 'dyn_loss': 4959389184.0000, 'dot_loss': 639403.5000, 'ddot_loss':   387.6799, 'rew_loss': 2864746856448.0000, 'lr':     0.0010, 'eps_e':     0.5239, 'lr_e':     0.0010})
Step:   47000, Reward:  -184.725 [ 129.539], Avg:  -224.932 (0.513) <0-00:59:40> ({'r_t': -1171.7448, 'eps':     0.5134, 'dyn_loss': 5022313984.0000, 'dot_loss': 620934.0000, 'ddot_loss':   363.5451, 'rew_loss': 9235300614144.0000, 'lr':     0.0010, 'eps_e':     0.5134, 'lr_e':     0.0010})
Step:   48000, Reward:  -143.447 [  84.759], Avg:  -223.269 (0.503) <0-01:01:25> ({'r_t': -1137.7899, 'eps':     0.5031, 'dyn_loss': 14360332288.0000, 'dot_loss': 2465278.5000, 'ddot_loss':   966.0828, 'rew_loss': 45533964009472.0000, 'lr':     0.0010, 'eps_e':     0.5031, 'lr_e':     0.0010})
Step:   49000, Reward:  -135.459 [  66.729], Avg:  -221.513 (0.493) <0-01:03:14> ({'r_t': -1206.1713, 'eps':     0.4931, 'dyn_loss': 22165630976.0000, 'dot_loss': 3041564.0000, 'ddot_loss':  1002.6423, 'rew_loss': 7922244911104.0000, 'lr':     0.0010, 'eps_e':     0.4931, 'lr_e':     0.0010})
Step:   50000, Reward:  -175.125 [ 103.004], Avg:  -220.604 (0.483) <0-01:05:05> ({'r_t': -1200.5822, 'eps':     0.4832, 'dyn_loss': 7191201280.0000, 'dot_loss': 874633.1875, 'ddot_loss':   414.1147, 'rew_loss': 4396868698112.0000, 'lr':     0.0010, 'eps_e':     0.4832, 'lr_e':     0.0010})
Step:   51000, Reward:  -120.374 [  56.766], Avg:  -218.676 (0.474) <0-01:06:52> ({'r_t': -1175.0575, 'eps':     0.4735, 'dyn_loss': 7559856640.0000, 'dot_loss': 596127.3750, 'ddot_loss':   242.7623, 'rew_loss': 23866286014464.0000, 'lr':     0.0010, 'eps_e':     0.4735, 'lr_e':     0.0010})
Step:   52000, Reward:  -122.534 [  73.169], Avg:  -216.862 (0.464) <0-01:08:40> ({'r_t': -1159.0724, 'eps':     0.4641, 'dyn_loss': 3046386688.0000, 'dot_loss': 295461.0000, 'ddot_loss':   270.0257, 'rew_loss': 13964175998976.0000, 'lr':     0.0010, 'eps_e':     0.4641, 'lr_e':     0.0010})
Step:   53000, Reward:  -188.484 [ 171.081], Avg:  -216.337 (0.455) <0-01:10:30> ({'r_t': -1154.5208, 'eps':     0.4548, 'dyn_loss': 7328431616.0000, 'dot_loss': 694054.3125, 'ddot_loss':   289.1150, 'rew_loss': 10592883572736.0000, 'lr':     0.0010, 'eps_e':     0.4548, 'lr_e':     0.0010})
Step:   54000, Reward:  -174.916 [  96.566], Avg:  -215.584 (0.446) <0-01:12:25> ({'r_t': -1134.5944, 'eps':     0.4457, 'dyn_loss': 21081692160.0000, 'dot_loss': 2161428.2500, 'ddot_loss':   523.3688, 'rew_loss': 262843979005952.0000, 'lr':     0.0010, 'eps_e':     0.4457, 'lr_e':     0.0010})
Step:   55000, Reward:  -141.901 [  98.292], Avg:  -214.268 (0.437) <0-01:14:21> ({'r_t': -1130.9929, 'eps':     0.4368, 'dyn_loss': 16898924544.0000, 'dot_loss': 1958561.0000, 'ddot_loss':   529.2312, 'rew_loss': 359759244951552.0000, 'lr':     0.0010, 'eps_e':     0.4368, 'lr_e':     0.0010})
Step:   56000, Reward:   -84.270 [  37.160], Avg:  -211.987 (0.428) <0-01:16:14> ({'r_t': -1136.0640, 'eps':     0.4281, 'dyn_loss': 47898030080.0000, 'dot_loss': 4485551.5000, 'ddot_loss':   343.5314, 'rew_loss': 151320338104320.0000, 'lr':     0.0010, 'eps_e':     0.4281, 'lr_e':     0.0010})
Step:   57000, Reward:   -95.380 [  49.268], Avg:  -209.977 (0.419) <0-01:18:04> ({'r_t': -1173.0563, 'eps':     0.4195, 'dyn_loss': 4815597056.0000, 'dot_loss': 365444.4688, 'ddot_loss':   153.7431, 'rew_loss': 870936412160.0000, 'lr':     0.0010, 'eps_e':     0.4195, 'lr_e':     0.0010})
Step:   58000, Reward:  -166.458 [ 157.638], Avg:  -209.239 (0.411) <0-01:20:03> ({'r_t': -1192.6121, 'eps':     0.4111, 'dyn_loss': 4077844992.0000, 'dot_loss': 358491.3125, 'ddot_loss':   190.6194, 'rew_loss': 747030904832.0000, 'lr':     0.0010, 'eps_e':     0.4111, 'lr_e':     0.0010})
Step:   59000, Reward:  -181.127 [ 112.767], Avg:  -208.770 (0.403) <0-01:22:00> ({'r_t': -1153.1549, 'eps':     0.4029, 'dyn_loss': 7350643712.0000, 'dot_loss': 598013.7500, 'ddot_loss':   219.8084, 'rew_loss': 2451179569152.0000, 'lr':     0.0010, 'eps_e':     0.4029, 'lr_e':     0.0010})
Step:   60000, Reward:  -140.348 [  67.716], Avg:  -207.649 (0.395) <0-01:23:53> ({'r_t': -1182.6196, 'eps':     0.3948, 'dyn_loss': 6639810560.0000, 'dot_loss': 545213.3750, 'ddot_loss':   191.1677, 'rew_loss': 4234533404672.0000, 'lr':     0.0010, 'eps_e':     0.3948, 'lr_e':     0.0010})
Step:   61000, Reward:  -156.645 [ 168.489], Avg:  -206.826 (0.387) <0-01:25:56> ({'r_t': -1154.3986, 'eps':     0.3869, 'dyn_loss': 7290663936.0000, 'dot_loss': 608010.3750, 'ddot_loss':   245.3289, 'rew_loss': 18293811314688.0000, 'lr':     0.0010, 'eps_e':     0.3869, 'lr_e':     0.0010})
Step:   62000, Reward:  -121.702 [  83.261], Avg:  -205.475 (0.379) <0-01:27:53> ({'r_t': -1124.2156, 'eps':     0.3792, 'dyn_loss': 33800765440.0000, 'dot_loss': 2797358.0000, 'ddot_loss':   334.9590, 'rew_loss': 430655800344576.0000, 'lr':     0.0010, 'eps_e':     0.3792, 'lr_e':     0.0010})
Step:   63000, Reward:  -115.270 [  62.227], Avg:  -204.066 (0.372) <0-01:29:50> ({'r_t': -1130.6576, 'eps':     0.3716, 'dyn_loss': 11679180800.0000, 'dot_loss': 1014193.6875, 'ddot_loss':   224.2444, 'rew_loss': 18424088494080.0000, 'lr':     0.0010, 'eps_e':     0.3716, 'lr_e':     0.0010})
Step:   64000, Reward:  -133.733 [  94.322], Avg:  -202.983 (0.364) <0-01:31:52> ({'r_t': -1151.5076, 'eps':     0.3642, 'dyn_loss': 47223943168.0000, 'dot_loss': 4374899.0000, 'ddot_loss':   345.9223, 'rew_loss': 23851274600448.0000, 'lr':     0.0010, 'eps_e':     0.3642, 'lr_e':     0.0010})
Step:   65000, Reward:  -169.162 [ 100.944], Avg:  -202.471 (0.357) <0-01:33:52> ({'r_t': -1120.8197, 'eps':     0.3569, 'dyn_loss': 58188304384.0000, 'dot_loss': 5565083.0000, 'ddot_loss':   466.1474, 'rew_loss': 116978266144768.0000, 'lr':     0.0010, 'eps_e':     0.3569, 'lr_e':     0.0010})
Step:   66000, Reward:  -147.462 [  73.178], Avg:  -201.650 (0.350) <0-01:35:49> ({'r_t': -1140.2678, 'eps':     0.3497, 'dyn_loss': 20588638208.0000, 'dot_loss': 1894527.2500, 'ddot_loss':   350.9835, 'rew_loss': 6150115295232.0000, 'lr':     0.0010, 'eps_e':     0.3497, 'lr_e':     0.0010})
Step:   67000, Reward:  -163.412 [  92.491], Avg:  -201.088 (0.343) <0-01:37:49> ({'r_t': -1162.5132, 'eps':     0.3428, 'dyn_loss': 33425870848.0000, 'dot_loss': 2975309.7500, 'ddot_loss':   660.1222, 'rew_loss': 16425454403584.0000, 'lr':     0.0010, 'eps_e':     0.3428, 'lr_e':     0.0010})
Step:   68000, Reward:  -187.715 [ 153.052], Avg:  -200.894 (0.336) <0-01:39:53> ({'r_t': -1170.7215, 'eps':     0.3359, 'dyn_loss': 17259051008.0000, 'dot_loss': 1899038.5000, 'ddot_loss':   913.6192, 'rew_loss': 2806989193216.0000, 'lr':     0.0010, 'eps_e':     0.3359, 'lr_e':     0.0010})
Step:   69000, Reward:  -149.290 [  73.073], Avg:  -200.157 (0.329) <0-01:41:50> ({'r_t': -1198.1435, 'eps':     0.3292, 'dyn_loss': 40135823360.0000, 'dot_loss': 3877909.7500, 'ddot_loss':   885.7772, 'rew_loss': 47310482440192.0000, 'lr':     0.0010, 'eps_e':     0.3292, 'lr_e':     0.0010})
Step:   70000, Reward:  -112.085 [  59.561], Avg:  -198.916 (0.323) <0-01:43:48> ({'r_t': -1176.3664, 'eps':     0.3226, 'dyn_loss': 27216801792.0000, 'dot_loss': 3874466.2500, 'ddot_loss':  1420.5625, 'rew_loss': 104717770293248.0000, 'lr':     0.0010, 'eps_e':     0.3226, 'lr_e':     0.0010})
Step:   71000, Reward:  -106.833 [  56.263], Avg:  -197.637 (0.316) <0-01:45:44> ({'r_t': -1101.6976, 'eps':     0.3161, 'dyn_loss': 91623964672.0000, 'dot_loss': 7140686.5000, 'ddot_loss':  1076.7922, 'rew_loss': 738053219942400.0000, 'lr':     0.0010, 'eps_e':     0.3161, 'lr_e':     0.0010})
Step:   72000, Reward:  -160.765 [ 139.625], Avg:  -197.132 (0.310) <0-01:47:53> ({'r_t': -1116.3412, 'eps':     0.3098, 'dyn_loss': 17848694784.0000, 'dot_loss': 1666260.3750, 'ddot_loss':   845.6105, 'rew_loss': 36087091167232.0000, 'lr':     0.0010, 'eps_e':     0.3098, 'lr_e':     0.0010})
Step:   73000, Reward:  -111.911 [  80.857], Avg:  -195.981 (0.304) <0-01:49:55> ({'r_t': -1144.6544, 'eps':     0.3036, 'dyn_loss': 40184528896.0000, 'dot_loss': 3433835.0000, 'ddot_loss':   637.4844, 'rew_loss': 468256796180480.0000, 'lr':     0.0010, 'eps_e':     0.3036, 'lr_e':     0.0010})
Step:   74000, Reward:   -92.048 [  57.184], Avg:  -194.595 (0.298) <0-01:51:57> ({'r_t': -1143.8711, 'eps':     0.2976, 'dyn_loss': 49564352512.0000, 'dot_loss': 3878616.0000, 'ddot_loss':   693.3276, 'rew_loss': 992896849281024.0000, 'lr':     0.0010, 'eps_e':     0.2976, 'lr_e':     0.0010})
Step:   75000, Reward:   -94.556 [  59.338], Avg:  -193.278 (0.292) <0-01:53:57> ({'r_t': -1144.4079, 'eps':     0.2916, 'dyn_loss': 27334557696.0000, 'dot_loss': 1993724.5000, 'ddot_loss':   703.6221, 'rew_loss': 38285283950592.0000, 'lr':     0.0010, 'eps_e':     0.2916, 'lr_e':     0.0010})
Step:   76000, Reward:  -152.089 [  99.344], Avg:  -192.744 (0.286) <0-01:56:00> ({'r_t': -1129.9171, 'eps':     0.2858, 'dyn_loss': 45955289088.0000, 'dot_loss': 3579141.5000, 'ddot_loss':   758.2593, 'rew_loss': 20026090323968.0000, 'lr':     0.0010, 'eps_e':     0.2858, 'lr_e':     0.0010})
Step:   77000, Reward:  -119.474 [ 100.682], Avg:  -191.804 (0.280) <0-01:58:02> ({'r_t': -1155.7716, 'eps':     0.2801, 'dyn_loss': 487485997056.0000, 'dot_loss': 45462136.0000, 'ddot_loss':  2860.5959, 'rew_loss': 407645043294208.0000, 'lr':     0.0010, 'eps_e':     0.2801, 'lr_e':     0.0010})
Step:   78000, Reward:   -89.980 [  51.094], Avg:  -190.515 (0.274) <0-02:00:03> ({'r_t': -1111.0052, 'eps':     0.2745, 'dyn_loss': 879427911680.0000, 'dot_loss': 80061976.0000, 'ddot_loss':  5661.6021, 'rew_loss': 19659048861302784.0000, 'lr':     0.0010, 'eps_e':     0.2745, 'lr_e':     0.0010})
Step:   79000, Reward:   -83.097 [  37.811], Avg:  -189.173 (0.269) <0-02:02:01> ({'r_t': -1105.9799, 'eps':     0.2690, 'dyn_loss': 1318574227456.0000, 'dot_loss': 126398672.0000, 'ddot_loss':  8120.0552, 'rew_loss': 822713870450688.0000, 'lr':     0.0010, 'eps_e':     0.2690, 'lr_e':     0.0010})
Step:   80000, Reward:   -89.181 [  44.570], Avg:  -187.938 (0.264) <0-02:03:59> ({'r_t': -1127.9902, 'eps':     0.2636, 'dyn_loss': 638754488320.0000, 'dot_loss': 58705784.0000, 'ddot_loss':  5136.6787, 'rew_loss': 72203953504256.0000, 'lr':     0.0010, 'eps_e':     0.2636, 'lr_e':     0.0010})
Step:   81000, Reward:  -124.557 [ 118.046], Avg:  -187.165 (0.258) <0-02:06:07> ({'r_t': -1126.7257, 'eps':     0.2583, 'dyn_loss': 372800552960.0000, 'dot_loss': 33066322.0000, 'ddot_loss':  3894.7693, 'rew_loss': 117842057887744.0000, 'lr':     0.0010, 'eps_e':     0.2583, 'lr_e':     0.0010})
Step:   82000, Reward:  -169.334 [ 168.680], Avg:  -186.950 (0.253) <0-02:08:18> ({'r_t': -1129.0340, 'eps':     0.2531, 'dyn_loss': 702730534912.0000, 'dot_loss': 60054400.0000, 'ddot_loss':  5943.6724, 'rew_loss': 3837650184175616.0000, 'lr':     0.0010, 'eps_e':     0.2531, 'lr_e':     0.0010})
Step:   83000, Reward:   -82.458 [  28.506], Avg:  -185.706 (0.248) <0-02:10:17> ({'r_t': -1120.0695, 'eps':     0.2481, 'dyn_loss': 212470628352.0000, 'dot_loss': 16923410.0000, 'ddot_loss':  4434.2832, 'rew_loss': 251009800601600.0000, 'lr':     0.0010, 'eps_e':     0.2481, 'lr_e':     0.0010})
Step:   84000, Reward:  -127.758 [ 100.033], Avg:  -185.025 (0.243) <0-02:12:28> ({'r_t': -1132.8484, 'eps':     0.2431, 'dyn_loss': 188871098368.0000, 'dot_loss': 15564219.0000, 'ddot_loss':  4018.2722, 'rew_loss': 450519084564480.0000, 'lr':     0.0010, 'eps_e':     0.2431, 'lr_e':     0.0010})
Step:   85000, Reward:  -146.632 [ 137.405], Avg:  -184.578 (0.238) <0-02:14:41> ({'r_t': -1101.3453, 'eps':     0.2383, 'dyn_loss': 279283826688.0000, 'dot_loss': 23613830.0000, 'ddot_loss':  4391.0317, 'rew_loss': 488914146033664.0000, 'lr':     0.0010, 'eps_e':     0.2383, 'lr_e':     0.0010})
Step:   86000, Reward:  -103.240 [  51.860], Avg:  -183.643 (0.233) <0-02:16:43> ({'r_t': -1117.3719, 'eps':     0.2335, 'dyn_loss': 704562593792.0000, 'dot_loss': 63907256.0000, 'ddot_loss':  6351.3560, 'rew_loss': 217388209405952.0000, 'lr':     0.0010, 'eps_e':     0.2335, 'lr_e':     0.0010})
Step:   87000, Reward:  -140.212 [ 122.829], Avg:  -183.150 (0.229) <0-02:18:51> ({'r_t': -1091.9324, 'eps':     0.2288, 'dyn_loss': 847153528832.0000, 'dot_loss': 78632088.0000, 'ddot_loss':  6856.0981, 'rew_loss': 277239685971968.0000, 'lr':     0.0010, 'eps_e':     0.2288, 'lr_e':     0.0010})
Step:   88000, Reward:  -128.173 [  55.656], Avg:  -182.532 (0.224) <0-02:20:54> ({'r_t': -1090.2356, 'eps':     0.2242, 'dyn_loss': 766427267072.0000, 'dot_loss': 69426352.0000, 'ddot_loss':  6482.5176, 'rew_loss': 135606243950592.0000, 'lr':     0.0010, 'eps_e':     0.2242, 'lr_e':     0.0010})
Step:   89000, Reward:  -218.800 [ 175.153], Avg:  -182.935 (0.220) <0-02:23:07> ({'r_t': -1125.4087, 'eps':     0.2198, 'dyn_loss': 1280538312704.0000, 'dot_loss': 133636960.0000, 'ddot_loss':  9483.9834, 'rew_loss': 68274058562633728.0000, 'lr':     0.0010, 'eps_e':     0.2198, 'lr_e':     0.0010})
Step:   90000, Reward:  -188.740 [ 104.287], Avg:  -182.999 (0.215) <0-02:25:18> ({'r_t': -1138.2599, 'eps':     0.2154, 'dyn_loss': 1319132987392.0000, 'dot_loss': 136242752.0000, 'ddot_loss':  9066.5410, 'rew_loss': 57223026105647104.0000, 'lr':     0.0010, 'eps_e':     0.2154, 'lr_e':     0.0010})
Step:   91000, Reward:  -140.501 [ 127.874], Avg:  -182.537 (0.211) <0-02:27:29> ({'r_t': -1168.6612, 'eps':     0.2111, 'dyn_loss': 1279036882944.0000, 'dot_loss': 130307664.0000, 'ddot_loss':  8584.2305, 'rew_loss': 39673506266349568.0000, 'lr':     0.0010, 'eps_e':     0.2111, 'lr_e':     0.0010})
Step:   92000, Reward:  -168.426 [ 112.150], Avg:  -182.385 (0.207) <0-02:29:39> ({'r_t': -1149.3341, 'eps':     0.2068, 'dyn_loss': 1271927406592.0000, 'dot_loss': 124476192.0000, 'ddot_loss':  8105.8633, 'rew_loss': 28983598954577920.0000, 'lr':     0.0010, 'eps_e':     0.2068, 'lr_e':     0.0010})
Step:   93000, Reward:  -161.854 [ 102.598], Avg:  -182.167 (0.203) <0-02:31:47> ({'r_t': -1144.3902, 'eps':     0.2027, 'dyn_loss': 1253344542720.0000, 'dot_loss': 122374872.0000, 'ddot_loss':  8115.2114, 'rew_loss': 25489164170428416.0000, 'lr':     0.0010, 'eps_e':     0.2027, 'lr_e':     0.0010})
Step:   94000, Reward:  -134.209 [ 116.425], Avg:  -181.662 (0.199) <0-02:33:56> ({'r_t': -1161.2492, 'eps':     0.1986, 'dyn_loss': 1250281127936.0000, 'dot_loss': 120766648.0000, 'ddot_loss':  7895.3877, 'rew_loss': 28033863573831680.0000, 'lr':     0.0010, 'eps_e':     0.1986, 'lr_e':     0.0010})
Step:   95000, Reward:  -223.230 [ 185.422], Avg:  -182.095 (0.195) <0-02:36:14> ({'r_t': -1114.3920, 'eps':     0.1947, 'dyn_loss': 1189740544000.0000, 'dot_loss': 111695288.0000, 'ddot_loss':  7433.4351, 'rew_loss': 21244697099894784.0000, 'lr':     0.0010, 'eps_e':     0.1947, 'lr_e':     0.0010})
Step:   96000, Reward:  -136.649 [  78.998], Avg:  -181.626 (0.191) <0-02:38:20> ({'r_t': -1153.3734, 'eps':     0.1908, 'dyn_loss': 1123846586368.0000, 'dot_loss': 110081744.0000, 'ddot_loss':  7550.7515, 'rew_loss': 28196090931052544.0000, 'lr':     0.0010, 'eps_e':     0.1908, 'lr_e':     0.0010})
Step:   97000, Reward:  -204.438 [ 170.380], Avg:  -181.859 (0.187) <0-02:40:35> ({'r_t': -1134.7593, 'eps':     0.1870, 'dyn_loss': 1069461536768.0000, 'dot_loss': 103040576.0000, 'ddot_loss':  7233.3979, 'rew_loss': 21136545528414208.0000, 'lr':     0.0010, 'eps_e':     0.1870, 'lr_e':     0.0010})
Step:   98000, Reward:  -145.668 [ 123.403], Avg:  -181.494 (0.183) <0-02:42:48> ({'r_t': -1166.6542, 'eps':     0.1832, 'dyn_loss': 1088724795392.0000, 'dot_loss': 105712864.0000, 'ddot_loss':  7524.1406, 'rew_loss': 36846146475261952.0000, 'lr':     0.0010, 'eps_e':     0.1832, 'lr_e':     0.0010})
Step:   99000, Reward:  -174.736 [ 109.026], Avg:  -181.426 (0.180) <0-02:45:02> ({'r_t': -1205.7462, 'eps':     0.1796, 'dyn_loss': 1073280974848.0000, 'dot_loss': 103149472.0000, 'ddot_loss':  7182.2080, 'rew_loss': 26352821964111872.0000, 'lr':     0.0010, 'eps_e':     0.1796, 'lr_e':     0.0010})
Step:  100000, Reward:  -189.905 [ 116.606], Avg:  -181.510 (0.176) <0-02:47:17> ({'r_t': -1144.4320, 'eps':     0.1760, 'dyn_loss': 1055673352192.0000, 'dot_loss': 100485120.0000, 'ddot_loss':  7022.4292, 'rew_loss': 16375529183641600.0000, 'lr':     0.0010, 'eps_e':     0.1760, 'lr_e':     0.0010})
Step:  101000, Reward:  -179.237 [ 146.973], Avg:  -181.488 (0.172) <0-02:49:30> ({'r_t': -1153.3870, 'eps':     0.1725, 'dyn_loss': 1007090401280.0000, 'dot_loss': 94681440.0000, 'ddot_loss':  6713.0889, 'rew_loss': 13171241988915200.0000, 'lr':     0.0010, 'eps_e':     0.1725, 'lr_e':     0.0010})
Step:  102000, Reward:  -157.616 [  99.251], Avg:  -181.256 (0.169) <0-02:51:39> ({'r_t': -1131.2492, 'eps':     0.1690, 'dyn_loss': 950935814144.0000, 'dot_loss': 91492032.0000, 'ddot_loss':  6595.3120, 'rew_loss': 10418746699022336.0000, 'lr':     0.0010, 'eps_e':     0.1690, 'lr_e':     0.0010})
Step:  103000, Reward:  -239.161 [ 143.069], Avg:  -181.813 (0.166) <0-02:53:55> ({'r_t': -1093.7467, 'eps':     0.1656, 'dyn_loss': 951200448512.0000, 'dot_loss': 93663152.0000, 'ddot_loss':  6840.7593, 'rew_loss': 12635076525293568.0000, 'lr':     0.0010, 'eps_e':     0.1656, 'lr_e':     0.0010})
Step:  104000, Reward:  -143.924 [ 109.511], Avg:  -181.452 (0.162) <0-02:56:07> ({'r_t': -1152.3442, 'eps':     0.1623, 'dyn_loss': 971059036160.0000, 'dot_loss': 91889200.0000, 'ddot_loss':  6584.0850, 'rew_loss': 17444766660689920.0000, 'lr':     0.0010, 'eps_e':     0.1623, 'lr_e':     0.0010})
Step:  105000, Reward:  -170.881 [  93.482], Avg:  -181.352 (0.159) <0-02:58:23> ({'r_t': -1130.4491, 'eps':     0.1591, 'dyn_loss': 930678505472.0000, 'dot_loss': 88264376.0000, 'ddot_loss':  6498.7188, 'rew_loss': 18691480776343552.0000, 'lr':     0.0010, 'eps_e':     0.1591, 'lr_e':     0.0010})
Step:  106000, Reward:  -182.643 [ 125.351], Avg:  -181.364 (0.156) <0-03:00:37> ({'r_t': -1159.4284, 'eps':     0.1559, 'dyn_loss': 903347437568.0000, 'dot_loss': 84579352.0000, 'ddot_loss':  6240.4092, 'rew_loss': 16950791734558720.0000, 'lr':     0.0010, 'eps_e':     0.1559, 'lr_e':     0.0010})
Step:  107000, Reward:  -189.437 [ 124.754], Avg:  -181.439 (0.153) <0-03:02:51> ({'r_t': -1099.7697, 'eps':     0.1528, 'dyn_loss': 814518697984.0000, 'dot_loss': 77121288.0000, 'ddot_loss':  5855.6050, 'rew_loss': 8640338180702208.0000, 'lr':     0.0010, 'eps_e':     0.1528, 'lr_e':     0.0010})
Step:  108000, Reward:  -191.245 [ 145.394], Avg:  -181.529 (0.150) <0-03:05:06> ({'r_t': -1104.3819, 'eps':     0.1497, 'dyn_loss': 775898923008.0000, 'dot_loss': 73134736.0000, 'ddot_loss':  5641.0044, 'rew_loss': 7684229068488704.0000, 'lr':     0.0010, 'eps_e':     0.1497, 'lr_e':     0.0010})
Step:  109000, Reward:  -162.422 [ 118.497], Avg:  -181.355 (0.147) <0-03:07:21> ({'r_t': -1140.3164, 'eps':     0.1467, 'dyn_loss': 720775151616.0000, 'dot_loss': 69185760.0000, 'ddot_loss':  5531.0811, 'rew_loss': 4895453116104704.0000, 'lr':     0.0010, 'eps_e':     0.1467, 'lr_e':     0.0010})
Step:  110000, Reward:  -230.718 [ 172.316], Avg:  -181.800 (0.144) <0-03:09:40> ({'r_t': -1089.8899, 'eps':     0.1438, 'dyn_loss': 697573179392.0000, 'dot_loss': 65059696.0000, 'ddot_loss':  5239.5059, 'rew_loss': 2385832052785152.0000, 'lr':     0.0010, 'eps_e':     0.1438, 'lr_e':     0.0010})
Step:  111000, Reward:  -156.897 [ 159.221], Avg:  -181.578 (0.141) <0-03:12:02> ({'r_t': -1143.9573, 'eps':     0.1409, 'dyn_loss': 611037675520.0000, 'dot_loss': 55421492.0000, 'ddot_loss':  4792.3916, 'rew_loss': 733378752020480.0000, 'lr':     0.0010, 'eps_e':     0.1409, 'lr_e':     0.0010})
Step:  112000, Reward:  -120.616 [  91.526], Avg:  -181.038 (0.138) <0-03:14:12> ({'r_t': -1158.7340, 'eps':     0.1381, 'dyn_loss': 569837027328.0000, 'dot_loss': 51154324.0000, 'ddot_loss':  4639.3618, 'rew_loss': 115761951539200.0000, 'lr':     0.0010, 'eps_e':     0.1381, 'lr_e':     0.0010})
Step:  113000, Reward:  -185.553 [ 154.229], Avg:  -181.078 (0.135) <0-03:16:28> ({'r_t': -1163.1432, 'eps':     0.1353, 'dyn_loss': 642333802496.0000, 'dot_loss': 58350736.0000, 'ddot_loss':  4893.4463, 'rew_loss': 53487295528960.0000, 'lr':     0.0010, 'eps_e':     0.1353, 'lr_e':     0.0010})
Step:  114000, Reward:  -214.909 [ 175.924], Avg:  -181.372 (0.133) <0-03:18:49> ({'r_t': -1176.5536, 'eps':     0.1326, 'dyn_loss': 667874295808.0000, 'dot_loss': 60266476.0000, 'ddot_loss':  4841.7520, 'rew_loss': 329561162121216.0000, 'lr':     0.0010, 'eps_e':     0.1326, 'lr_e':     0.0010})
Step:  115000, Reward:  -166.533 [ 119.141], Avg:  -181.244 (0.130) <0-03:21:04> ({'r_t': -1183.6229, 'eps':     0.1300, 'dyn_loss': 625966841856.0000, 'dot_loss': 57150476.0000, 'ddot_loss':  4692.2998, 'rew_loss': 308133637390336.0000, 'lr':     0.0010, 'eps_e':     0.1300, 'lr_e':     0.0010})
Step:  116000, Reward:  -170.122 [ 148.955], Avg:  -181.149 (0.127) <0-03:23:20> ({'r_t': -1179.7550, 'eps':     0.1274, 'dyn_loss': 589450117120.0000, 'dot_loss': 53238276.0000, 'ddot_loss':  4560.4214, 'rew_loss': 204518440566784.0000, 'lr':     0.0010, 'eps_e':     0.1274, 'lr_e':     0.0010})
Step:  117000, Reward:  -186.754 [ 188.118], Avg:  -181.196 (0.125) <0-03:25:36> ({'r_t': -1144.6068, 'eps':     0.1248, 'dyn_loss': 531398852608.0000, 'dot_loss': 47018552.0000, 'ddot_loss':  4367.2305, 'rew_loss': 86749246128128.0000, 'lr':     0.0010, 'eps_e':     0.1248, 'lr_e':     0.0010})
Step:  118000, Reward:  -205.983 [ 203.948], Avg:  -181.405 (0.122) <0-03:27:59> ({'r_t': -1139.5178, 'eps':     0.1223, 'dyn_loss': 517719064576.0000, 'dot_loss': 45442480.0000, 'ddot_loss':  4278.1426, 'rew_loss': 100171329306624.0000, 'lr':     0.0010, 'eps_e':     0.1223, 'lr_e':     0.0010})
Step:  119000, Reward:  -137.214 [  99.304], Avg:  -181.036 (0.120) <0-03:30:09> ({'r_t': -1137.3586, 'eps':     0.1199, 'dyn_loss': 517638553600.0000, 'dot_loss': 45483008.0000, 'ddot_loss':  4079.8362, 'rew_loss': 59476908441600.0000, 'lr':     0.0010, 'eps_e':     0.1199, 'lr_e':     0.0010})
Step:  120000, Reward:  -119.483 [  83.713], Avg:  -180.528 (0.117) <0-03:32:18> ({'r_t': -1196.0288, 'eps':     0.1175, 'dyn_loss': 512986054656.0000, 'dot_loss': 45763680.0000, 'ddot_loss':  4338.8604, 'rew_loss': 19077628166144.0000, 'lr':     0.0010, 'eps_e':     0.1175, 'lr_e':     0.0010})
Step:  121000, Reward:  -217.027 [ 137.515], Avg:  -180.827 (0.115) <0-03:34:34> ({'r_t': -1138.2961, 'eps':     0.1151, 'dyn_loss': 485031608320.0000, 'dot_loss': 43636824.0000, 'ddot_loss':  4312.6860, 'rew_loss': 24380612542464.0000, 'lr':     0.0010, 'eps_e':     0.1151, 'lr_e':     0.0010})
Step:  122000, Reward:  -110.637 [  84.190], Avg:  -180.256 (0.113) <0-03:36:43> ({'r_t': -1181.1126, 'eps':     0.1128, 'dyn_loss': 473580568576.0000, 'dot_loss': 45020284.0000, 'ddot_loss':  4412.4717, 'rew_loss': 30970740736000.0000, 'lr':     0.0010, 'eps_e':     0.1128, 'lr_e':     0.0010})
Step:  123000, Reward:  -133.717 [ 110.318], Avg:  -179.881 (0.111) <0-03:39:01> ({'r_t': -1183.1390, 'eps':     0.1106, 'dyn_loss': 457757097984.0000, 'dot_loss': 42536244.0000, 'ddot_loss':  4319.0732, 'rew_loss': 52100583129088.0000, 'lr':     0.0010, 'eps_e':     0.1106, 'lr_e':     0.0010})
Step:  124000, Reward:  -163.860 [ 130.217], Avg:  -179.753 (0.108) <0-03:41:15> ({'r_t': -1162.2033, 'eps':     0.1084, 'dyn_loss': 439380770816.0000, 'dot_loss': 39233328.0000, 'ddot_loss':  4189.5039, 'rew_loss': 55679754698752.0000, 'lr':     0.0010, 'eps_e':     0.1084, 'lr_e':     0.0010})
Step:  125000, Reward:  -176.194 [ 206.330], Avg:  -179.725 (0.106) <0-03:43:40> ({'r_t': -1188.8614, 'eps':     0.1062, 'dyn_loss': 426246242304.0000, 'dot_loss': 38480020.0000, 'ddot_loss':  3982.8765, 'rew_loss': 16868546969600.0000, 'lr':     0.0010, 'eps_e':     0.1062, 'lr_e':     0.0010})
Step:  126000, Reward:  -164.788 [ 137.177], Avg:  -179.607 (0.104) <0-03:45:58> ({'r_t': -1192.8369, 'eps':     0.1041, 'dyn_loss': 430468136960.0000, 'dot_loss': 38541968.0000, 'ddot_loss':  3978.4543, 'rew_loss': 81525123055616.0000, 'lr':     0.0010, 'eps_e':     0.1041, 'lr_e':     0.0010})
Step:  127000, Reward:  -138.144 [ 144.784], Avg:  -179.283 (0.102) <0-03:48:22> ({'r_t': -1130.4560, 'eps':     0.1020, 'dyn_loss': 427903025152.0000, 'dot_loss': 38026912.0000, 'ddot_loss':  3916.0845, 'rew_loss': 18077001449472.0000, 'lr':     0.0010, 'eps_e':     0.1020, 'lr_e':     0.0010})
Step:  128000, Reward:  -181.381 [ 160.311], Avg:  -179.299 (0.100) <0-03:50:41> ({'r_t': -1161.7188, 'eps':     0.1000, 'dyn_loss': 448145784832.0000, 'dot_loss': 41729720.0000, 'ddot_loss':  4171.8564, 'rew_loss': 13743129886720.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  129000, Reward:  -130.962 [ 103.260], Avg:  -178.927 (0.100) <0-03:52:55> ({'r_t': -1161.1977, 'eps':     0.1000, 'dyn_loss': 402373541888.0000, 'dot_loss': 35417236.0000, 'ddot_loss':  3946.0244, 'rew_loss': 7302507659264.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  130000, Reward:  -100.511 [  65.275], Avg:  -178.329 (0.100) <0-03:55:04> ({'r_t': -1130.8074, 'eps':     0.1000, 'dyn_loss': 371576078336.0000, 'dot_loss': 32695942.0000, 'ddot_loss':  3728.9111, 'rew_loss': 7473593319424.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  131000, Reward:  -118.838 [  80.056], Avg:  -177.878 (0.100) <0-03:57:16> ({'r_t': -1164.1435, 'eps':     0.1000, 'dyn_loss': 368016326656.0000, 'dot_loss': 32948682.0000, 'ddot_loss':  3701.8572, 'rew_loss': 37330018631680.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  132000, Reward:  -175.416 [ 180.661], Avg:  -177.860 (0.100) <0-03:59:40> ({'r_t': -1165.9623, 'eps':     0.1000, 'dyn_loss': 434776309760.0000, 'dot_loss': 39453436.0000, 'ddot_loss':  3910.0735, 'rew_loss': 199985572347904.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  133000, Reward:  -152.849 [ 129.474], Avg:  -177.673 (0.100) <0-04:01:57> ({'r_t': -1163.0137, 'eps':     0.1000, 'dyn_loss': 562366709760.0000, 'dot_loss': 48224428.0000, 'ddot_loss':  4312.8081, 'rew_loss': 393939198672896.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  134000, Reward:  -157.698 [ 166.092], Avg:  -177.525 (0.100) <0-04:04:21> ({'r_t': -1163.0454, 'eps':     0.1000, 'dyn_loss': 481645264896.0000, 'dot_loss': 42994172.0000, 'ddot_loss':  4167.4688, 'rew_loss': 661781378760704.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  135000, Reward:  -156.259 [  96.405], Avg:  -177.369 (0.100) <0-04:06:35> ({'r_t': -1123.0454, 'eps':     0.1000, 'dyn_loss': 416101269504.0000, 'dot_loss': 37620988.0000, 'ddot_loss':  3930.6877, 'rew_loss': 881666121793536.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  136000, Reward:  -164.905 [  94.444], Avg:  -177.278 (0.100) <0-04:08:50> ({'r_t': -1163.1570, 'eps':     0.1000, 'dyn_loss': 398180450304.0000, 'dot_loss': 37340016.0000, 'ddot_loss':  4093.3965, 'rew_loss': 764696512692224.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  137000, Reward:  -122.474 [  51.120], Avg:  -176.881 (0.100) <0-04:10:59> ({'r_t': -1162.7967, 'eps':     0.1000, 'dyn_loss': 404584759296.0000, 'dot_loss': 39735028.0000, 'ddot_loss':  4283.7920, 'rew_loss': 818774043262976.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  138000, Reward:  -197.795 [ 142.283], Avg:  -177.031 (0.100) <0-04:13:22> ({'r_t': -1161.3411, 'eps':     0.1000, 'dyn_loss': 387569287168.0000, 'dot_loss': 36516696.0000, 'ddot_loss':  3981.4429, 'rew_loss': 641471082397696.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  139000, Reward:  -178.462 [ 145.039], Avg:  -177.041 (0.100) <0-04:15:48> ({'r_t': -1163.0691, 'eps':     0.1000, 'dyn_loss': 335608414208.0000, 'dot_loss': 30375112.0000, 'ddot_loss':  3598.5842, 'rew_loss': 570948793139200.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  140000, Reward:  -166.117 [ 153.327], Avg:  -176.964 (0.100) <0-04:18:06> ({'r_t': -1159.6750, 'eps':     0.1000, 'dyn_loss': 323178725376.0000, 'dot_loss': 29149898.0000, 'ddot_loss':  3528.4563, 'rew_loss': 474255154216960.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  141000, Reward:  -132.751 [ 109.274], Avg:  -176.652 (0.100) <0-04:20:21> ({'r_t': -1201.5290, 'eps':     0.1000, 'dyn_loss': 296181170176.0000, 'dot_loss': 25053804.0000, 'ddot_loss':  3454.7144, 'rew_loss': 301484289818624.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  142000, Reward:  -162.257 [ 134.650], Avg:  -176.552 (0.100) <0-04:22:35> ({'r_t': -1204.1858, 'eps':     0.1000, 'dyn_loss': 274794119168.0000, 'dot_loss': 25280206.0000, 'ddot_loss':  3352.4270, 'rew_loss': 272559849340928.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  143000, Reward:  -155.699 [ 111.882], Avg:  -176.407 (0.100) <0-04:24:47> ({'r_t': -1157.3568, 'eps':     0.1000, 'dyn_loss': 271551774720.0000, 'dot_loss': 23834946.0000, 'ddot_loss':  3076.3069, 'rew_loss': 244643300114432.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  144000, Reward:  -245.951 [ 209.656], Avg:  -176.887 (0.100) <0-04:27:11> ({'r_t': -1125.7594, 'eps':     0.1000, 'dyn_loss': 255058526208.0000, 'dot_loss': 22801822.0000, 'ddot_loss':  2961.1504, 'rew_loss': 218376840413184.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  145000, Reward:  -128.860 [  87.475], Avg:  -176.558 (0.100) <0-04:29:24> ({'r_t': -1197.7572, 'eps':     0.1000, 'dyn_loss': 240620617728.0000, 'dot_loss': 21804206.0000, 'ddot_loss':  2933.0693, 'rew_loss': 209972696711168.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  146000, Reward:  -139.341 [  85.861], Avg:  -176.304 (0.100) <0-04:31:36> ({'r_t': -1183.9075, 'eps':     0.1000, 'dyn_loss': 230724583424.0000, 'dot_loss': 20049990.0000, 'ddot_loss':  2960.5088, 'rew_loss': 172884597145600.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  147000, Reward:  -159.316 [ 101.059], Avg:  -176.190 (0.100) <0-04:33:49> ({'r_t': -1143.0798, 'eps':     0.1000, 'dyn_loss': 223574605824.0000, 'dot_loss': 19556360.0000, 'ddot_loss':  2897.2288, 'rew_loss': 195904883654656.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  148000, Reward:  -140.979 [ 111.401], Avg:  -175.953 (0.100) <0-04:36:06> ({'r_t': -1182.0639, 'eps':     0.1000, 'dyn_loss': 208197287936.0000, 'dot_loss': 18301090.0000, 'ddot_loss':  2924.2273, 'rew_loss': 88237972389888.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  149000, Reward:  -181.483 [ 183.861], Avg:  -175.990 (0.100) <0-04:38:31> ({'r_t': -1193.1673, 'eps':     0.1000, 'dyn_loss': 188489629696.0000, 'dot_loss': 16247540.0000, 'ddot_loss':  3100.1724, 'rew_loss': 103512822251520.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  150000, Reward:  -165.868 [ 153.372], Avg:  -175.923 (0.100) <0-04:40:52> ({'r_t': -1161.8224, 'eps':     0.1000, 'dyn_loss': 160578764800.0000, 'dot_loss': 14958021.0000, 'ddot_loss':  3096.5583, 'rew_loss': 71833814564864.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  151000, Reward:  -192.082 [ 178.557], Avg:  -176.029 (0.100) <0-04:43:12> ({'r_t': -1134.1464, 'eps':     0.1000, 'dyn_loss': 150380134400.0000, 'dot_loss': 13585750.0000, 'ddot_loss':  2836.2244, 'rew_loss': 73079975837696.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  152000, Reward:  -133.632 [  99.773], Avg:  -175.752 (0.100) <0-04:45:26> ({'r_t': -1176.6619, 'eps':     0.1000, 'dyn_loss': 150885416960.0000, 'dot_loss': 13478907.0000, 'ddot_loss':  2896.0471, 'rew_loss': 60889537445888.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  153000, Reward:  -192.539 [ 129.689], Avg:  -175.861 (0.100) <0-04:47:42> ({'r_t': -1153.4079, 'eps':     0.1000, 'dyn_loss': 162342944768.0000, 'dot_loss': 14025754.0000, 'ddot_loss':  2807.4473, 'rew_loss': 67606329425920.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  154000, Reward:  -210.150 [ 165.998], Avg:  -176.083 (0.100) <0-04:50:00> ({'r_t': -1174.0421, 'eps':     0.1000, 'dyn_loss': 150888742912.0000, 'dot_loss': 12988569.0000, 'ddot_loss':  2842.2944, 'rew_loss': 83127934386176.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  155000, Reward:  -155.696 [ 115.561], Avg:  -175.952 (0.100) <0-04:52:20> ({'r_t': -1178.4751, 'eps':     0.1000, 'dyn_loss': 140362350592.0000, 'dot_loss': 12078917.0000, 'ddot_loss':  2777.8293, 'rew_loss': 56421836128256.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  156000, Reward:  -154.396 [ 137.126], Avg:  -175.815 (0.100) <0-04:54:47> ({'r_t': -1143.6545, 'eps':     0.1000, 'dyn_loss': 159977029632.0000, 'dot_loss': 14496131.0000, 'ddot_loss':  2718.1799, 'rew_loss': 95879935557632.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  157000, Reward:  -154.257 [ 103.026], Avg:  -175.678 (0.100) <0-04:57:00> ({'r_t': -1213.9888, 'eps':     0.1000, 'dyn_loss': 154393378816.0000, 'dot_loss': 13947668.0000, 'ddot_loss':  2728.7913, 'rew_loss': 149657749553152.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  158000, Reward:  -110.496 [  77.288], Avg:  -175.268 (0.100) <0-04:59:10> ({'r_t': -1137.6147, 'eps':     0.1000, 'dyn_loss': 142609956864.0000, 'dot_loss': 12577967.0000, 'ddot_loss':  2596.0068, 'rew_loss': 111664292691968.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  159000, Reward:  -141.966 [  94.399], Avg:  -175.060 (0.100) <0-05:01:22> ({'r_t': -1136.9816, 'eps':     0.1000, 'dyn_loss': 130990432256.0000, 'dot_loss': 11389013.0000, 'ddot_loss':  2551.1912, 'rew_loss': 138626209939456.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  160000, Reward:  -111.694 [  88.031], Avg:  -174.666 (0.100) <0-05:03:36> ({'r_t': -1148.6804, 'eps':     0.1000, 'dyn_loss': 118521208832.0000, 'dot_loss': 10702885.0000, 'ddot_loss':  2570.6426, 'rew_loss': 154531010707456.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  161000, Reward:  -175.640 [ 146.313], Avg:  -174.672 (0.100) <0-05:05:51> ({'r_t': -1125.9845, 'eps':     0.1000, 'dyn_loss': 115422109696.0000, 'dot_loss': 10795401.0000, 'ddot_loss':  2803.6643, 'rew_loss': 130912926826496.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  162000, Reward:  -168.635 [ 133.738], Avg:  -174.635 (0.100) <0-05:08:06> ({'r_t': -1156.7950, 'eps':     0.1000, 'dyn_loss': 150387539968.0000, 'dot_loss': 17083688.0000, 'ddot_loss':  3663.9609, 'rew_loss': 637391131901952.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  163000, Reward:  -222.047 [ 210.123], Avg:  -174.925 (0.100) <0-05:10:30> ({'r_t': -1162.1671, 'eps':     0.1000, 'dyn_loss': 207555182592.0000, 'dot_loss': 18805122.0000, 'ddot_loss':  3444.6763, 'rew_loss': 166770560204800.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  164000, Reward:  -144.537 [ 126.789], Avg:  -174.740 (0.100) <0-05:12:47> ({'r_t': -1168.9825, 'eps':     0.1000, 'dyn_loss': 144188047360.0000, 'dot_loss': 14474438.0000, 'ddot_loss':  3512.1338, 'rew_loss': 85163170070528.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  165000, Reward:  -191.472 [ 139.557], Avg:  -174.841 (0.100) <0-05:15:07> ({'r_t': -1161.0701, 'eps':     0.1000, 'dyn_loss': 122154262528.0000, 'dot_loss': 14076463.0000, 'ddot_loss':  3750.4854, 'rew_loss': 90006190292992.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  166000, Reward:  -211.205 [ 155.947], Avg:  -175.059 (0.100) <0-05:17:24> ({'r_t': -1169.6592, 'eps':     0.1000, 'dyn_loss': 106425679872.0000, 'dot_loss': 10476001.0000, 'ddot_loss':  2948.9197, 'rew_loss': 7260070215680.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  167000, Reward:  -141.689 [ 181.797], Avg:  -174.860 (0.100) <0-05:19:48> ({'r_t': -1135.1932, 'eps':     0.1000, 'dyn_loss': 79324512256.0000, 'dot_loss': 7917874.5000, 'ddot_loss':  2781.2527, 'rew_loss': 11583958810624.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  168000, Reward:   -91.342 [  47.137], Avg:  -174.366 (0.100) <0-05:21:56> ({'r_t': -1204.0886, 'eps':     0.1000, 'dyn_loss': 94574952448.0000, 'dot_loss': 9047770.0000, 'ddot_loss':  2926.5457, 'rew_loss': 15795495108608.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  169000, Reward:  -136.792 [ 105.075], Avg:  -174.145 (0.100) <0-05:24:10> ({'r_t': -1162.0651, 'eps':     0.1000, 'dyn_loss': 103268679680.0000, 'dot_loss': 9361169.0000, 'ddot_loss':  3200.0659, 'rew_loss': 97176017436672.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  170000, Reward:  -179.219 [ 156.241], Avg:  -174.175 (0.100) <0-05:26:36> ({'r_t': -1146.4812, 'eps':     0.1000, 'dyn_loss': 84783185920.0000, 'dot_loss': 6654623.5000, 'ddot_loss':  2859.3184, 'rew_loss': 331523022651392.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  171000, Reward:  -173.385 [ 127.371], Avg:  -174.170 (0.100) <0-05:28:54> ({'r_t': -1147.4261, 'eps':     0.1000, 'dyn_loss': 70574710784.0000, 'dot_loss': 6396085.0000, 'ddot_loss':  3077.7620, 'rew_loss': 100330217930752.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  172000, Reward:  -147.780 [ 127.015], Avg:  -174.018 (0.100) <0-05:31:12> ({'r_t': -1118.1248, 'eps':     0.1000, 'dyn_loss': 81317625856.0000, 'dot_loss': 7507234.5000, 'ddot_loss':  2764.4854, 'rew_loss': 36635869708288.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  173000, Reward:  -185.906 [ 150.419], Avg:  -174.086 (0.100) <0-05:33:30> ({'r_t': -1143.1822, 'eps':     0.1000, 'dyn_loss': 90418970624.0000, 'dot_loss': 9413439.0000, 'ddot_loss':  2717.9333, 'rew_loss': 114697596567552.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  174000, Reward:  -103.473 [  77.089], Avg:  -173.682 (0.100) <0-05:35:43> ({'r_t': -1163.2408, 'eps':     0.1000, 'dyn_loss': 310507044864.0000, 'dot_loss': 28123054.0000, 'ddot_loss':  3100.2051, 'rew_loss': 1646632076574720.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  175000, Reward:  -111.078 [  76.218], Avg:  -173.327 (0.100) <0-05:37:54> ({'r_t': -1199.3405, 'eps':     0.1000, 'dyn_loss': 220203204608.0000, 'dot_loss': 19300464.0000, 'ddot_loss':  2935.8062, 'rew_loss': 103403023761408.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  176000, Reward:   -99.554 [  47.120], Avg:  -172.910 (0.100) <0-05:40:02> ({'r_t': -1182.1490, 'eps':     0.1000, 'dyn_loss': 625098883072.0000, 'dot_loss': 56428064.0000, 'ddot_loss':  4804.6152, 'rew_loss': 223116524460703744.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  177000, Reward:  -124.490 [ 100.743], Avg:  -172.638 (0.100) <0-05:42:13> ({'r_t': -1167.1023, 'eps':     0.1000, 'dyn_loss': 1503732301824.0000, 'dot_loss': 129054872.0000, 'ddot_loss':  8443.6641, 'rew_loss': 362555884720619520.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  178000, Reward:  -110.106 [  82.371], Avg:  -172.289 (0.100) <0-05:44:22> ({'r_t': -1153.6656, 'eps':     0.1000, 'dyn_loss': 309681586176.0000, 'dot_loss': 22285286.0000, 'ddot_loss':  4078.5212, 'rew_loss': 3468051336921088.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  179000, Reward:  -122.213 [  88.937], Avg:  -172.010 (0.100) <0-05:46:36> ({'r_t': -1162.0989, 'eps':     0.1000, 'dyn_loss': 140858654720.0000, 'dot_loss': 10938716.0000, 'ddot_loss':  3728.9084, 'rew_loss': 58498926772224.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  180000, Reward:  -174.569 [ 185.656], Avg:  -172.025 (0.100) <0-05:48:58> ({'r_t': -1141.9417, 'eps':     0.1000, 'dyn_loss': 82952462336.0000, 'dot_loss': 8863796.0000, 'ddot_loss':  4288.6187, 'rew_loss': 26682983448576.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  181000, Reward:  -114.754 [  87.097], Avg:  -171.710 (0.100) <0-05:51:12> ({'r_t': -1169.1254, 'eps':     0.1000, 'dyn_loss': 92469886976.0000, 'dot_loss': 9223030.0000, 'ddot_loss':  4091.1470, 'rew_loss': 17295315304448.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  182000, Reward:  -146.890 [ 123.500], Avg:  -171.574 (0.100) <0-05:53:28> ({'r_t': -1143.5142, 'eps':     0.1000, 'dyn_loss': 67359797248.0000, 'dot_loss': 5969863.5000, 'ddot_loss':  3688.6599, 'rew_loss': 24167659339776.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  183000, Reward:  -133.534 [ 100.307], Avg:  -171.367 (0.100) <0-05:55:42> ({'r_t': -1173.3747, 'eps':     0.1000, 'dyn_loss': 339705593856.0000, 'dot_loss': 29516964.0000, 'ddot_loss':  3824.7529, 'rew_loss': 253944940986368.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  184000, Reward:  -177.205 [ 141.607], Avg:  -171.399 (0.100) <0-05:58:01> ({'r_t': -1130.8418, 'eps':     0.1000, 'dyn_loss': 185823690752.0000, 'dot_loss': 15293740.0000, 'ddot_loss':  3009.6931, 'rew_loss': 751369094955008.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  185000, Reward:  -147.064 [ 109.121], Avg:  -171.268 (0.100) <0-06:00:15> ({'r_t': -1168.3982, 'eps':     0.1000, 'dyn_loss': 130363711488.0000, 'dot_loss': 10974932.0000, 'ddot_loss':  3172.3862, 'rew_loss': 2728421998198784.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  186000, Reward:  -185.638 [ 122.041], Avg:  -171.345 (0.100) <0-06:02:27> ({'r_t': -1195.5269, 'eps':     0.1000, 'dyn_loss': 428258459648.0000, 'dot_loss': 39411712.0000, 'ddot_loss':  4769.6235, 'rew_loss': 6063868904210432.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  187000, Reward:  -137.627 [ 142.161], Avg:  -171.166 (0.100) <0-06:04:42> ({'r_t': -1143.1558, 'eps':     0.1000, 'dyn_loss': 376235622400.0000, 'dot_loss': 31685612.0000, 'ddot_loss':  3067.0188, 'rew_loss': 2766025779052544.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  188000, Reward:  -133.934 [ 128.210], Avg:  -170.969 (0.100) <0-06:07:00> ({'r_t': -1195.1288, 'eps':     0.1000, 'dyn_loss': 613921849344.0000, 'dot_loss': 55492996.0000, 'ddot_loss':  4162.5361, 'rew_loss': 25544345910247424.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  189000, Reward:  -127.752 [  77.541], Avg:  -170.741 (0.100) <0-06:09:09> ({'r_t': -1190.4550, 'eps':     0.1000, 'dyn_loss': 815827845120.0000, 'dot_loss': 74610848.0000, 'ddot_loss':  5157.9502, 'rew_loss': 55053608059666432.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  190000, Reward:  -166.290 [ 153.671], Avg:  -170.718 (0.100) <0-06:11:24> ({'r_t': -1180.7620, 'eps':     0.1000, 'dyn_loss': 296964063232.0000, 'dot_loss': 25742332.0000, 'ddot_loss':  3211.6619, 'rew_loss': 909877681586176.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  191000, Reward:  -164.200 [  95.599], Avg:  -170.684 (0.100) <0-06:13:40> ({'r_t': -1172.5176, 'eps':     0.1000, 'dyn_loss': 4314032242688.0000, 'dot_loss': 426379872.0000, 'ddot_loss': 22421.2148, 'rew_loss': 5987694974861312.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  192000, Reward:  -166.637 [ 169.682], Avg:  -170.663 (0.100) <0-06:16:00> ({'r_t': -1097.9510, 'eps':     0.1000, 'dyn_loss': 6338940239872.0000, 'dot_loss': 628964992.0000, 'ddot_loss': 32641.7891, 'rew_loss': 2457364464664576.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  193000, Reward:  -167.816 [ 122.296], Avg:  -170.648 (0.100) <0-06:18:16> ({'r_t': -1136.1977, 'eps':     0.1000, 'dyn_loss': 5197711015936.0000, 'dot_loss': 515407136.0000, 'ddot_loss': 27284.2656, 'rew_loss': 817535482068992.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  194000, Reward:  -149.531 [  71.783], Avg:  -170.540 (0.100) <0-06:20:30> ({'r_t': -1102.2621, 'eps':     0.1000, 'dyn_loss': 4141369524224.0000, 'dot_loss': 409225184.0000, 'ddot_loss': 22714.6641, 'rew_loss': 574191828992000.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  195000, Reward:  -165.784 [ 169.999], Avg:  -170.516 (0.100) <0-06:22:55> ({'r_t': -1146.2209, 'eps':     0.1000, 'dyn_loss': 3471931080704.0000, 'dot_loss': 338811648.0000, 'ddot_loss': 19177.4004, 'rew_loss': 772316388655104.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  196000, Reward:  -169.297 [ 111.573], Avg:  -170.510 (0.100) <0-06:25:10> ({'r_t': -1092.2799, 'eps':     0.1000, 'dyn_loss': 3222913155072.0000, 'dot_loss': 313320000.0000, 'ddot_loss': 18268.6191, 'rew_loss': 967483326464000.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  197000, Reward:  -179.353 [ 158.679], Avg:  -170.554 (0.100) <0-06:27:34> ({'r_t': -1080.9618, 'eps':     0.1000, 'dyn_loss': 2925310246912.0000, 'dot_loss': 282586208.0000, 'ddot_loss': 16848.4453, 'rew_loss': 1094144663486464.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  198000, Reward:  -113.895 [  62.632], Avg:  -170.270 (0.100) <0-06:29:44> ({'r_t': -1120.7136, 'eps':     0.1000, 'dyn_loss': 2468136615936.0000, 'dot_loss': 234578448.0000, 'ddot_loss': 14497.6924, 'rew_loss': 1606213078876160.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  199000, Reward:  -131.775 [ 146.194], Avg:  -170.077 (0.100) <0-06:32:10> ({'r_t': -1133.3572, 'eps':     0.1000, 'dyn_loss': 3419734802432.0000, 'dot_loss': 334469216.0000, 'ddot_loss': 19105.2949, 'rew_loss': 5194582555885568.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  200000, Reward:   -79.858 [  37.687], Avg:  -169.628 (0.100) <0-06:34:18> ({'r_t': -1116.7294, 'eps':     0.1000, 'dyn_loss': 3415517691904.0000, 'dot_loss': 334595936.0000, 'ddot_loss': 18935.0273, 'rew_loss': 5044701082157056.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  201000, Reward:   -90.448 [  34.028], Avg:  -169.236 (0.100) <0-06:36:26> ({'r_t': -1110.4469, 'eps':     0.1000, 'dyn_loss': 3201155989504.0000, 'dot_loss': 311430528.0000, 'ddot_loss': 18179.1230, 'rew_loss': 6573597770383360.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  202000, Reward:   -90.516 [  47.499], Avg:  -168.848 (0.100) <0-06:38:36> ({'r_t': -1091.0850, 'eps':     0.1000, 'dyn_loss': 2828254838784.0000, 'dot_loss': 273754016.0000, 'ddot_loss': 16385.9141, 'rew_loss': 14060264785707008.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  203000, Reward:   -81.829 [  29.452], Avg:  -168.422 (0.100) <0-06:40:43> ({'r_t': -1110.0075, 'eps':     0.1000, 'dyn_loss': 2563334209536.0000, 'dot_loss': 248292960.0000, 'ddot_loss': 15083.3486, 'rew_loss': 14033675716919296.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  204000, Reward:   -77.641 [  21.948], Avg:  -167.979 (0.100) <0-06:42:48> ({'r_t': -1100.9037, 'eps':     0.1000, 'dyn_loss': 2228667285504.0000, 'dot_loss': 216728560.0000, 'ddot_loss': 13858.4229, 'rew_loss': 10345002110550016.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  205000, Reward:  -106.052 [  78.735], Avg:  -167.678 (0.100) <0-06:45:07> ({'r_t': -1102.6739, 'eps':     0.1000, 'dyn_loss': 3140889346048.0000, 'dot_loss': 298556704.0000, 'ddot_loss': 17026.5801, 'rew_loss': 96660592638558208.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  206000, Reward:   -95.122 [  60.843], Avg:  -167.328 (0.100) <0-06:47:19> ({'r_t': -1126.4293, 'eps':     0.1000, 'dyn_loss': 6090555129856.0000, 'dot_loss': 616604800.0000, 'ddot_loss': 32357.0254, 'rew_loss': 11632914626248704.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  207000, Reward:  -141.222 [ 126.012], Avg:  -167.202 (0.100) <0-06:49:38> ({'r_t': -1118.7426, 'eps':     0.1000, 'dyn_loss': 6548312555520.0000, 'dot_loss': 665466944.0000, 'ddot_loss': 34518.7695, 'rew_loss': 154506717298688.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  208000, Reward:  -162.856 [ 140.471], Avg:  -167.182 (0.100) <0-06:51:54> ({'r_t': -1105.8394, 'eps':     0.1000, 'dyn_loss': 6479082422272.0000, 'dot_loss': 657956736.0000, 'ddot_loss': 34258.2109, 'rew_loss': 151319499243520.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  209000, Reward:  -195.769 [ 179.774], Avg:  -167.318 (0.100) <0-06:54:18> ({'r_t': -1136.8075, 'eps':     0.1000, 'dyn_loss': 6499974774784.0000, 'dot_loss': 659110784.0000, 'ddot_loss': 34518.3789, 'rew_loss': 233053414752256.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  210000, Reward:  -155.373 [ 110.816], Avg:  -167.261 (0.100) <0-06:56:35> ({'r_t': -1168.1388, 'eps':     0.1000, 'dyn_loss': 6371186573312.0000, 'dot_loss': 646213056.0000, 'ddot_loss': 33822.5547, 'rew_loss': 214100260945920.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  211000, Reward:  -117.560 [  72.476], Avg:  -167.027 (0.100) <0-06:58:45> ({'r_t': -1110.5041, 'eps':     0.1000, 'dyn_loss': 6229019066368.0000, 'dot_loss': 632255744.0000, 'ddot_loss': 32937.8984, 'rew_loss': 226148600512512.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  212000, Reward:  -163.896 [ 149.797], Avg:  -167.012 (0.100) <0-07:01:06> ({'r_t': -1119.2996, 'eps':     0.1000, 'dyn_loss': 6364753035264.0000, 'dot_loss': 645620992.0000, 'ddot_loss': 33704.4531, 'rew_loss': 207744564985856.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  213000, Reward:  -137.879 [ 150.775], Avg:  -166.876 (0.100) <0-07:03:27> ({'r_t': -1094.9540, 'eps':     0.1000, 'dyn_loss': 6504870051840.0000, 'dot_loss': 659163520.0000, 'ddot_loss': 34537.4570, 'rew_loss': 338971167031296.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  214000, Reward:  -163.876 [ 169.517], Avg:  -166.862 (0.100) <0-07:05:47> ({'r_t': -1121.2738, 'eps':     0.1000, 'dyn_loss': 6529682505728.0000, 'dot_loss': 661528384.0000, 'ddot_loss': 34771.7617, 'rew_loss': 173177812549632.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  215000, Reward:  -116.726 [  60.916], Avg:  -166.630 (0.100) <0-07:07:58> ({'r_t': -1110.2353, 'eps':     0.1000, 'dyn_loss': 6262240051200.0000, 'dot_loss': 635335616.0000, 'ddot_loss': 33013.3008, 'rew_loss': 199367633928192.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  216000, Reward:  -107.076 [  55.614], Avg:  -166.355 (0.100) <0-07:10:07> ({'r_t': -1142.1074, 'eps':     0.1000, 'dyn_loss': 6414589755392.0000, 'dot_loss': 650523264.0000, 'ddot_loss': 34038.4883, 'rew_loss': 155898337034240.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  217000, Reward:  -121.208 [ 148.511], Avg:  -166.148 (0.100) <0-07:12:28> ({'r_t': -1133.0787, 'eps':     0.1000, 'dyn_loss': 6391520034816.0000, 'dot_loss': 648077696.0000, 'ddot_loss': 33854.5938, 'rew_loss': 200862483873792.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  218000, Reward:  -161.419 [ 153.481], Avg:  -166.127 (0.100) <0-07:14:50> ({'r_t': -1142.7762, 'eps':     0.1000, 'dyn_loss': 6233973063680.0000, 'dot_loss': 632581568.0000, 'ddot_loss': 32868.6445, 'rew_loss': 191099587002368.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  219000, Reward:  -153.491 [ 102.643], Avg:  -166.069 (0.100) <0-07:17:05> ({'r_t': -1134.8581, 'eps':     0.1000, 'dyn_loss': 6250055073792.0000, 'dot_loss': 634960192.0000, 'ddot_loss': 33086.7266, 'rew_loss': 183399616610304.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  220000, Reward:  -126.249 [  96.650], Avg:  -165.889 (0.100) <0-07:19:18> ({'r_t': -1133.4277, 'eps':     0.1000, 'dyn_loss': 6183425409024.0000, 'dot_loss': 628030976.0000, 'ddot_loss': 32611.0293, 'rew_loss': 221479853621248.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  221000, Reward:  -140.644 [ 136.067], Avg:  -165.775 (0.100) <0-07:21:38> ({'r_t': -1155.0786, 'eps':     0.1000, 'dyn_loss': 6194563383296.0000, 'dot_loss': 629134144.0000, 'ddot_loss': 32727.6934, 'rew_loss': 253457227317248.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  222000, Reward:  -175.782 [ 158.646], Avg:  -165.820 (0.100) <0-07:23:57> ({'r_t': -1160.9071, 'eps':     0.1000, 'dyn_loss': 6273580924928.0000, 'dot_loss': 636454528.0000, 'ddot_loss': 33263.0312, 'rew_loss': 126714957004800.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  223000, Reward:  -167.971 [ 147.626], Avg:  -165.830 (0.100) <0-07:26:15> ({'r_t': -1165.9936, 'eps':     0.1000, 'dyn_loss': 6217411330048.0000, 'dot_loss': 631492416.0000, 'ddot_loss': 32854.5312, 'rew_loss': 212092346957824.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  224000, Reward:  -144.975 [ 129.587], Avg:  -165.737 (0.100) <0-07:28:33> ({'r_t': -1125.3697, 'eps':     0.1000, 'dyn_loss': 6263311171584.0000, 'dot_loss': 635713920.0000, 'ddot_loss': 33125.8984, 'rew_loss': 223091422658560.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  225000, Reward:  -138.885 [ 100.159], Avg:  -165.618 (0.100) <0-07:30:50> ({'r_t': -1142.2531, 'eps':     0.1000, 'dyn_loss': 6344216674304.0000, 'dot_loss': 643445952.0000, 'ddot_loss': 33633.3047, 'rew_loss': 160980524859392.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  226000, Reward:  -138.290 [ 107.668], Avg:  -165.498 (0.100) <0-07:33:07> ({'r_t': -1128.1971, 'eps':     0.1000, 'dyn_loss': 6184651718656.0000, 'dot_loss': 628058496.0000, 'ddot_loss': 32611.3633, 'rew_loss': 219391157338112.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  227000, Reward:  -177.184 [ 193.279], Avg:  -165.549 (0.100) <0-07:35:30> ({'r_t': -1137.2243, 'eps':     0.1000, 'dyn_loss': 6237737451520.0000, 'dot_loss': 633157952.0000, 'ddot_loss': 33015.9844, 'rew_loss': 158969758744576.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  228000, Reward:  -135.486 [  97.845], Avg:  -165.418 (0.100) <0-07:37:44> ({'r_t': -1131.9922, 'eps':     0.1000, 'dyn_loss': 6211551363072.0000, 'dot_loss': 630440000.0000, 'ddot_loss': 32853.0078, 'rew_loss': 178795965317120.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  229000, Reward:  -112.111 [  64.951], Avg:  -165.186 (0.100) <0-07:39:58> ({'r_t': -1141.3852, 'eps':     0.1000, 'dyn_loss': 6283936661504.0000, 'dot_loss': 637754112.0000, 'ddot_loss': 33232.1406, 'rew_loss': 155062160588800.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  230000, Reward:  -175.947 [ 153.803], Avg:  -165.233 (0.100) <0-07:42:16> ({'r_t': -1125.0517, 'eps':     0.1000, 'dyn_loss': 6377985015808.0000, 'dot_loss': 646898496.0000, 'ddot_loss': 33869.4648, 'rew_loss': 166275531669504.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  231000, Reward:  -185.118 [ 193.011], Avg:  -165.318 (0.100) <0-07:44:41> ({'r_t': -1165.8698, 'eps':     0.1000, 'dyn_loss': 6353672208384.0000, 'dot_loss': 644281024.0000, 'ddot_loss': 33657.1562, 'rew_loss': 195566168440832.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  232000, Reward:  -118.543 [ 104.464], Avg:  -165.118 (0.100) <0-07:46:56> ({'r_t': -1137.9569, 'eps':     0.1000, 'dyn_loss': 6348704055296.0000, 'dot_loss': 643862592.0000, 'ddot_loss': 33616.6094, 'rew_loss': 165552819535872.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  233000, Reward:  -165.529 [ 154.549], Avg:  -165.119 (0.100) <0-07:49:18> ({'r_t': -1137.4209, 'eps':     0.1000, 'dyn_loss': 6239699861504.0000, 'dot_loss': 633235776.0000, 'ddot_loss': 33083.2344, 'rew_loss': 278691351363584.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  234000, Reward:  -194.217 [ 221.862], Avg:  -165.243 (0.100) <0-07:51:44> ({'r_t': -1134.3281, 'eps':     0.1000, 'dyn_loss': 6361522896896.0000, 'dot_loss': 645463424.0000, 'ddot_loss': 33754.1406, 'rew_loss': 101594381156352.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  235000, Reward:  -132.717 [  95.542], Avg:  -165.105 (0.100) <0-07:53:59> ({'r_t': -1164.0497, 'eps':     0.1000, 'dyn_loss': 6227391152128.0000, 'dot_loss': 632055168.0000, 'ddot_loss': 32947.8711, 'rew_loss': 188748109185024.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  236000, Reward:  -122.415 [  82.837], Avg:  -164.925 (0.100) <0-07:56:12> ({'r_t': -1126.4990, 'eps':     0.1000, 'dyn_loss': 6144972029952.0000, 'dot_loss': 624247744.0000, 'ddot_loss': 32422.0957, 'rew_loss': 157124701192192.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  237000, Reward:  -119.676 [  64.127], Avg:  -164.735 (0.100) <0-07:58:22> ({'r_t': -1154.1171, 'eps':     0.1000, 'dyn_loss': 6310364446720.0000, 'dot_loss': 640119744.0000, 'ddot_loss': 33430.7305, 'rew_loss': 164070116294656.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  238000, Reward:  -108.090 [  98.427], Avg:  -164.498 (0.100) <0-08:00:37> ({'r_t': -1112.6834, 'eps':     0.1000, 'dyn_loss': 6201744031744.0000, 'dot_loss': 629300736.0000, 'ddot_loss': 32769.3867, 'rew_loss': 149619430391808.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  239000, Reward:  -145.677 [ 163.497], Avg:  -164.420 (0.100) <0-08:03:00> ({'r_t': -1166.8343, 'eps':     0.1000, 'dyn_loss': 6293418409984.0000, 'dot_loss': 638283392.0000, 'ddot_loss': 33394.4141, 'rew_loss': 125974226141184.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  240000, Reward:  -168.772 [ 175.177], Avg:  -164.438 (0.100) <0-08:05:20> ({'r_t': -1126.8994, 'eps':     0.1000, 'dyn_loss': 6329461112832.0000, 'dot_loss': 641656896.0000, 'ddot_loss': 33552.2227, 'rew_loss': 161282598633472.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  241000, Reward:  -112.081 [  82.750], Avg:  -164.221 (0.100) <0-08:07:33> ({'r_t': -1140.9315, 'eps':     0.1000, 'dyn_loss': 6197227814912.0000, 'dot_loss': 629208320.0000, 'ddot_loss': 32732.9004, 'rew_loss': 175616431226880.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  242000, Reward:  -146.576 [ 103.418], Avg:  -164.149 (0.100) <0-08:09:49> ({'r_t': -1145.8612, 'eps':     0.1000, 'dyn_loss': 6318561165312.0000, 'dot_loss': 641439424.0000, 'ddot_loss': 33490.6484, 'rew_loss': 174280394407936.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  243000, Reward:  -230.520 [ 223.949], Avg:  -164.421 (0.100) <0-08:12:15> ({'r_t': -1152.6984, 'eps':     0.1000, 'dyn_loss': 6188840255488.0000, 'dot_loss': 629776576.0000, 'ddot_loss': 32628.6191, 'rew_loss': 141495197761536.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
Step:  244000, Reward:  -173.415 [ 157.687], Avg:  -164.458 (0.100) <0-08:14:37> ({'r_t': -1205.8114, 'eps':     0.1000, 'dyn_loss': 6275404398592.0000, 'dot_loss': 637957312.0000, 'ddot_loss': 33169.7734, 'rew_loss': 134293720399872.0000, 'lr':     0.0010, 'eps_e':     0.1000, 'lr_e':     0.0010})
