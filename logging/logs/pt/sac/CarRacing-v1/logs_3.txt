Model: <class 'src.models.pytorch.agents.sac.SACAgent'>, Env: CarRacing-v1, Date: 15/05/2020 18:55:02
CPU: 8 Core, 5.0GHz, 62.66 GB, Linux-5.3.0-51-generic-x86_64-with-debian-buster-sid
GPU 0: GeForce RTX 2070, 7.98 GB (Driver: 440.64.00)
Git URL: git@github.com:shawnmanuel000/ModelPredictivePathIntegralWithDeepRL.git
Hash: 2242ee7a5e827e07369e628113071cf5389fe2ba
Branch: master

config: 
   TRIAL_AT = 1000
   SAVE_AT = 10
   REG_LAMBDA = 1e-06
   LEARN_RATE = 0.0001
   DISCOUNT_RATE = 0.99
   ADVANTAGE_DECAY = 0.95
   INPUT_LAYER = 512
   ACTOR_HIDDEN = 256
   CRITIC_HIDDEN = 1024
   EPS_MAX = 1.0
   EPS_MIN = 0.1
   EPS_DECAY = 0.995
   NUM_STEPS = 500
   MAX_BUFFER_SIZE = 100000
   REPLAY_BATCH_SIZE = 32
   TARGET_UPDATE_RATE = 0.0004
   env_name = CarRacing-v1
   rank = 0
   size = 17
   split = 17
   model = sac
   framework = pt
   train_prop = 1.0
   tcp_ports = [9000, 9001, 9002, 9003, 9004, 9005, 9006, 9007, 9008, 9009, 9010, 9011, 9012, 9013, 9014, 9015, 9016]
   tcp_rank = 0
   num_envs = 1
   nsteps = 500000
   render = False
   trial = False
   icm = False
   rs = False,
num_envs: 16,
envs: <src.utils.envs.EnvManager object at 0x7f45693f7b90> 
	env = <GymEnv<CarRacing<CarRacing-v1>>> 
		env = <CarRacing<CarRacing-v1>> 
			channel = <mlagents_envs.side_channel.engine_configuration_channel.EngineConfigurationChannel object at 0x7f4569288f50>
			scale_sim = <function CarRacing.__init__.<locals>.<lambda> at 0x7f456924a9e0>
			env = <UnityToGymWrapper instance> 
				visual_obs = None
				game_over = False
				name = CarBehavior?team=0
				group_spec = BehaviorSpec(observation_shapes=[(30,)], action_type=<ActionType.CONTINUOUS: 1>, action_shape=3)
				use_visual = False
				uint8_visual = False
			cost_model = <src.envs.CarRacing.objective.cost.CostModel object at 0x7f4569257850> 
				track = <src.envs.CarRacing.objective.track.Track object at 0x7f4569257290> 
					track = <list len=500>
					X = (1.540585208684206, 1.5814536064863205, 1.6016383588314056, 1.6350171357393264, 1.6559478223323822, 1.6717498254776002, 1.709812204837799, 1.7354034245014192, 1.7725858569145203, 1.8077154874801635, 1.958074402809143, 2.0178433418273927, 2.1851138830184937, 2.258661150932312, 2.3439700841903686, 2.452700424194336, 2.586679172515869, 2.782884216308594, 3.047244071960449, 3.4783129692077637, 3.9734771251678467, 4.596014499664307, 5.29957389831543, 6.05716609954834, 6.824328422546387, 7.646727561950684, 8.59219741821289, 9.675070762634277, 10.77119255065918, 11.868535041809082, 12.83842658996582, 13.727555274963379, 14.569844245910645, 15.391722679138184, 16.204023361206055, 17.02372169494629, 17.626384735107422, 18.072078704833984, 18.462026596069336, 18.803436279296875, 19.08125877380371, 19.200590133666992, 19.074377059936523, 18.833162307739258, 18.582487106323242, 18.339160919189453, 17.97744369506836, 17.59515380859375, 17.09140968322754, 16.50218391418457, 15.817791938781738, 14.983868598937988, 13.986822128295898, 12.817933082580566, 11.528505325317383, 10.241579055786133, 8.946599960327148, 7.588953971862793, 6.2032341957092285, 4.799948692321777, 3.3720505237579346, 1.9454675912857056, 0.4815756678581238, -0.9242660999298096, -2.3082480430603027, -3.7190709114074707, -5.090760231018066, -6.490819931030273, -7.933252811431885, -9.48039722442627, -11.141877174377441, -12.927711486816406, -14.796602249145508, -16.603300094604492, -18.390233993530273, -20.1385498046875, -21.805997848510742, -23.41408920288086, -25.02754783630371, -26.801597595214844, -28.776451110839844, -30.972705841064453, -33.385520935058594, -35.90762710571289, -38.527618408203125, -41.362369537353516, -44.435585021972656, -47.831398010253906, -51.587188720703125, -55.642662048339844, -59.980804443359375, -64.55036163330078, -69.1060562133789, -73.4732666015625, -77.65788269042969, -81.6474380493164, -85.45370483398438, -89.12055206298828, -92.67816925048828, -96.15220642089844, -99.54827117919922, -102.86875915527344, -106.01786804199219, -109.03597259521484, -111.96282958984375, -114.75870513916016, -117.48453521728516, -120.2335205078125, -123.01750946044922, -125.81232452392578, -128.56246948242188, -131.20936584472656, -133.767333984375, -136.21359252929688, -138.6573486328125, -141.0603485107422, -143.3613739013672, -145.4899444580078, -147.5723114013672, -149.41514587402344, -150.9908905029297, -152.32089233398438, -153.6006622314453, -154.83030700683594, -156.0063018798828, -157.14691162109375, -158.23680114746094, -159.30880737304688, -160.30152893066406, -161.2411651611328, -162.03582763671875, -162.72186279296875, -163.28753662109375, -163.81460571289062, -164.31549072265625, -164.78814697265625, -165.1201171875, -165.26596069335938, -165.24961853027344, -165.20376586914062, -165.07931518554688, -165.0469512939453, -165.03262329101562, -164.86660766601562, -164.62220764160156, -164.3842315673828, -164.145263671875, -163.90011596679688, -163.64981079101562, -163.3218231201172, -162.726318359375, -161.83493041992188, -160.71856689453125, -159.4139862060547, -157.9736328125, -156.54212951660156, -155.10464477539062, -153.63636779785156, -152.13641357421875, -150.6412811279297, -149.1659698486328, -147.64437866210938, -146.01336669921875, -144.21286010742188, -142.3518829345703, -140.49502563476562, -138.6591796875, -136.8135986328125, -134.9413604736328, -132.9547882080078, -130.7132110595703, -128.1597137451172, -125.3279037475586, -122.26266479492188, -118.97386932373047, -115.49871826171875, -111.90750122070312, -108.16539764404297, -104.34297180175781, -100.58757781982422, -96.96247863769531, -93.51396942138672, -90.1981201171875, -86.93607330322266, -83.70171356201172, -80.58210754394531, -77.49177551269531, -74.4620132446289, -71.53809356689453, -68.60317993164062, -65.52932739257812, -62.46957778930664, -59.48895263671875, -56.56187057495117, -53.813289642333984, -51.1711311340332, -48.648197174072266, -46.242332458496094, -43.94118118286133, -41.766075134277344, -39.70472717285156, -37.813140869140625, -36.01365280151367, -34.269657135009766, -32.50520706176758, -30.680166244506836, -28.837051391601562, -27.001256942749023, -25.25333023071289, -23.701873779296875, -22.668081283569336, -22.199195861816406, -22.169893264770508, -22.46630859375, -23.134033203125, -24.32797622680664, -26.001781463623047, -27.869766235351562, -29.80392074584961, -31.775949478149414, -33.793365478515625, -35.771907806396484, -37.70563888549805, -39.61886215209961, -41.516029357910156, -43.41127014160156, -45.27768325805664, -47.11109924316406, -48.94091796875, -50.77583694458008, -52.619163513183594, -54.48332977294922, -56.314815521240234, -58.103755950927734, -59.823333740234375, -61.56585693359375, -63.30061340332031, -64.97642517089844, -66.51130676269531, -67.94270324707031, -69.3357925415039, -70.66708374023438, -71.93402099609375, -73.18978118896484, -74.31753540039062, -75.23255920410156, -75.95966339111328, -76.61920166015625, -77.26768493652344, -77.9359130859375, -78.5946273803711, -79.26289367675781, -79.79534912109375, -80.2015380859375, -80.60335540771484, -81.02714538574219, -81.53772735595703, -82.04193878173828, -82.53047180175781, -83.04158020019531, -83.56088256835938, -84.14714813232422, -84.81393432617188, -85.55133056640625, -86.36656188964844, -87.24837493896484, -88.13751983642578, -88.99240112304688, -89.81124877929688, -90.60415649414062, -91.33631896972656, -92.02133178710938, -92.65229034423828, -93.23121643066406, -93.7853012084961, -94.3372573852539, -94.88070678710938, -95.41710662841797, -95.84803771972656, -96.24778747558594, -96.6568374633789, -97.0496826171875, -97.41992950439453, -97.77052307128906, -97.91485595703125, -97.96147155761719, -97.87026977539062, -97.53227233886719, -96.85386657714844, -95.81302642822266, -94.54135131835938, -93.15739440917969, -91.603271484375, -89.95466613769531, -88.35015106201172, -86.80291748046875, -85.39144134521484, -84.07344055175781, -82.86149597167969, -81.5972671508789, -80.11182403564453, -78.36345672607422, -76.40621948242188, -74.32894134521484, -72.0761489868164, -69.69659423828125, -67.17849731445312, -64.48152160644531, -61.61235046386719, -58.499427795410156, -55.10073471069336, -51.55522918701172, -47.74736785888672, -43.832923889160156, -39.801971435546875, -35.743858337402344, -31.80649757385254, -28.028738021850586, -24.38759994506836, -20.836519241333008, -17.374597549438477, -14.002902030944824, -10.617079734802246, -7.34421443939209, -4.187110424041748, -1.115414023399353, 2.037353277206421, 5.401520252227783, 8.870983123779297, 12.423381805419922, 16.180818557739258, 20.157392501831055, 24.33769989013672, 28.77823829650879, 33.3828010559082, 38.12346267700195, 42.767642974853516, 47.21396255493164, 51.497074127197266, 55.640106201171875, 59.61445999145508, 63.45794677734375, 67.16992950439453, 70.71627044677734, 74.12809753417969, 77.53622436523438, 80.97876739501953, 84.45626068115234, 87.9986572265625, 91.61026000976562, 95.1865234375, 98.68260192871094, 102.08172607421875, 105.37554168701172, 108.5978012084961, 111.72406005859375, 114.72969818115234, 117.6103515625, 120.28418731689453, 122.77039337158203, 125.10813903808594, 127.35991668701172, 129.5707550048828, 131.73577880859375, 133.8451385498047, 135.88076782226562, 137.81361389160156, 139.69195556640625, 141.56494140625, 143.51321411132812, 145.43582153320312, 147.37954711914062, 149.30592346191406, 151.1349334716797, 152.76832580566406, 154.18382263183594, 155.40008544921875, 156.48155212402344, 157.39840698242188, 158.19866943359375, 158.91281127929688, 159.4974822998047, 160.02337646484375, 160.31883239746094, 160.23129272460938, 159.7694854736328, 159.0675506591797, 158.11312866210938, 157.08311462402344, 155.8784942626953, 154.47816467285156, 152.8489990234375, 151.00660705566406, 149.11109924316406, 147.24368286132812, 145.35427856445312, 143.4554443359375, 141.39073181152344, 139.07090759277344, 136.57705688476562, 134.08177185058594, 131.63348388671875, 129.23263549804688, 126.91446685791016, 124.63007354736328, 122.27965545654297, 119.90943145751953, 117.51732635498047, 115.1493148803711, 112.83964538574219, 110.53994750976562, 108.22462463378906, 105.85285949707031, 103.4562759399414, 101.13794708251953, 98.82323455810547, 96.44384765625, 93.94629669189453, 91.3570556640625, 88.73168182373047, 86.05917358398438, 83.26211547851562, 80.25263214111328, 77.10718536376953, 73.97905731201172, 70.96484375, 68.1133804321289, 65.44701385498047, 62.890159606933594, 60.41355514526367, 57.95263671875, 55.59248352050781, 53.20044708251953, 50.7462272644043, 48.28958511352539, 45.88505935668945, 43.5562744140625, 41.31084442138672, 39.171634674072266, 37.183380126953125, 35.43268966674805, 33.800804138183594, 32.20466613769531, 30.66669273376465, 29.13826560974121, 27.552635192871094, 25.97852325439453, 24.294662475585938, 22.565439224243164, 20.874217987060547, 19.30082893371582, 17.831933975219727, 16.408084869384766, 15.044317245483398, 13.766607284545898, 12.577005386352539, 11.475253105163574, 10.496495246887207, 9.622332572937012, 8.769275665283203, 7.927954196929932, 7.112521648406982, 6.322704315185547, 5.563619136810303, 4.829586982727051, 4.113427639007568, 3.3697121143341064, 2.5567243099212646, 1.7977246046066284, 1.0246542692184448, 0.2572939395904541, -0.4480553865432739, -1.1242897510528564, -1.6556841135025024, -2.0525705814361572, -2.214649200439453, -2.169621467590332, -2.035892963409424, -1.9102517366409302, -1.7909443378448486, -1.7162281274795532, -1.651557445526123, -1.5775796175003052, -1.5097243785858154, -1.4451829195022583, -1.3808107376098633, -1.3076838254928589, -1.1195673942565918, -0.8252816200256348, -0.5349398255348206, -0.2580118477344513, 0.009828831069171429, 0.2716897428035736, 0.5349469780921936, 0.7902784943580627, 1.052398443222046, 1.31592857837677, 1.570581078529358, 1.6137370109558105, 1.6365979194641114)
					Z = (-0.8819639682769775, -0.8812801241874695, -0.8804802298545837, -0.8791921734809875, -0.8777425289154053, -0.8758563995361328, -0.873963475227356, -0.8539403676986694, -0.7802032232284546, -0.761174201965332, -0.7716957926750183, -0.8395041823387146, -0.8772552609443665, -0.8344407081604004, -0.788372814655304, -0.80742347240448, -0.8527643084526062, -0.8346409797668457, -0.824370265007019, -0.8134136199951172, -0.7967275381088257, -0.7752544283866882, -0.7417746782302856, -0.6927484273910522, -0.633834719657898, -0.5747796297073364, -0.5113369226455688, -0.4433113932609558, -0.3737497925758362, -0.3008161187171936, -0.2312106341123581, -0.16523221135139465, -0.09990986436605453, -0.033577218651771545, 0.03842548280954361, 0.11881522089242935, 0.1981208622455597, 0.28177762031555176, 0.38250869512557983, 0.5017393231391907, 0.625041127204895, 0.7394312620162964, 0.8367793560028076, 0.9279725551605225, 1.0242633819580078, 1.1258037090301514, 1.2272775173187256, 1.3421326875686646, 1.4506069421768188, 1.561546802520752, 1.6706804037094116, 1.7743912935256958, 1.8515067100524902, 1.9097793102264404, 1.948763370513916, 1.9814872741699219, 2.0233898162841797, 2.07637095451355, 2.132861375808716, 2.17509126663208, 2.2180161476135254, 2.274773597717285, 2.3546767234802246, 2.4420950412750244, 2.5328733921051025, 2.6344215869903564, 2.7358694076538086, 2.8366494178771973, 2.9418249130249023, 3.0620920658111572, 3.1827614307403564, 3.30625581741333, 3.427833080291748, 3.5489587783813477, 3.675954818725586, 3.79117488861084, 3.901960849761963, 4.005653381347656, 4.107993125915527, 4.2158284187316895, 4.328779220581055, 4.445080280303955, 4.569532871246338, 4.690032005310059, 4.799752712249756, 4.872299671173096, 4.92843770980835, 4.985036849975586, 5.057000637054443, 5.13352108001709, 5.213327884674072, 5.295718193054199, 5.3766703605651855, 5.451817512512207, 5.519579887390137, 5.582165718078613, 5.639312267303467, 5.692175388336182, 5.7414727210998535, 5.787367820739746, 5.830183506011963, 5.869744300842285, 5.905086994171143, 5.936120986938477, 5.963281154632568, 5.987318992614746, 6.008669376373291, 6.027542591094971, 6.044310569763184, 6.057828903198242, 6.067286968231201, 6.074985504150391, 6.081448554992676, 6.086737155914307, 6.091536998748779, 6.096595764160156, 6.1012773513793945, 6.104137420654297, 6.10720682144165, 6.105283260345459, 6.09289026260376, 6.069871425628662, 6.042582988739014, 6.011574745178223, 5.977062702178955, 5.945542812347412, 5.9195661544799805, 5.900696277618408, 5.875031471252441, 5.850343227386475, 5.822032451629639, 5.787215232849121, 5.749323844909668, 5.708043575286865, 5.672667503356934, 5.640613079071045, 5.58774995803833, 5.510519504547119, 5.4132280349731445, 5.318352222442627, 5.21757173538208, 5.129578113555908, 5.049224376678467, 4.955892086029053, 4.855170726776123, 4.759181022644043, 4.6699957847595215, 4.590251922607422, 4.507761478424072, 4.420248508453369, 4.298507213592529, 4.1367998123168945, 3.954977035522461, 3.7536673545837402, 3.5393548011779785, 3.336235761642456, 3.13871431350708, 2.941469192504883, 2.743802785873413, 2.5500059127807617, 2.362222671508789, 2.172161817550659, 1.9712504148483276, 1.7527763843536377, 1.5335578918457031, 1.3216581344604492, 1.11974036693573, 0.924856424331665, 0.7362942099571228, 0.548167884349823, 0.3510936498641968, 0.14911779761314392, -0.04503828287124634, -0.22794248163700104, -0.3905165493488312, -0.5209499597549438, -0.6174218654632568, -0.6916936039924622, -0.7458155751228333, -0.7768694162368774, -0.7899942994117737, -0.7893635630607605, -0.7789414525032043, -0.7635725736618042, -0.7461717128753662, -0.7283236980438232, -0.704211413860321, -0.6622856855392456, -0.5993924140930176, -0.5216199159622192, -0.426088809967041, -0.3150973916053772, -0.1974087506532669, -0.07835512608289719, 0.03133012354373932, 0.13556505739688873, 0.24022513628005981, 0.3493971824645996, 0.45991453528404236, 0.5715771317481995, 0.6827750205993652, 0.7940959930419922, 0.907843291759491, 1.025125503540039, 1.148614764213562, 1.2811535596847534, 1.417541265487671, 1.5532535314559937, 1.6824359893798828, 1.7986339330673218, 1.8819316625595093, 1.9304401874542236, 1.9543043375015259, 1.9636659622192383, 1.9588732719421387, 1.916387915611267, 1.8345577716827393, 1.7349056005477905, 1.6296110153198242, 1.5208213329315186, 1.405418872833252, 1.2866981029510498, 1.16438889503479, 1.0394600629806519, 0.9107307195663452, 0.7798608541488647, 0.6512886881828308, 0.5262399315834045, 0.4030036926269531, 0.2815271019935608, 0.16398224234580994, 0.05072043836116791, -0.05590145289897919, -0.15327762067317963, -0.24135041236877441, -0.3243723213672638, -0.3988741636276245, -0.4620799124240875, -0.542617678642273, -0.646656334400177, -0.7287228107452393, -0.7844877243041992, -0.806078314781189, -0.8148013949394226, -0.8116025924682617, -0.8039451837539673, -0.7978506088256836, -0.8006065487861633, -0.8066939115524292, -0.8129818439483643, -0.8215823173522949, -0.8290983438491821, -0.8362972736358643, -0.8428731560707092, -0.8489797711372375, -0.8558133840560913, -0.8626493811607361, -0.8682581186294556, -0.8741699457168579, -0.879978597164154, -0.8859436511993408, -0.8909560441970825, -0.8937748670578003, -0.8939367532730103, -0.8897822499275208, -0.8787690997123718, -0.8593403697013855, -0.8307321667671204, -0.8021003603935242, -0.7821503281593323, -0.7700151801109314, -0.7592963576316833, -0.7492351531982422, -0.7390634417533875, -0.7314242720603943, -0.7212424278259277, -0.7080341577529907, -0.6888165473937988, -0.66937655210495, -0.6463529467582703, -0.6128187775611877, -0.5654257535934448, -0.5037499666213989, -0.42715343832969666, -0.34471648931503296, -0.25006303191185, -0.14578062295913696, -0.03818090260028839, 0.0759134441614151, 0.21288788318634033, 0.35622480511665344, 0.515775203704834, 0.6532223224639893, 0.7738814949989319, 0.8932506442070007, 1.0421302318572998, 1.2146294116973877, 1.385721206665039, 1.5515326261520386, 1.7406084537506104, 1.9566478729248047, 2.214561700820923, 2.5135207176208496, 2.8274102210998535, 3.160696268081665, 3.501220941543579, 3.8431997299194336, 4.200472354888916, 4.574350357055664, 4.894090175628662, 5.0936360359191895, 5.216364860534668, 5.390469074249268, 5.586197853088379, 5.784314155578613, 5.985593795776367, 6.1828765869140625, 6.373883247375488, 6.556783199310303, 6.733740329742432, 6.906088829040527, 7.071183204650879, 7.233142852783203, 7.3868231773376465, 7.530625343322754, 7.665377616882324, 7.797634124755859, 7.930730819702148, 8.059279441833496, 8.180848121643066, 8.296680450439453, 8.406368255615234, 8.505520820617676, 8.589674949645996, 8.655287742614746, 8.70052719116211, 8.722027778625488, 8.70865249633789, 8.652679443359375, 8.560135841369629, 8.443024635314941, 8.307100296020508, 8.149582862854004, 7.971302032470703, 7.780361175537109, 7.575259685516357, 7.355491638183594, 7.124767303466797, 6.885737419128418, 6.638427257537842, 6.395895481109619, 6.166090488433838, 5.953654766082764, 5.738729953765869, 5.529703140258789, 5.342148303985596, 5.179572105407715, 5.024766445159912, 4.851255416870117, 4.646117210388184, 4.430662155151367, 4.217848777770996, 4.0131144523620605, 3.7878849506378174, 3.559556245803833, 3.3353841304779053, 3.1190574169158936, 2.9180359840393066, 2.7267343997955322, 2.5381720066070557, 2.3227102756500244, 2.0959630012512207, 1.8809078931808472, 1.6847819089889526, 1.495663046836853, 1.3055880069732666, 1.1171165704727173, 0.9520562887191772, 0.8042331337928772, 0.681337833404541, 0.5795820951461792, 0.5025584101676941, 0.46133852005004883, 0.4328932762145996, 0.3858243227005005, 0.3234015107154846, 0.2624247372150421, 0.19709435105323792, 0.15313704311847687, 0.11826862394809723, 0.08544927090406418, 0.04712279140949249, 0.0015682056546211243, -0.026410788297653198, -0.03486667573451996, -0.027389593422412872, -0.0065015703439712524, 0.0059362053871154785, 0.002570606768131256, -0.006264716386795044, -0.013282939791679382, -0.018584154546260834, -0.022372961044311523, -0.0232115238904953, -0.02133723348379135, -0.030498042702674866, -0.057736508548259735, -0.09805164486169815, -0.13833804428577423, -0.17615404725074768, -0.21290594339370728, -0.24737012386322021, -0.26589956879615784, -0.2773838937282562, -0.2822290062904358, -0.2861996591091156, -0.2940981388092041, -0.2990141808986664, -0.3035801351070404, -0.3050832152366638, -0.3049992024898529, -0.30373987555503845, -0.3003387153148651, -0.29614898562431335, -0.2985635995864868, -0.31389492750167847, -0.34401920437812805, -0.3844596743583679, -0.4300534129142761, -0.4741150140762329, -0.5105020999908447, -0.5354415774345398, -0.552415132522583, -0.5600359439849854, -0.5654557943344116, -0.5681073665618896, -0.5666967630386353, -0.5622239112854004, -0.5597591996192932, -0.5650179386138916, -0.579081654548645, -0.5969113707542419, -0.6101321578025818, -0.622231125831604, -0.6340838074684143, -0.6458472609519958, -0.657522976398468, -0.6685013771057129, -0.6801296472549438, -0.6912583708763123, -0.7032382488250732, -0.7155491709709167, -0.7265709042549133, -0.7348979115486145, -0.7445682287216187, -0.7536845207214355, -0.761847198009491, -0.7706142067909241, -0.7806366682052612, -0.7898868322372437, -0.7978246212005615, -0.8051745295524597, -0.8114349842071533, -0.8171375393867493, -0.821597158908844, -0.8264663219451904, -0.8312869071960449, -0.8363567590713501, -0.8399266004562378, -0.8434712290763855, -0.8482410907745361, -0.8517320156097412, -0.8557907342910767, -0.8605977296829224, -0.864855170249939, -0.8680832982063293, -0.869952917098999, -0.8720065951347351, -0.8741781711578369, -0.8759156465530396, -0.8775535821914673, -0.8793764710426331, -0.8817098140716553, -0.8832718729972839, -0.8847836852073669, -0.8870889544487, -0.8891378045082092, -0.8896875977516174, -0.8895387649536133, -0.8889559507369995, -0.8881706595420837, -0.8874912261962891, -0.8865614533424377, -0.8851791024208069, -0.8832001686096191, -0.8809881806373596, -0.8781297206878662, -0.8746054172515869, -0.8718098402023315, -0.8688086271286011)
					Y = (0.24426956474781036, 0.4990326166152954, 0.819128692150116, 1.153626799583435, 1.5026447772979736, 1.8859440088272095, 2.373248815536499, 2.968236207962036, 3.61586332321167, 4.355114459991455, 5.173743724822998, 6.038478374481201, 6.951005458831787, 7.899267673492432, 8.918261528015137, 10.051026344299316, 11.312947273254395, 12.90755558013916, 14.871548652648926, 17.198680877685547, 19.908754348754883, 22.898487091064453, 26.10063934326172, 29.397844314575195, 32.636375427246094, 35.74137878417969, 38.707183837890625, 41.484439849853516, 44.07951736450195, 46.60736846923828, 49.15201187133789, 51.65317916870117, 54.06341552734375, 56.4561882019043, 58.852813720703125, 61.29132080078125, 63.84211730957031, 66.49172973632812, 69.07376861572266, 71.62057495117188, 74.08918762207031, 76.49169158935547, 78.78299713134766, 80.95753479003906, 83.06936645507812, 85.1029281616211, 87.12429809570312, 89.12969970703125, 91.03314971923828, 92.87902069091797, 94.55635070800781, 96.09061431884766, 97.33863830566406, 98.26770782470703, 98.91900634765625, 99.34143829345703, 99.79500579833984, 100.22048950195312, 100.46652221679688, 100.50714111328125, 100.43055725097656, 100.3218765258789, 100.27439880371094, 100.24840545654297, 100.22171020507812, 100.19712829589844, 100.16851043701172, 100.09687042236328, 100.02641296386719, 99.95970153808594, 99.8285140991211, 99.58265686035156, 99.25724792480469, 98.94861602783203, 98.7610855102539, 98.6032943725586, 98.43841552734375, 98.27819061279297, 98.11662292480469, 97.93367004394531, 97.72758483886719, 97.4378662109375, 97.10028839111328, 96.74153900146484, 96.36189270019531, 95.95005798339844, 95.50723266601562, 95.01679229736328, 94.47090911865234, 93.8803482055664, 93.24833679199219, 92.5796127319336, 91.90768432617188, 91.14244079589844, 90.31917572021484, 89.48597717285156, 88.64861297607422, 87.82418823242188, 87.01628875732422, 86.22871398925781, 85.56230163574219, 84.96900177001953, 84.57625579833984, 84.36016082763672, 84.20700073242188, 84.08193969726562, 83.97764587402344, 83.87611389160156, 83.92423248291016, 84.14193725585938, 84.41809844970703, 84.70330810546875, 85.00025939941406, 85.29436492919922, 85.68895721435547, 86.27693176269531, 87.06804656982422, 88.0323715209961, 89.15747833251953, 90.61774444580078, 92.43035125732422, 94.46464538574219, 96.57106018066406, 98.82080078125, 101.0973129272461, 103.33666229248047, 105.50848388671875, 107.6570053100586, 109.891357421875, 112.15137481689453, 114.42011260986328, 116.68489074707031, 118.90473175048828, 121.11170959472656, 123.25049591064453, 125.32403564453125, 127.53121185302734, 129.89825439453125, 132.2855987548828, 134.6158905029297, 136.92697143554688, 139.15802001953125, 141.3134002685547, 143.4351806640625, 145.5569305419922, 147.65158081054688, 149.7096405029297, 151.71261596679688, 153.65261840820312, 155.51608276367188, 157.31924438476562, 159.11117553710938, 160.7533416748047, 162.2732696533203, 163.74002075195312, 165.19287109375, 166.6624298095703, 168.05679321289062, 169.36721801757812, 170.6645965576172, 171.94862365722656, 173.23680114746094, 174.46946716308594, 175.60227966308594, 176.68606567382812, 177.7667236328125, 178.8304901123047, 179.89537048339844, 180.9698944091797, 182.1023712158203, 183.38099670410156, 184.83396911621094, 186.4405059814453, 188.17733764648438, 190.03277587890625, 191.99041748046875, 193.9769287109375, 195.76626586914062, 197.2998809814453, 198.64427185058594, 199.84442138671875, 201.0236358642578, 202.19769287109375, 203.31591796875, 204.40118408203125, 205.4407196044922, 206.46392822265625, 207.45944213867188, 208.4150848388672, 209.36993408203125, 210.36520385742188, 211.35165405273438, 212.19497680664062, 212.80360412597656, 212.99081420898438, 212.8595428466797, 212.59893798828125, 212.30372619628906, 211.88113403320312, 211.2249298095703, 210.27505493164062, 209.16802978515625, 207.95042419433594, 206.6737060546875, 205.3536376953125, 203.98805236816406, 202.4827117919922, 200.79603576660156, 198.84075927734375, 196.52613830566406, 193.94662475585938, 191.1892852783203, 188.33187866210938, 185.4967803955078, 182.7758331298828, 180.3319091796875, 178.08534240722656, 175.87472534179688, 173.57350158691406, 171.1052703857422, 168.51658630371094, 165.9554443359375, 163.4188995361328, 160.97314453125, 158.5869903564453, 156.26071166992188, 154.0010223388672, 151.86273193359375, 149.84214782714844, 147.8561553955078, 145.87100219726562, 143.8812255859375, 141.9394073486328, 140.04071044921875, 138.22088623046875, 136.38259887695312, 134.54953002929688, 132.78271484375, 130.9574737548828, 129.08750915527344, 127.25975799560547, 125.4315185546875, 123.64933013916016, 121.882080078125, 120.05531311035156, 118.18463134765625, 116.25498962402344, 114.34269714355469, 112.4908447265625, 110.6985092163086, 108.94164276123047, 107.16153717041016, 105.32911682128906, 103.44462585449219, 101.6138916015625, 99.76459503173828, 97.91300964355469, 96.16510772705078, 94.41311645507812, 92.58258056640625, 90.4946517944336, 88.02781677246094, 85.19628143310547, 82.00907135009766, 78.48986053466797, 74.69635772705078, 70.86166381835938, 67.15168762207031, 63.572113037109375, 60.10674285888672, 56.803375244140625, 53.6189079284668, 50.549373626708984, 47.61164474487305, 44.77302932739258, 41.92876434326172, 39.06986999511719, 36.2219352722168, 33.32758331298828, 30.242610931396484, 26.973918914794922, 23.662368774414062, 20.41046714782715, 17.231449127197266, 14.126823425292969, 11.168815612792969, 8.347853660583496, 5.706920623779297, 3.3018741607666016, 1.2335699796676636, -0.5328974723815918, -2.043576717376709, -3.110535144805908, -3.740983486175537, -4.098943710327148, -4.4906511306762695, -4.8972249031066895, -5.2530198097229, -5.577995777130127, -5.934023857116699, -6.255759239196777, -6.630918025970459, -7.013139724731445, -7.412384033203125, -7.725191116333008, -8.017799377441406, -8.335323333740234, -8.662646293640137, -9.008383750915527, -9.383427619934082, -9.718378067016602, -10.013775825500488, -10.301630973815918, -10.562592506408691, -10.815587997436523, -11.065951347351074, -11.301687240600586, -11.448249816894531, -11.537090301513672, -11.524465560913086, -11.443005561828613, -11.383244514465332, -11.339241981506348, -11.295818328857422, -11.257658004760742, -11.223909378051758, -11.219079971313477, -11.304905891418457, -11.446738243103027, -11.616390228271484, -11.812542915344238, -12.02774429321289, -12.266841888427734, -12.534515380859375, -12.815123558044434, -13.006359100341797, -13.117430686950684, -13.182148933410645, -13.210461616516113, -13.223767280578613, -13.236565589904785, -13.257308006286621, -13.364906311035156, -13.60283374786377, -13.906349182128906, -14.247852325439453, -14.630463600158691, -15.034890174865723, -15.458684921264648, -15.909191131591797, -16.372478485107422, -16.83634376525879, -17.298728942871094, -17.954330444335938, -18.74985694885254, -19.579227447509766, -20.42566680908203, -21.43193817138672, -22.800357818603516, -24.44293212890625, -26.13048553466797, -27.82823944091797, -29.55722427368164, -31.477741241455078, -33.487709045410156, -35.511478424072266, -37.493263244628906, -39.456016540527344, -41.433685302734375, -43.504295349121094, -45.86669158935547, -48.45779037475586, -51.14822006225586, -53.83092498779297, -56.52829360961914, -59.291015625, -62.107452392578125, -64.86852264404297, -67.60960388183594, -70.36067199707031, -73.03939819335938, -75.66210174560547, -78.23661041259766, -80.80587005615234, -83.38500213623047, -85.95026397705078, -88.392578125, -90.68785095214844, -92.96864318847656, -95.2093505859375, -97.35236358642578, -99.36150360107422, -101.18042755126953, -102.92134857177734, -104.60369110107422, -106.27859497070312, -107.93692779541016, -109.50454711914062, -110.95790100097656, -112.26480102539062, -113.4476318359375, -114.55032348632812, -115.59841918945312, -116.59353637695312, -117.56787872314453, -118.43424987792969, -119.07018280029297, -119.529541015625, -119.9432144165039, -120.33118438720703, -120.70291137695312, -121.06876373291016, -121.57264709472656, -122.14915466308594, -122.72602844238281, -123.31329345703125, -123.84371948242188, -124.38484191894531, -124.94699096679688, -125.50639343261719, -126.06773376464844, -126.62725067138672, -127.21639251708984, -127.76771545410156, -128.14712524414062, -128.24986267089844, -128.0001220703125, -127.45743560791016, -126.70941925048828, -125.85266876220703, -124.98062133789062, -124.1561508178711, -123.36287689208984, -122.56819915771484, -121.65084838867188, -120.66740417480469, -119.70370483398438, -118.76301574707031, -117.76809692382812, -116.55887603759766, -115.09596252441406, -113.52935028076172, -111.99527740478516, -110.50000762939453, -108.9967041015625, -107.39553833007812, -105.7052001953125, -103.86796569824219, -101.89085388183594, -99.83897399902344, -97.75530242919922, -95.71993255615234, -93.73746490478516, -91.82310485839844, -89.95047760009766, -88.10604858398438, -86.26592254638672, -84.39051818847656, -82.42990112304688, -80.4601821899414, -78.54206085205078, -76.67953491210938, -74.87965393066406, -73.13782501220703, -71.447998046875, -69.79700469970703, -68.07174682617188, -66.20356750488281, -64.17756652832031, -62.02452850341797, -59.78955841064453, -57.599979400634766, -55.49079895019531, -53.38170623779297, -51.32799530029297, -49.24906539916992, -47.25999069213867, -45.2713508605957, -43.23389434814453, -41.17817687988281, -39.17205047607422, -37.22850799560547, -35.21967697143555, -33.25495910644531, -31.328039169311523, -29.30510902404785, -27.14748191833496, -24.93663215637207, -22.68917465209961, -20.511201858520508, -18.440406799316406, -16.442750930786133, -14.476696014404297, -12.49740982055664, -10.538829803466797, -8.549440383911133, -6.5612688064575195, -4.653802394866943, -2.830416679382324, -1.0931862592697144)
					Xmap = [-215.266 -214.266 -213.266 -212.266 -211.266 -210.266 -209.266 -208.266 -207.266 -206.266 -205.266 -204.266 -203.266 -202.266 -201.266 -200.266 -199.266 -198.266 -197.266 -196.266 -195.266 -194.266 -193.266 -192.266 -191.266 -190.266 -189.266 -188.266 -187.266 -186.266 -185.266 -184.266 -183.266 -182.266 -181.266 -180.266 -179.266 -178.266 -177.266 -176.266 -175.266 -174.266 -173.266 -172.266 -171.266 -170.266 -169.266 -168.266 -167.266 -166.266 -165.266 -164.266 -163.266 -162.266 -161.266 -160.266 -159.266 -158.266 -157.266 -156.266 -155.266 -154.266 -153.266 -152.266 -151.266 -150.266 -149.266 -148.266 -147.266 -146.266 -145.266 -144.266 -143.266 -142.266 -141.266 -140.266 -139.266 -138.266 -137.266 -136.266 -135.266 -134.266 -133.266 -132.266 -131.266 -130.266 -129.266 -128.266 -127.266 -126.266 -125.266 -124.266 -123.266 -122.266 -121.266 -120.266 -119.266 -118.266 -117.266 -116.266 -115.266 -114.266 -113.266 -112.266 -111.266 -110.266 -109.266 -108.266 -107.266 -106.266 -105.266 -104.266 -103.266 -102.266 -101.266 -100.266  -99.266  -98.266  -97.266  -96.266  -95.266  -94.266  -93.266  -92.266  -91.266  -90.266  -89.266  -88.266  -87.266  -86.266  -85.266  -84.266  -83.266  -82.266  -81.266  -80.266  -79.266  -78.266  -77.266  -76.266  -75.266  -74.266  -73.266  -72.266  -71.266  -70.266  -69.266  -68.266  -67.266  -66.266  -65.266  -64.266  -63.266  -62.266  -61.266  -60.266  -59.266  -58.266  -57.266  -56.266  -55.266  -54.266  -53.266  -52.266  -51.266  -50.266  -49.266  -48.266  -47.266  -46.266  -45.266  -44.266  -43.266  -42.266  -41.266  -40.266  -39.266  -38.266  -37.266  -36.266  -35.266  -34.266  -33.266  -32.266  -31.266  -30.266  -29.266  -28.266  -27.266  -26.266  -25.266  -24.266  -23.266  -22.266  -21.266  -20.266  -19.266  -18.266  -17.266  -16.266  -15.266  -14.266  -13.266  -12.266  -11.266  -10.266   -9.266   -8.266   -7.266   -6.266   -5.266   -4.266   -3.266   -2.266   -1.266   -0.266    0.734    1.734    2.734    3.734    4.734    5.734
					    6.734    7.734    8.734    9.734   10.734   11.734   12.734   13.734   14.734   15.734   16.734   17.734   18.734   19.734   20.734   21.734   22.734   23.734   24.734   25.734   26.734   27.734   28.734   29.734   30.734   31.734   32.734   33.734   34.734   35.734   36.734   37.734   38.734   39.734   40.734   41.734   42.734   43.734   44.734   45.734   46.734   47.734   48.734   49.734   50.734   51.734   52.734   53.734   54.734   55.734   56.734   57.734   58.734   59.734   60.734   61.734   62.734   63.734   64.734   65.734   66.734   67.734   68.734   69.734   70.734   71.734   72.734   73.734   74.734   75.734   76.734   77.734   78.734   79.734   80.734   81.734   82.734   83.734   84.734   85.734   86.734   87.734   88.734   89.734   90.734   91.734   92.734   93.734   94.734   95.734   96.734   97.734   98.734   99.734  100.734  101.734  102.734  103.734  104.734  105.734  106.734  107.734  108.734  109.734  110.734  111.734  112.734  113.734  114.734  115.734  116.734  117.734  118.734  119.734  120.734  121.734  122.734  123.734  124.734  125.734  126.734  127.734  128.734  129.734  130.734  131.734  132.734  133.734  134.734  135.734  136.734  137.734  138.734  139.734  140.734  141.734  142.734  143.734  144.734  145.734  146.734  147.734  148.734  149.734  150.734  151.734  152.734  153.734  154.734  155.734  156.734  157.734  158.734  159.734  160.734  161.734  162.734  163.734  164.734  165.734  166.734  167.734  168.734  169.734  170.734  171.734  172.734  173.734  174.734  175.734  176.734  177.734  178.734  179.734  180.734  181.734  182.734  183.734  184.734  185.734  186.734  187.734  188.734  189.734  190.734  191.734  192.734  193.734  194.734  195.734  196.734  197.734  198.734  199.734  200.734  201.734  202.734  203.734  204.734  205.734  206.734  207.734  208.734  209.734]
					Ymap = [-1.782e+02 -1.772e+02 -1.762e+02 -1.752e+02 -1.742e+02 -1.732e+02 -1.722e+02 -1.712e+02 -1.702e+02 -1.692e+02 -1.682e+02 -1.672e+02 -1.662e+02 -1.652e+02 -1.642e+02 -1.632e+02 -1.622e+02 -1.612e+02 -1.602e+02 -1.592e+02 -1.582e+02 -1.572e+02 -1.562e+02 -1.552e+02 -1.542e+02 -1.532e+02 -1.522e+02 -1.512e+02 -1.502e+02 -1.492e+02 -1.482e+02 -1.472e+02 -1.462e+02 -1.452e+02 -1.442e+02 -1.432e+02 -1.422e+02 -1.412e+02 -1.402e+02 -1.392e+02 -1.382e+02 -1.372e+02 -1.362e+02 -1.352e+02 -1.342e+02 -1.332e+02 -1.322e+02 -1.312e+02 -1.302e+02 -1.292e+02 -1.282e+02 -1.272e+02 -1.262e+02 -1.252e+02 -1.242e+02 -1.232e+02 -1.222e+02 -1.212e+02 -1.202e+02 -1.192e+02 -1.182e+02 -1.172e+02 -1.162e+02 -1.152e+02 -1.142e+02 -1.132e+02 -1.122e+02 -1.112e+02 -1.102e+02 -1.092e+02 -1.082e+02 -1.072e+02 -1.062e+02 -1.052e+02 -1.042e+02 -1.032e+02 -1.022e+02 -1.012e+02 -1.002e+02 -9.925e+01 -9.825e+01 -9.725e+01 -9.625e+01 -9.525e+01 -9.425e+01 -9.325e+01 -9.225e+01 -9.125e+01 -9.025e+01 -8.925e+01 -8.825e+01 -8.725e+01 -8.625e+01 -8.525e+01 -8.425e+01 -8.325e+01 -8.225e+01 -8.125e+01 -8.025e+01 -7.925e+01 -7.825e+01 -7.725e+01 -7.625e+01 -7.525e+01 -7.425e+01 -7.325e+01 -7.225e+01 -7.125e+01 -7.025e+01 -6.925e+01 -6.825e+01 -6.725e+01 -6.625e+01 -6.525e+01 -6.425e+01 -6.325e+01 -6.225e+01 -6.125e+01 -6.025e+01 -5.925e+01 -5.825e+01 -5.725e+01 -5.625e+01 -5.525e+01 -5.425e+01 -5.325e+01 -5.225e+01 -5.125e+01 -5.025e+01 -4.925e+01 -4.825e+01 -4.725e+01 -4.625e+01 -4.525e+01 -4.425e+01 -4.325e+01 -4.225e+01 -4.125e+01 -4.025e+01 -3.925e+01 -3.825e+01 -3.725e+01 -3.625e+01 -3.525e+01 -3.425e+01 -3.325e+01 -3.225e+01 -3.125e+01 -3.025e+01 -2.925e+01 -2.825e+01 -2.725e+01 -2.625e+01 -2.525e+01 -2.425e+01 -2.325e+01 -2.225e+01 -2.125e+01 -2.025e+01 -1.925e+01 -1.825e+01 -1.725e+01 -1.625e+01 -1.525e+01 -1.425e+01 -1.325e+01 -1.225e+01 -1.125e+01 -1.025e+01 -9.250e+00 -8.250e+00 -7.250e+00 -6.250e+00 -5.250e+00 -4.250e+00 -3.250e+00 -2.250e+00 -1.250e+00 -2.499e-01  7.501e-01  1.750e+00
					  2.750e+00  3.750e+00  4.750e+00  5.750e+00  6.750e+00  7.750e+00  8.750e+00  9.750e+00  1.075e+01  1.175e+01  1.275e+01  1.375e+01  1.475e+01  1.575e+01  1.675e+01  1.775e+01  1.875e+01  1.975e+01  2.075e+01  2.175e+01  2.275e+01  2.375e+01  2.475e+01  2.575e+01  2.675e+01  2.775e+01  2.875e+01  2.975e+01  3.075e+01  3.175e+01  3.275e+01  3.375e+01  3.475e+01  3.575e+01  3.675e+01  3.775e+01  3.875e+01  3.975e+01  4.075e+01  4.175e+01  4.275e+01  4.375e+01  4.475e+01  4.575e+01  4.675e+01  4.775e+01  4.875e+01  4.975e+01  5.075e+01  5.175e+01  5.275e+01  5.375e+01  5.475e+01  5.575e+01  5.675e+01  5.775e+01  5.875e+01  5.975e+01  6.075e+01  6.175e+01  6.275e+01  6.375e+01  6.475e+01  6.575e+01  6.675e+01  6.775e+01  6.875e+01  6.975e+01  7.075e+01  7.175e+01  7.275e+01  7.375e+01  7.475e+01  7.575e+01  7.675e+01  7.775e+01  7.875e+01  7.975e+01  8.075e+01  8.175e+01  8.275e+01  8.375e+01  8.475e+01  8.575e+01  8.675e+01  8.775e+01  8.875e+01  8.975e+01  9.075e+01  9.175e+01  9.275e+01  9.375e+01  9.475e+01  9.575e+01  9.675e+01  9.775e+01  9.875e+01  9.975e+01  1.008e+02  1.018e+02  1.028e+02  1.038e+02  1.048e+02  1.058e+02  1.068e+02  1.078e+02  1.088e+02  1.098e+02  1.108e+02  1.118e+02  1.128e+02  1.138e+02  1.148e+02  1.158e+02  1.168e+02  1.178e+02  1.188e+02  1.198e+02  1.208e+02  1.218e+02  1.228e+02  1.238e+02  1.248e+02  1.258e+02  1.268e+02  1.278e+02  1.288e+02  1.298e+02  1.308e+02  1.318e+02  1.328e+02  1.338e+02  1.348e+02  1.358e+02  1.368e+02  1.378e+02  1.388e+02  1.398e+02  1.408e+02  1.418e+02  1.428e+02  1.438e+02  1.448e+02  1.458e+02  1.468e+02  1.478e+02  1.488e+02  1.498e+02  1.508e+02  1.518e+02  1.528e+02  1.538e+02  1.548e+02  1.558e+02  1.568e+02  1.578e+02  1.588e+02  1.598e+02  1.608e+02  1.618e+02  1.628e+02  1.638e+02  1.648e+02  1.658e+02  1.668e+02  1.678e+02  1.688e+02  1.698e+02  1.708e+02  1.718e+02  1.728e+02  1.738e+02  1.748e+02  1.758e+02  1.768e+02  1.778e+02  1.788e+02  1.798e+02  1.808e+02  1.818e+02  1.828e+02
					  1.838e+02  1.848e+02  1.858e+02  1.868e+02  1.878e+02  1.888e+02  1.898e+02  1.908e+02  1.918e+02  1.928e+02  1.938e+02  1.948e+02  1.958e+02  1.968e+02  1.978e+02  1.988e+02  1.998e+02  2.008e+02  2.018e+02  2.028e+02  2.038e+02  2.048e+02  2.058e+02  2.068e+02  2.078e+02  2.088e+02  2.098e+02  2.108e+02  2.118e+02  2.128e+02  2.138e+02  2.148e+02  2.158e+02  2.168e+02  2.178e+02  2.188e+02  2.198e+02  2.208e+02  2.218e+02  2.228e+02  2.238e+02  2.248e+02  2.258e+02  2.268e+02  2.278e+02  2.288e+02  2.298e+02  2.308e+02  2.318e+02  2.328e+02  2.338e+02  2.348e+02  2.358e+02  2.368e+02  2.378e+02  2.388e+02  2.398e+02  2.408e+02  2.418e+02  2.428e+02  2.438e+02  2.448e+02  2.458e+02  2.468e+02  2.478e+02  2.488e+02  2.498e+02  2.508e+02  2.518e+02  2.528e+02  2.538e+02  2.548e+02  2.558e+02  2.568e+02  2.578e+02  2.588e+02  2.598e+02  2.608e+02  2.618e+02  2.628e+02]
					Zmap = [-5.894 -4.894 -3.894 -2.894 -1.894 -0.894  0.106  1.106  2.106  3.106  4.106  5.106  6.106  7.106  8.106  9.106 10.106 11.106 12.106 13.106]
					point_map = [[[291 291 291 ... 291 291 291]
					  [291 291 291 ... 291 291 291]
					  [291 291 291 ... 291 291 291]
					  ...
					  [161 161 161 ... 161 161 161]
					  [161 161 161 ... 161 161 161]
					  [161 161 161 ... 161 161 161]]
					
					 [[291 291 291 ... 291 291 291]
					  [291 291 291 ... 291 291 291]
					  [291 291 291 ... 291 291 291]
					  ...
					  [161 161 161 ... 161 161 161]
					  [161 161 161 ... 161 161 161]
					  [162 162 162 ... 161 161 161]]
					
					 [[291 291 291 ... 292 292 292]
					  [291 291 291 ... 291 292 292]
					  [291 291 291 ... 291 291 291]
					  ...
					  [162 162 161 ... 161 161 161]
					  [162 162 162 ... 161 161 161]
					  [162 162 162 ... 161 161 161]]
					
					 ...
					
					 [[395 395 395 ... 395 395 395]
					  [395 395 395 ... 395 395 395]
					  [395 395 395 ... 395 395 395]
					  ...
					  [210 210 210 ... 210 210 210]
					  [210 210 210 ... 210 210 210]
					  [210 210 210 ... 210 210 210]]
					
					 [[395 395 395 ... 395 395 395]
					  [395 395 395 ... 395 395 395]
					  [395 395 395 ... 395 395 395]
					  ...
					  [210 210 210 ... 210 210 210]
					  [210 210 210 ... 210 210 210]
					  [210 210 210 ... 210 210 210]]
					
					 [[395 395 395 ... 395 395 395]
					  [395 395 395 ... 395 395 395]
					  [394 394 394 ... 394 394 394]
					  ...
					  [210 210 210 ... 210 210 210]
					  [210 210 210 ... 210 210 210]
					  [210 210 210 ... 210 210 210]]]
					res = 1
					min_point = [-215.266 -178.250   -5.894]
					max_point = [ 209.734  262.750   13.106]
				X = [-215.266 -215.166 -215.066 ...  210.034  210.134  210.234]
				Y = [-178.250 -178.150 -178.050 ...  262.750  262.850  262.950]
				cost_map = [[ 214.381  214.299  214.217 ...  112.184  112.264  112.344]
				 [ 214.324  214.242  214.160 ...  112.124  112.204  112.284]
				 [ 214.267  214.185  214.103 ...  112.064  112.144  112.224]
				 ...
				 [  96.764   96.690   96.616 ...  242.661  242.689  242.717]
				 [  96.831   96.757   96.683 ...  242.757  242.785  242.813]
				 [  96.898   96.824   96.750 ...  242.852  242.881  242.909]]
				res = 0.1
				min_point = [-215.266 -178.250    0.000]
				max_point = [ 210.234  262.950    0.000]
			action_space = Box(3,) 
				dtype = float32
				shape = (3,)
				low = [-1.000 -1.000 -1.000]
				high = [ 1.000  1.000  1.000]
				bounded_below = [ True  True  True]
				bounded_above = [ True  True  True]
				np_random = RandomState(MT19937)
			observation_space = Box(60,) 
				dtype = float32
				shape = (60,)
				low = [-inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf]
				high = [ inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf]
				bounded_below = [False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False]
				bounded_above = [False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False]
				np_random = RandomState(MT19937)
			max_time = 1000
			time = 0
			idle_timeout = 10
			spec = EnvSpec(CarRacing-v1) 
				id = CarRacing-v1
				entry_point = <class 'src.envs.CarRacing.car_racing.CarRacing'> 
					reset = <function CarRacing.reset at 0x7f45e8fc7dd0>
					get_reward = <function CarRacing.get_reward at 0x7f45ea8b4b90>
					step = <function CarRacing.step at 0x7f45e8fd0dd0>
					render = <function CarRacing.render at 0x7f45e8fd0e60>
					observation = <function CarRacing.observation at 0x7f45e8fd0ef0>
					close = <function CarRacing.close at 0x7f45e8fd0f80>
					id = 1
				reward_threshold = None
				nondeterministic = False
				max_episode_steps = None
			verbose = 0
		action_space = Box(3,) 
			dtype = float32
			shape = (3,)
			low = [-1.000 -1.000 -1.000]
			high = [ 1.000  1.000  1.000]
			bounded_below = [ True  True  True]
			bounded_above = [ True  True  True]
			np_random = RandomState(MT19937)
		observation_space = Box(60,) 
			dtype = float32
			shape = (60,)
			low = [-inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf]
			high = [ inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf]
			bounded_below = [False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False]
			bounded_above = [False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False]
			np_random = RandomState(MT19937)
		reward_range = (-inf, inf)
		metadata = {'render.modes': []}
		preprocess = <src.envs.wrappers.RawPreprocess object at 0x7f4569257e10> 
			observation_space = Box(60,) 
				dtype = float32
				shape = (60,)
				low = [-inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf -inf]
				high = [ inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf  inf]
				bounded_below = [False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False]
				bounded_above = [False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False False]
				np_random = RandomState(MT19937)
	state_size = (60,)
	action_size = (3,)
	action_space = Box(3,) 
		dtype = float32
		shape = (3,)
		low = [-1.000 -1.000 -1.000]
		high = [ 1.000  1.000  1.000]
		bounded_below = [ True  True  True]
		bounded_above = [ True  True  True]
		np_random = RandomState(MT19937)
	server_ports = <list len=16>
	conn = <src.utils.multiprocess.TCPClient object at 0x7f4569257950> 
		num_clients = 16
		client_ranks = <list len=16>
		client_ports = <list len=16>
		client_sockets = {9001: <socket.socket fd=76, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 44808), raddr=('127.0.0.1', 9001)>, 9002: <socket.socket fd=77, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 37580), raddr=('127.0.0.1', 9002)>, 9003: <socket.socket fd=78, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 39922), raddr=('127.0.0.1', 9003)>, 9004: <socket.socket fd=79, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 42962), raddr=('127.0.0.1', 9004)>, 9005: <socket.socket fd=86, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 34786), raddr=('127.0.0.1', 9005)>, 9006: <socket.socket fd=88, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 34846), raddr=('127.0.0.1', 9006)>, 9007: <socket.socket fd=89, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 39708), raddr=('127.0.0.1', 9007)>, 9008: <socket.socket fd=90, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 40670), raddr=('127.0.0.1', 9008)>, 9009: <socket.socket fd=91, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 41466), raddr=('127.0.0.1', 9009)>, 9010: <socket.socket fd=92, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 33924), raddr=('127.0.0.1', 9010)>, 9011: <socket.socket fd=93, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 46178), raddr=('127.0.0.1', 9011)>, 9012: <socket.socket fd=94, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 57400), raddr=('127.0.0.1', 9012)>, 9013: <socket.socket fd=172, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 52206), raddr=('127.0.0.1', 9013)>, 9014: <socket.socket fd=173, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 34828), raddr=('127.0.0.1', 9014)>, 9015: <socket.socket fd=174, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 56850), raddr=('127.0.0.1', 9015)>, 9016: <socket.socket fd=177, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 48094), raddr=('127.0.0.1', 9016)>}
	num_envs = 16
	max_steps = 1000,
agent: <src.models.wrappers.ParallelAgent object at 0x7f4569257550> 
	icm = None
	stack = <src.models.wrappers.RawState object at 0x7f4568fd2190> 
		state_size = (60,)
	agent = <src.models.pytorch.agents.sac.SACAgent object at 0x7f4568fd2c90> 
		noise_process = <src.utils.rand.BrownianNoise object at 0x7f4568fd2990> 
			size = (3,)
			dt = 0.2
			action = [ 1.000  0.561  0.553]
			daction_dt = [ 0.934  1.760  0.263]
		discrete = False
		action_size = (3,)
		state_size = (60,)
		config = <src.models.Config object at 0x7f4573a25290> 
			TRIAL_AT = 1000
			SAVE_AT = 10
			REG_LAMBDA = 1e-06
			LEARN_RATE = 0.0001
			DISCOUNT_RATE = 0.99
			ADVANTAGE_DECAY = 0.95
			INPUT_LAYER = 512
			ACTOR_HIDDEN = 256
			CRITIC_HIDDEN = 1024
			EPS_MAX = 1.0
			EPS_MIN = 0.1
			EPS_DECAY = 0.995
			NUM_STEPS = 500
			MAX_BUFFER_SIZE = 100000
			REPLAY_BATCH_SIZE = 32
			TARGET_UPDATE_RATE = 0.0004
			env_name = CarRacing-v1
			rank = 0
			size = 17
			split = 17
			model = sac
			framework = pt
			train_prop = 1.0
			tcp_ports = <list len=17>
			tcp_rank = 0
			num_envs = 1
			nsteps = 500000
			render = False
			trial = False
			icm = False
			rs = False
		stats = <src.utils.logger.Stats object at 0x7f4568fd2850> 
			mean_dict = {}
			sum_dict = {}
		eps = 1.0
		network = SACNetwork(
			  (actor_local): SACActor(
			    (layer1): Linear(in_features=60, out_features=512, bias=True)
			    (layer2): Linear(in_features=512, out_features=256, bias=True)
			    (layer3): Linear(in_features=256, out_features=256, bias=True)
			    (action_mu): Linear(in_features=256, out_features=3, bias=True)
			    (action_sig): Linear(in_features=256, out_features=3, bias=True)
			  )
			  (actor_target): SACActor(
			    (layer1): Linear(in_features=60, out_features=512, bias=True)
			    (layer2): Linear(in_features=512, out_features=256, bias=True)
			    (layer3): Linear(in_features=256, out_features=256, bias=True)
			    (action_mu): Linear(in_features=256, out_features=3, bias=True)
			    (action_sig): Linear(in_features=256, out_features=3, bias=True)
			  )
			  (critic_local): SACCritic(
			    (net_state): Linear(in_features=60, out_features=512, bias=True)
			    (net_action): Linear(in_features=3, out_features=512, bias=True)
			    (net_layer1): Linear(in_features=1024, out_features=1024, bias=True)
			    (net_layer2): Linear(in_features=1024, out_features=1024, bias=True)
			    (q_value): Linear(in_features=1024, out_features=1, bias=True)
			  )
			  (critic_target): SACCritic(
			    (net_state): Linear(in_features=60, out_features=512, bias=True)
			    (net_action): Linear(in_features=3, out_features=512, bias=True)
			    (net_layer1): Linear(in_features=1024, out_features=1024, bias=True)
			    (net_layer2): Linear(in_features=1024, out_features=1024, bias=True)
			    (q_value): Linear(in_features=1024, out_features=1, bias=True)
			  )
			) 
			discrete = False
			training = True
			tau = 0.0004
			name = sac
			stats = <src.utils.logger.Stats object at 0x7f4570056bd0> 
				mean_dict = {}
				sum_dict = {}
			config = <src.models.Config object at 0x7f4573a25290> 
				TRIAL_AT = 1000
				SAVE_AT = 10
				REG_LAMBDA = 1e-06
				LEARN_RATE = 0.0001
				DISCOUNT_RATE = 0.99
				ADVANTAGE_DECAY = 0.95
				INPUT_LAYER = 512
				ACTOR_HIDDEN = 256
				CRITIC_HIDDEN = 1024
				EPS_MAX = 1.0
				EPS_MIN = 0.1
				EPS_DECAY = 0.995
				NUM_STEPS = 500
				MAX_BUFFER_SIZE = 100000
				REPLAY_BATCH_SIZE = 32
				TARGET_UPDATE_RATE = 0.0004
				env_name = CarRacing-v1
				rank = 0
				size = 17
				split = 17
				model = sac
				framework = pt
				train_prop = 1.0
				tcp_ports = <list len=17>
				tcp_rank = 0
				num_envs = 1
				nsteps = 500000
				render = False
				trial = False
				icm = False
				rs = False
			device = cuda
			src = ['class SACActor(torch.nn.Module):\n\tdef __init__(self, state_size, action_size, config, use_discrete=False):\n\t\tsuper().__init__()\n\t\tinput_layer, actor_hidden = config.INPUT_LAYER, config.ACTOR_HIDDEN\n\t\tself.discrete = use_discrete and type(action_size) != tuple\n\t\tself.layer1 = torch.nn.Linear(state_size[-1], input_layer) if len(state_size)!=3 else Conv(state_size, input_layer)\n\t\tself.layer2 = torch.nn.Linear(input_layer, actor_hidden)\n\t\tself.layer3 = torch.nn.Linear(actor_hidden, actor_hidden)\n\t\tself.action_mu = torch.nn.Linear(actor_hidden, action_size[-1])\n\t\tself.action_sig = torch.nn.Linear(actor_hidden, action_size[-1])\n\t\tself.apply(lambda m: torch.nn.init.xavier_normal_(m.weight) if type(m) in [torch.nn.Conv2d, torch.nn.Linear] else None)\n\t\tself.dist = lambda m,s: torch.distributions.Categorical(m.softmax(-1)) if self.discrete else torch.distributions.Normal(m,s)\n\t\t\n\tdef forward(self, state, action=None, sample=True):\n\t\tstate = self.layer1(state).relu()\n\t\tstate = self.layer2(state).relu()\n\t\tstate = self.layer3(state).relu()\n\t\taction_mu = self.action_mu(state)\n\t\taction_sig = self.action_sig(state).clamp(-5,0).exp()\n\t\tdist = torch.distributions.Normal(action_mu, action_sig)\n\t\taction = dist.rsample() if sample else action_mu\n\t\taction_out = gsoftmax(action_mu, hard=False) if self.discrete else action.tanh()\n\t\tlog_prob = torch.log(action_out+1e-6) if self.discrete else dist.log_prob(action)-torch.log(1-action_out.pow(2)+1e-6)\n\t\treturn action_out, log_prob\n', 'class SACCritic(torch.nn.Module):\n\tdef __init__(self, state_size, action_size, config):\n\t\tsuper().__init__()\n\t\tinput_layer, critic_hidden = config.INPUT_LAYER, config.CRITIC_HIDDEN\n\t\tself.net_state = torch.nn.Linear(state_size[-1], input_layer) if len(state_size)!=3 else Conv(state_size, input_layer)\n\t\tself.net_action = torch.nn.Linear(action_size[-1], input_layer)\n\t\tself.net_layer1 = torch.nn.Linear(2*input_layer, critic_hidden)\n\t\tself.net_layer2 = torch.nn.Linear(critic_hidden, critic_hidden)\n\t\tself.q_value = torch.nn.Linear(critic_hidden, 1)\n\t\tself.apply(lambda m: torch.nn.init.xavier_normal_(m.weight) if type(m) in [torch.nn.Conv2d, torch.nn.Linear] else None)\n\n\tdef forward(self, state, action):\n\t\tstate = self.net_state(state).relu()\n\t\tnet_action = self.net_action(action).relu()\n\t\tnet_layer = torch.cat([state, net_action], dim=-1)\n\t\tnet_layer = self.net_layer1(net_layer).relu()\n\t\tnet_layer = self.net_layer2(net_layer).relu()\n\t\tq_value = self.q_value(net_layer)\n\t\treturn q_value\n']
			actor_optimizer = Adam (
			Parameter Group 0
			    amsgrad: False
			    betas: (0.9, 0.999)
			    eps: 1e-08
			    lr: 0.0001
			    weight_decay: 1e-06
			)
			critic_optimizer = Adam (
			Parameter Group 0
			    amsgrad: False
			    betas: (0.9, 0.999)
			    eps: 1e-08
			    lr: 0.0001
			    weight_decay: 1e-06
			)
			alpha_optimizer = Adam (
			Parameter Group 0
			    amsgrad: False
			    betas: (0.9, 0.999)
			    eps: 1e-08
			    lr: 0.0001
			    weight_decay: 0
			)
			target_entropy = -3
		replay_buffer = <src.utils.rand.ReplayBuffer object at 0x7f4568feec50> 
			buffer = deque([], maxlen=100000)
		buffer = []
	noise_process = <src.utils.rand.BrownianNoise object at 0x7f4568feec90> 
		size = (3,)
		dt = 0.2
		action = [ 0.837 -1.000 -0.561]
		daction_dt = [-0.333  0.827  1.425]
	discrete = False
	action_size = (3,)
	state_size = (60,)
	config = <src.models.Config object at 0x7f4573a25290> 
		TRIAL_AT = 1000
		SAVE_AT = 10
		REG_LAMBDA = 1e-06
		LEARN_RATE = 0.0001
		DISCOUNT_RATE = 0.99
		ADVANTAGE_DECAY = 0.95
		INPUT_LAYER = 512
		ACTOR_HIDDEN = 256
		CRITIC_HIDDEN = 1024
		EPS_MAX = 1.0
		EPS_MIN = 0.1
		EPS_DECAY = 0.995
		NUM_STEPS = 500
		MAX_BUFFER_SIZE = 100000
		REPLAY_BATCH_SIZE = 32
		TARGET_UPDATE_RATE = 0.0004
		env_name = CarRacing-v1
		rank = 0
		size = 17
		split = 17
		model = sac
		framework = pt
		train_prop = 1.0
		tcp_ports = <list len=17>
		tcp_rank = 0
		num_envs = 1
		nsteps = 500000
		render = False
		trial = False
		icm = False
		rs = False
	stats = <src.utils.logger.Stats object at 0x7f4568feecd0> 
		mean_dict = {}
		sum_dict = {},
conn: None,

import torch
import numpy as np
from .base import PTACNetwork, PTAgent, PTCritic, Conv, gsoftmax
from src.utils.rand import ReplayBuffer

class SACActor(torch.nn.Module):
	def __init__(self, state_size, action_size, config, use_discrete=False):
		super().__init__()
		input_layer, actor_hidden = config.INPUT_LAYER, config.ACTOR_HIDDEN
		self.discrete = use_discrete and type(action_size) != tuple
		self.layer1 = torch.nn.Linear(state_size[-1], input_layer) if len(state_size)!=3 else Conv(state_size, input_layer)
		self.layer2 = torch.nn.Linear(input_layer, actor_hidden)
		self.layer3 = torch.nn.Linear(actor_hidden, actor_hidden)
		self.action_mu = torch.nn.Linear(actor_hidden, action_size[-1])
		self.action_sig = torch.nn.Linear(actor_hidden, action_size[-1])
		self.apply(lambda m: torch.nn.init.xavier_normal_(m.weight) if type(m) in [torch.nn.Conv2d, torch.nn.Linear] else None)
		self.dist = lambda m,s: torch.distributions.Categorical(m.softmax(-1)) if self.discrete else torch.distributions.Normal(m,s)
		
	def forward(self, state, action=None, sample=True):
		state = self.layer1(state).relu()
		state = self.layer2(state).relu()
		state = self.layer3(state).relu()
		action_mu = self.action_mu(state)
		action_sig = self.action_sig(state).clamp(-5,0).exp()
		dist = torch.distributions.Normal(action_mu, action_sig)
		action = dist.rsample() if sample else action_mu
		action_out = gsoftmax(action_mu, hard=False) if self.discrete else action.tanh()
		log_prob = torch.log(action_out+1e-6) if self.discrete else dist.log_prob(action)-torch.log(1-action_out.pow(2)+1e-6)
		return action_out, log_prob

class SACCritic(torch.nn.Module):
	def __init__(self, state_size, action_size, config):
		super().__init__()
		input_layer, critic_hidden = config.INPUT_LAYER, config.CRITIC_HIDDEN
		self.net_state = torch.nn.Linear(state_size[-1], input_layer) if len(state_size)!=3 else Conv(state_size, input_layer)
		self.net_action = torch.nn.Linear(action_size[-1], input_layer)
		self.net_layer1 = torch.nn.Linear(2*input_layer, critic_hidden)
		self.net_layer2 = torch.nn.Linear(critic_hidden, critic_hidden)
		self.q_value = torch.nn.Linear(critic_hidden, 1)
		self.apply(lambda m: torch.nn.init.xavier_normal_(m.weight) if type(m) in [torch.nn.Conv2d, torch.nn.Linear] else None)

	def forward(self, state, action):
		state = self.net_state(state).relu()
		net_action = self.net_action(action).relu()
		net_layer = torch.cat([state, net_action], dim=-1)
		net_layer = self.net_layer1(net_layer).relu()
		net_layer = self.net_layer2(net_layer).relu()
		q_value = self.q_value(net_layer)
		return q_value

class SACNetwork(PTACNetwork):
	def __init__(self, state_size, action_size, config, actor=SACActor, critic=SACCritic, gpu=True, load=None, name="sac", use_discrete=False):
		self.discrete = use_discrete and critic==SACCritic and type(action_size)!=tuple
		super().__init__(state_size, action_size, config, actor, critic if not self.discrete else lambda s,a,c: PTCritic(s,a,c), gpu=gpu, load=load, name=name)
		self.log_alpha = torch.nn.Parameter(torch.zeros(1, requires_grad=True).to(self.device))
		self.alpha_optimizer = torch.optim.Adam([self.log_alpha], lr=config.LEARN_RATE)
		self.target_entropy = -np.product(action_size)

	def get_action_probs(self, state, action_in=None, grad=False, numpy=False, sample=True):
		with torch.enable_grad() if grad else torch.no_grad():
			action, log_prob = self.actor_local(state.to(self.device), action_in, sample)
			return [x.cpu().numpy() if numpy else x for x in [action, log_prob]]

	def get_q_value(self, state, action, use_target=False, grad=False, numpy=False, probs=False):
		with torch.enable_grad() if grad else torch.no_grad():
			critic = self.critic_local if not use_target else self.critic_target
			q_value = critic(state) if self.discrete else critic(state, action)
			return q_value.cpu().numpy() if numpy else q_value
	
	def optimize(self, states, actions, targets, next_log_probs, dones, config):
		alpha = self.log_alpha.clamp(-5, 0).detach().exp()
		if not self.discrete: next_log_probs = next_log_probs.sum(-1, keepdim=True)
		q_targets = targets - config.DISCOUNT_RATE*alpha*next_log_probs*(1-dones.view(-1,*[1]*(len(targets.shape)-1)))
		q_targets = (actions*q_targets).mean(-1, keepdim=True) if self.discrete else q_targets

		q_values = self.get_q_value(states, actions, grad=True)
		q_values = q_values.gather(-1, actions.argmax(-1, keepdim=True)) if self.discrete else q_values
		critic_loss = (q_values - q_targets.detach()).pow(2).mean()
		self.step(self.critic_optimizer, critic_loss, self.critic_local.parameters())
		self.soft_copy(self.critic_local, self.critic_target)

		actor_action, log_prob = self.actor_local(states)
		q_actions = self.get_q_value(states, actor_action, grad=True)
		q_baseline = q_targets if self.discrete else q_values
		actor_loss = alpha*log_prob - (q_actions - q_baseline.detach())
		actor_loss = actor_action*actor_loss if self.discrete else actor_loss
		self.step(self.actor_optimizer, actor_loss.mean(), self.actor_local.parameters())
		
		log_prob = (actor_action*log_prob).sum(-1) if self.discrete else log_prob
		alpha_loss = -(self.log_alpha * (log_prob.detach() + self.target_entropy)).mean()
		self.step(self.alpha_optimizer, alpha_loss, [self.log_alpha])
		self.stats.mean(critic_loss=critic_loss, actor_loss=actor_loss.mean(), alpha_loss=alpha_loss)

class SACAgent(PTAgent):
	def __init__(self, state_size, action_size, config, gpu=True, load=None):
		super().__init__(state_size, action_size, config, SACNetwork, gpu=gpu, load=load)

	def get_action(self, state, eps=None, sample=True, e_greedy=False):
		action, self.log_prob = self.network.get_action_probs(self.to_tensor(state), numpy=True, sample=sample)
		return action
		
	def train(self, state, action, next_state, reward, done):
		self.buffer.append((state, action, self.log_prob, reward, done))
		if np.any(done[0]) or len(self.buffer) >= self.config.NUM_STEPS:
			states, actions, log_probs, rewards, dones = map(self.to_tensor, zip(*self.buffer))
			self.buffer.clear()	
			states = torch.cat([states, self.to_tensor(next_state).unsqueeze(0)], dim=0)
			next_action, next_log_prob = self.network.get_action_probs(states[-1])
			actions = torch.cat([actions, next_action.unsqueeze(0)], dim=0)
			log_probs = torch.cat([log_probs, next_log_prob.unsqueeze(0)], dim=0)
			values = self.network.get_q_value(states, actions, use_target=True)
			targets = self.compute_gae(values[-1], rewards.unsqueeze(-1), dones.unsqueeze(-1), values[:-1])[0]
			states, actions, targets, next_log_probs, dones = [x.view(x.size(0)*x.size(1), *x.size()[2:]).cpu().numpy() for x in (states[:-1], actions[:-1], targets, log_probs[1:], dones)]
			self.replay_buffer.extend(list(zip(states, actions, targets, next_log_probs, dones)), shuffle=False)	
		if len(self.replay_buffer) > self.config.REPLAY_BATCH_SIZE:
			states, actions, targets, next_log_probs, dones = self.replay_buffer.sample(self.config.REPLAY_BATCH_SIZE, dtype=self.to_tensor)[0]
			self.network.optimize(states, actions, targets, next_log_probs, dones, config=self.config)


Step:       0, Reward:   -10.004 [   0.000], Avg:   -10.004 (1.000) <0-00:00:00> ({'r_t':  -7.00e-05, 'eps':     1.0000, 'eps_e':     1.0000})
Step:    1000, Reward:   -15.854 [   0.000], Avg:   -12.929 (1.000) <0-00:00:36> ({'r_t':  -100.8200, 'eps':     1.0000, 'critic_loss':     2.3853, 'actor_loss':    -0.6801, 'alpha_loss':    -0.1185, 'eps_e':     1.0000})
Step:    2000, Reward:     2.638 [   0.000], Avg:    -7.740 (1.000) <0-00:01:12> ({'r_t':  -173.5801, 'eps':     1.0000, 'critic_loss':     1.9456, 'actor_loss':    -0.6372, 'alpha_loss':    -0.4185, 'eps_e':     1.0000})
Step:    3000, Reward:   -30.340 [   0.000], Avg:   -13.390 (1.000) <0-00:01:47> ({'r_t':  -190.9312, 'eps':     1.0000, 'critic_loss':     1.8541, 'actor_loss':    -0.5971, 'alpha_loss':    -0.7714, 'eps_e':     1.0000})
Step:    4000, Reward:    15.458 [   0.000], Avg:    -7.620 (1.000) <0-00:02:23> ({'r_t':  -150.1924, 'eps':     1.0000, 'critic_loss':     2.8798, 'actor_loss':    -0.5778, 'alpha_loss':    -1.1067, 'eps_e':     1.0000})
Step:    5000, Reward:    -0.394 [   0.000], Avg:    -6.416 (1.000) <0-00:02:59> ({'r_t':  -189.2484, 'eps':     1.0000, 'critic_loss':     5.2951, 'actor_loss':    -0.5760, 'alpha_loss':    -1.4180, 'eps_e':     1.0000})
Step:    6000, Reward:    44.685 [   0.000], Avg:     0.884 (1.000) <0-00:03:34> ({'r_t':   128.2397, 'eps':     1.0000, 'critic_loss':     7.5496, 'actor_loss':    -0.5318, 'alpha_loss':    -1.7280, 'eps_e':     1.0000})
Step:    7000, Reward:    55.271 [   0.000], Avg:     7.682 (1.000) <0-00:04:10> ({'r_t':   373.8091, 'eps':     1.0000, 'critic_loss':     9.9492, 'actor_loss':    -0.4844, 'alpha_loss':    -1.9988, 'eps_e':     1.0000})
Step:    8000, Reward:    49.160 [   0.000], Avg:    12.291 (1.000) <0-00:04:46> ({'r_t':   401.7993, 'eps':     1.0000, 'critic_loss':    11.5924, 'actor_loss':    -0.4557, 'alpha_loss':    -2.2279, 'eps_e':     1.0000})
Step:    9000, Reward:    58.508 [   0.000], Avg:    16.913 (1.000) <0-00:05:21> ({'r_t':   299.4120, 'eps':     1.0000, 'critic_loss':    14.5801, 'actor_loss':    -0.4466, 'alpha_loss':    -2.4052, 'eps_e':     1.0000})
Step:   10000, Reward:    82.313 [   0.000], Avg:    22.858 (1.000) <0-00:06:02> ({'r_t':   378.6858, 'eps':     1.0000, 'critic_loss':    20.5743, 'actor_loss':    -0.4690, 'alpha_loss':    -2.5575, 'eps_e':     1.0000})
Step:   11000, Reward:   194.523 [   0.000], Avg:    37.164 (1.000) <0-00:06:39> ({'r_t':   370.7673, 'eps':     1.0000, 'critic_loss':    24.9188, 'actor_loss':    -0.4755, 'alpha_loss':    -2.7005, 'eps_e':     1.0000})
Step:   12000, Reward:   184.271 [   0.000], Avg:    48.480 (1.000) <0-00:07:17> ({'r_t':   321.7932, 'eps':     1.0000, 'critic_loss':    26.8253, 'actor_loss':    -0.4631, 'alpha_loss':    -2.8559, 'eps_e':     1.0000})
Step:   13000, Reward:   165.496 [   0.000], Avg:    56.838 (1.000) <0-00:07:55> ({'r_t':   342.1511, 'eps':     1.0000, 'critic_loss':    30.3702, 'actor_loss':    -0.5558, 'alpha_loss':    -2.9987, 'eps_e':     1.0000})
Step:   14000, Reward:   129.174 [   0.000], Avg:    61.660 (1.000) <0-00:08:34> ({'r_t':    73.0494, 'eps':     1.0000, 'critic_loss':    33.6966, 'actor_loss':    -0.6051, 'alpha_loss':    -3.2070, 'eps_e':     1.0000})
Step:   15000, Reward:   183.825 [   0.000], Avg:    69.296 (1.000) <0-00:09:14> ({'r_t':   136.5100, 'eps':     1.0000, 'critic_loss':    34.1730, 'actor_loss':    -0.6208, 'alpha_loss':    -3.4692, 'eps_e':     1.0000})
Step:   16000, Reward:   158.916 [   0.000], Avg:    74.567 (1.000) <0-00:09:52> ({'r_t':   337.1843, 'eps':     1.0000, 'critic_loss':    30.2961, 'actor_loss':    -0.6201, 'alpha_loss':    -3.8291, 'eps_e':     1.0000})
Step:   17000, Reward:   171.674 [   0.000], Avg:    79.962 (1.000) <0-00:10:30> ({'r_t':   353.4430, 'eps':     1.0000, 'critic_loss':    29.2648, 'actor_loss':    -0.5872, 'alpha_loss':    -4.1641, 'eps_e':     1.0000})
Step:   18000, Reward:   205.337 [   0.000], Avg:    86.561 (1.000) <0-00:11:36> ({'r_t':   326.1181, 'eps':     1.0000, 'critic_loss':    26.9715, 'actor_loss':    -0.5346, 'alpha_loss':    -4.4117, 'eps_e':     1.0000})
Step:   19000, Reward:   214.929 [   0.000], Avg:    92.979 (1.000) <0-00:12:42> ({'r_t':   284.8025, 'eps':     1.0000, 'critic_loss':    25.3038, 'actor_loss':    -0.4967, 'alpha_loss':    -4.6948, 'eps_e':     1.0000})
Step:   20000, Reward:   195.951 [   0.000], Avg:    97.883 (1.000) <0-00:13:21> ({'r_t':   256.5691, 'eps':     1.0000, 'critic_loss':    24.1770, 'actor_loss':    -0.3478, 'alpha_loss':    -5.1076, 'eps_e':     1.0000})
Step:   21000, Reward:   197.446 [   0.000], Avg:   102.408 (1.000) <0-00:14:27> ({'r_t':   271.2923, 'eps':     1.0000, 'critic_loss':    25.6485, 'actor_loss':    -0.3282, 'alpha_loss':    -5.2352, 'eps_e':     1.0000})
Step:   22000, Reward:   209.303 [   0.000], Avg:   107.056 (1.000) <0-00:15:17> ({'r_t':   233.4721, 'eps':     1.0000, 'critic_loss':    27.2692, 'actor_loss':    -0.2992, 'alpha_loss':    -5.3391, 'eps_e':     1.0000})
Step:   23000, Reward:   154.692 [   0.000], Avg:   109.041 (1.000) <0-00:16:23> ({'r_t':   217.5029, 'eps':     1.0000, 'critic_loss':    25.9206, 'actor_loss':    -0.3022, 'alpha_loss':    -5.6382, 'eps_e':     1.0000})
Step:   24000, Reward:    39.029 [   0.000], Avg:   106.240 (1.000) <0-00:16:59> ({'r_t':   270.5741, 'eps':     1.0000, 'critic_loss':    23.1084, 'actor_loss':    -0.3083, 'alpha_loss':    -5.9523, 'eps_e':     1.0000})
Step:   25000, Reward:   162.220 [   0.000], Avg:   108.393 (1.000) <0-00:17:36> ({'r_t':   366.9348, 'eps':     1.0000, 'critic_loss':    27.1155, 'actor_loss':    -0.3991, 'alpha_loss':    -5.7564, 'eps_e':     1.0000})
Step:   26000, Reward:   223.222 [   0.000], Avg:   112.646 (1.000) <0-00:18:18> ({'r_t':   397.1498, 'eps':     1.0000, 'critic_loss':    23.0095, 'actor_loss':    -0.5158, 'alpha_loss':    -5.4075, 'eps_e':     1.0000})
Step:   27000, Reward:   211.358 [   0.000], Avg:   116.172 (1.000) <0-00:19:24> ({'r_t':   226.5536, 'eps':     1.0000, 'critic_loss':    20.7258, 'actor_loss':    -0.4929, 'alpha_loss':    -5.4313, 'eps_e':     1.0000})
Step:   28000, Reward:   226.335 [   0.000], Avg:   119.970 (1.000) <0-00:20:30> ({'r_t':   252.1792, 'eps':     1.0000, 'critic_loss':    19.2951, 'actor_loss':    -0.4600, 'alpha_loss':    -5.1671, 'eps_e':     1.0000})
Step:   29000, Reward:   196.065 [   0.000], Avg:   122.507 (1.000) <0-00:21:14> ({'r_t':   216.6438, 'eps':     1.0000, 'critic_loss':    18.0404, 'actor_loss':    -0.4886, 'alpha_loss':    -4.6146, 'eps_e':     1.0000})
Step:   30000, Reward:   238.271 [   0.000], Avg:   126.241 (1.000) <0-00:21:52> ({'r_t':   309.0970, 'eps':     1.0000, 'critic_loss':    21.1327, 'actor_loss':    -0.5859, 'alpha_loss':    -3.6820, 'eps_e':     1.0000})
Step:   31000, Reward:   196.977 [   0.000], Avg:   128.452 (1.000) <0-00:22:42> ({'r_t':   365.3305, 'eps':     1.0000, 'critic_loss':    18.1007, 'actor_loss':    -0.5942, 'alpha_loss':    -3.4557, 'eps_e':     1.0000})
Step:   32000, Reward:   199.455 [   0.000], Avg:   130.603 (1.000) <0-00:23:39> ({'r_t':   201.2029, 'eps':     1.0000, 'critic_loss':    14.8170, 'actor_loss':    -0.5000, 'alpha_loss':    -3.9186, 'eps_e':     1.0000})
Step:   33000, Reward:   200.042 [   0.000], Avg:   132.646 (1.000) <0-00:24:36> ({'r_t':   320.1087, 'eps':     1.0000, 'critic_loss':    15.1490, 'actor_loss':    -0.4762, 'alpha_loss':    -4.5100, 'eps_e':     1.0000})
Step:   34000, Reward:    36.590 [   0.000], Avg:   129.901 (1.000) <0-00:25:12> ({'r_t':   153.9317, 'eps':     1.0000, 'critic_loss':    13.6342, 'actor_loss':    -0.4621, 'alpha_loss':    -5.0966, 'eps_e':     1.0000})
Step:   35000, Reward:   225.585 [   0.000], Avg:   132.559 (1.000) <0-00:25:50> ({'r_t':   130.5076, 'eps':     1.0000, 'critic_loss':    13.2853, 'actor_loss':    -0.3522, 'alpha_loss':    -6.1150, 'eps_e':     1.0000})
Step:   36000, Reward:   149.383 [   0.000], Avg:   133.014 (1.000) <0-00:26:56> ({'r_t':   441.8358, 'eps':     1.0000, 'critic_loss':    12.5960, 'actor_loss':    -0.3095, 'alpha_loss':    -5.7935, 'eps_e':     1.0000})
Step:   37000, Reward:   221.665 [   0.000], Avg:   135.347 (1.000) <0-00:28:02> ({'r_t':   275.6255, 'eps':     1.0000, 'critic_loss':    17.7018, 'actor_loss':    -0.3521, 'alpha_loss':    -4.9288, 'eps_e':     1.0000})
Step:   38000, Reward:   199.062 [   0.000], Avg:   136.980 (1.000) <0-00:29:08> ({'r_t':   261.6090, 'eps':     1.0000, 'critic_loss':    22.8137, 'actor_loss':    -0.4034, 'alpha_loss':    -4.3837, 'eps_e':     1.0000})
Step:   39000, Reward:   219.726 [   0.000], Avg:   139.049 (1.000) <0-00:30:14> ({'r_t':   218.1145, 'eps':     1.0000, 'critic_loss':    22.4960, 'actor_loss':    -0.4047, 'alpha_loss':    -4.1110, 'eps_e':     1.0000})
Step:   40000, Reward:   288.482 [   0.000], Avg:   142.694 (1.000) <0-00:31:20> ({'r_t':   310.2348, 'eps':     1.0000, 'critic_loss':    20.9745, 'actor_loss':    -0.4781, 'alpha_loss':    -2.7120, 'eps_e':     1.0000})
Step:   41000, Reward:   298.458 [   0.000], Avg:   146.402 (1.000) <0-00:32:08> ({'r_t':   342.7469, 'eps':     1.0000, 'critic_loss':    20.8405, 'actor_loss':    -0.4927, 'alpha_loss':    -2.5660, 'eps_e':     1.0000})
Step:   42000, Reward:   273.414 [   0.000], Avg:   149.356 (1.000) <0-00:32:55> ({'r_t':   484.0256, 'eps':     1.0000, 'critic_loss':    20.9065, 'actor_loss':    -0.4156, 'alpha_loss':    -2.6656, 'eps_e':     1.0000})
Step:   43000, Reward:   249.867 [   0.000], Avg:   151.641 (1.000) <0-00:33:45> ({'r_t':   574.5208, 'eps':     1.0000, 'critic_loss':    24.6573, 'actor_loss':    -0.5356, 'alpha_loss':    -2.0194, 'eps_e':     1.0000})
Step:   44000, Reward:   282.900 [   0.000], Avg:   154.557 (1.000) <0-00:34:24> ({'r_t':  1066.4932, 'eps':     1.0000, 'critic_loss':    25.2873, 'actor_loss':    -0.6310, 'alpha_loss':     0.3596, 'eps_e':     1.0000})
Step:   45000, Reward:   291.322 [   0.000], Avg:   157.531 (1.000) <0-00:35:04> ({'r_t':   842.0136, 'eps':     1.0000, 'critic_loss':    31.5066, 'actor_loss':    -0.9680, 'alpha_loss':     3.8501, 'eps_e':     1.0000})
Step:   46000, Reward:   286.646 [   0.000], Avg:   160.278 (1.000) <0-00:35:43> ({'r_t':   710.9923, 'eps':     1.0000, 'critic_loss':    32.1312, 'actor_loss':    -1.3824, 'alpha_loss':     4.2716, 'eps_e':     1.0000})
Step:   47000, Reward:   223.599 [   0.000], Avg:   161.597 (1.000) <0-00:36:21> ({'r_t':  1242.2324, 'eps':     1.0000, 'critic_loss':    34.1163, 'actor_loss':    -1.3755, 'alpha_loss':     4.3531, 'eps_e':     1.0000})
Step:   48000, Reward:   216.234 [   0.000], Avg:   162.712 (1.000) <0-00:36:59> ({'r_t':  1032.4999, 'eps':     1.0000, 'critic_loss':    37.8386, 'actor_loss':    -1.2560, 'alpha_loss':     3.6896, 'eps_e':     1.0000})
Step:   49000, Reward:   267.047 [   0.000], Avg:   164.799 (1.000) <0-00:37:37> ({'r_t':  1447.6138, 'eps':     1.0000, 'critic_loss':    39.6532, 'actor_loss':    -1.1349, 'alpha_loss':     3.0555, 'eps_e':     1.0000})
Step:   50000, Reward:   162.785 [   0.000], Avg:   164.759 (1.000) <0-00:38:43> ({'r_t':  1371.6381, 'eps':     1.0000, 'critic_loss':    38.9603, 'actor_loss':    -1.0306, 'alpha_loss':     2.6287, 'eps_e':     1.0000})
Step:   51000, Reward:   300.208 [   0.000], Avg:   167.364 (1.000) <0-00:39:23> ({'r_t':  1326.9916, 'eps':     1.0000, 'critic_loss':    37.4621, 'actor_loss':    -0.8874, 'alpha_loss':     2.0158, 'eps_e':     1.0000})
Step:   52000, Reward:   351.370 [   0.000], Avg:   170.836 (1.000) <0-00:40:03> ({'r_t':  1405.6433, 'eps':     1.0000, 'critic_loss':    34.1762, 'actor_loss':    -0.9688, 'alpha_loss':     1.7392, 'eps_e':     1.0000})
Step:   53000, Reward:   359.670 [   0.000], Avg:   174.333 (1.000) <0-00:40:43> ({'r_t':  1428.3928, 'eps':     1.0000, 'critic_loss':    37.3056, 'actor_loss':    -1.1790, 'alpha_loss':     1.7958, 'eps_e':     1.0000})
Step:   54000, Reward:   334.248 [   0.000], Avg:   177.240 (1.000) <0-00:41:25> ({'r_t':  1368.4782, 'eps':     1.0000, 'critic_loss':    32.5537, 'actor_loss':    -1.2239, 'alpha_loss':     1.5667, 'eps_e':     1.0000})
Step:   55000, Reward:   206.024 [   0.000], Avg:   177.754 (1.000) <0-00:42:03> ({'r_t':  1229.4752, 'eps':     1.0000, 'critic_loss':    27.3226, 'actor_loss':    -1.0476, 'alpha_loss':     1.2916, 'eps_e':     1.0000})
Step:   56000, Reward:   320.931 [   0.000], Avg:   180.266 (1.000) <0-00:42:42> ({'r_t':  1260.6987, 'eps':     1.0000, 'critic_loss':    27.4664, 'actor_loss':    -0.7422, 'alpha_loss':     0.9543, 'eps_e':     1.0000})
Step:   57000, Reward:   330.014 [   0.000], Avg:   182.848 (1.000) <0-00:43:23> ({'r_t':  1086.6405, 'eps':     1.0000, 'critic_loss':    26.6215, 'actor_loss':    -0.6526, 'alpha_loss':     0.8005, 'eps_e':     1.0000})
Step:   58000, Reward:   339.376 [   0.000], Avg:   185.501 (1.000) <0-00:44:03> ({'r_t':   759.4752, 'eps':     1.0000, 'critic_loss':    24.7356, 'actor_loss':    -0.6668, 'alpha_loss':     0.5254, 'eps_e':     1.0000})
Step:   59000, Reward:   343.488 [   0.000], Avg:   188.134 (1.000) <0-00:44:45> ({'r_t':   762.8505, 'eps':     1.0000, 'critic_loss':    20.2462, 'actor_loss':    -0.6455, 'alpha_loss':     0.1885, 'eps_e':     1.0000})
Step:   60000, Reward:   283.233 [   0.000], Avg:   189.693 (1.000) <0-00:45:42> ({'r_t':   660.8127, 'eps':     1.0000, 'critic_loss':    16.5473, 'actor_loss':    -0.5945, 'alpha_loss':    -0.1065, 'eps_e':     1.0000})
Step:   61000, Reward:   303.992 [   0.000], Avg:   191.537 (1.000) <0-00:46:32> ({'r_t':   627.8804, 'eps':     1.0000, 'critic_loss':    17.8981, 'actor_loss':    -0.4520, 'alpha_loss':    -0.2524, 'eps_e':     1.0000})
Step:   62000, Reward:   341.115 [   0.000], Avg:   193.911 (1.000) <0-00:47:20> ({'r_t':   729.7803, 'eps':     1.0000, 'critic_loss':    20.0719, 'actor_loss':    -0.2560, 'alpha_loss':    -0.4494, 'eps_e':     1.0000})
Step:   63000, Reward:   334.705 [   0.000], Avg:   196.111 (1.000) <0-00:48:22> ({'r_t':   619.9886, 'eps':     1.0000, 'critic_loss':    23.3145, 'actor_loss':    -0.1738, 'alpha_loss':    -0.5424, 'eps_e':     1.0000})
Step:   64000, Reward:   328.032 [   0.000], Avg:   198.140 (1.000) <0-00:49:22> ({'r_t':   368.1443, 'eps':     1.0000, 'critic_loss':    23.9795, 'actor_loss':    -0.2129, 'alpha_loss':    -0.7355, 'eps_e':     1.0000})
Step:   65000, Reward:  1240.968 [   0.000], Avg:   213.941 (1.000) <0-00:50:28> ({'r_t':   484.4606, 'eps':     1.0000, 'critic_loss':    25.5388, 'actor_loss':    -0.3842, 'alpha_loss':    -0.7595, 'eps_e':     1.0000})
Step:   66000, Reward:   303.049 [   0.000], Avg:   215.271 (1.000) <0-00:51:08> ({'r_t':  1267.4166, 'eps':     1.0000, 'critic_loss':    33.5211, 'actor_loss':    -0.6406, 'alpha_loss':    -0.1820, 'eps_e':     1.0000})
Step:   67000, Reward:   516.983 [   0.000], Avg:   219.708 (1.000) <0-00:51:53> ({'r_t':  1339.0678, 'eps':     1.0000, 'critic_loss':    44.0003, 'actor_loss':    -0.7468, 'alpha_loss':     0.2982, 'eps_e':     1.0000})
Step:   68000, Reward:   312.191 [   0.000], Avg:   221.048 (1.000) <0-00:52:33> ({'r_t':  1376.0563, 'eps':     1.0000, 'critic_loss':    61.3485, 'actor_loss':    -0.6981, 'alpha_loss':     0.6458, 'eps_e':     1.0000})
Step:   69000, Reward:   265.039 [   0.000], Avg:   221.676 (1.000) <0-00:53:12> ({'r_t':  1389.8302, 'eps':     1.0000, 'critic_loss':    63.9134, 'actor_loss':    -0.8187, 'alpha_loss':     0.8495, 'eps_e':     1.0000})
Step:   70000, Reward:  1051.956 [   0.000], Avg:   233.371 (1.000) <0-00:54:11> ({'r_t':  1311.8801, 'eps':     1.0000, 'critic_loss':    89.1259, 'actor_loss':    -0.8673, 'alpha_loss':     1.0029, 'eps_e':     1.0000})
Step:   71000, Reward:   397.519 [   0.000], Avg:   235.650 (1.000) <0-00:54:53> ({'r_t':  1305.8344, 'eps':     1.0000, 'critic_loss':   101.5565, 'actor_loss':    -0.9923, 'alpha_loss':     1.2252, 'eps_e':     1.0000})
Step:   72000, Reward:   703.020 [   0.000], Avg:   242.053 (1.000) <0-00:55:46> ({'r_t':  1122.2412, 'eps':     1.0000, 'critic_loss':   117.1878, 'actor_loss':    -1.1472, 'alpha_loss':     1.2214, 'eps_e':     1.0000})
Step:   73000, Reward:  1272.497 [   0.000], Avg:   255.978 (1.000) <0-00:56:52> ({'r_t':  1178.8889, 'eps':     1.0000, 'critic_loss':   111.7573, 'actor_loss':    -0.9740, 'alpha_loss':     1.1063, 'eps_e':     1.0000})
Step:   74000, Reward:  1259.589 [   0.000], Avg:   269.359 (1.000) <0-00:57:58> ({'r_t':  1212.0509, 'eps':     1.0000, 'critic_loss':   100.2626, 'actor_loss':    -0.7430, 'alpha_loss':     0.9005, 'eps_e':     1.0000})
Step:   75000, Reward:  1336.434 [   0.000], Avg:   283.400 (1.000) <0-00:59:04> ({'r_t':  1252.3991, 'eps':     1.0000, 'critic_loss':   110.7058, 'actor_loss':    -0.6180, 'alpha_loss':     0.7881, 'eps_e':     1.0000})
Step:   76000, Reward:  1312.865 [   0.000], Avg:   296.769 (1.000) <0-01:00:10> ({'r_t':  1287.8818, 'eps':     1.0000, 'critic_loss':   101.9691, 'actor_loss':    -0.6033, 'alpha_loss':     0.8788, 'eps_e':     1.0000})
Step:   77000, Reward:  1361.744 [   0.000], Avg:   310.423 (1.000) <0-01:01:16> ({'r_t':  1334.3069, 'eps':     1.0000, 'critic_loss':    97.9109, 'actor_loss':    -0.5828, 'alpha_loss':     0.7489, 'eps_e':     1.0000})
Step:   78000, Reward:  1359.713 [   0.000], Avg:   323.705 (1.000) <0-01:02:22> ({'r_t':  1370.2654, 'eps':     1.0000, 'critic_loss':    94.6284, 'actor_loss':    -0.8372, 'alpha_loss':     0.8242, 'eps_e':     1.0000})
Step:   79000, Reward:  1493.928 [   0.000], Avg:   338.333 (1.000) <0-01:03:29> ({'r_t':  1406.2509, 'eps':     1.0000, 'critic_loss':    85.3711, 'actor_loss':    -1.1605, 'alpha_loss':     0.7925, 'eps_e':     1.0000})
Step:   80000, Reward:  1510.359 [   0.000], Avg:   352.802 (1.000) <0-01:04:35> ({'r_t':  1408.4675, 'eps':     1.0000, 'critic_loss':   103.0561, 'actor_loss':    -1.0374, 'alpha_loss':     0.6892, 'eps_e':     1.0000})
Step:   81000, Reward:   585.891 [   0.000], Avg:   355.645 (1.000) <0-01:05:23> ({'r_t':  1455.9388, 'eps':     1.0000, 'critic_loss':    94.1429, 'actor_loss':    -1.0610, 'alpha_loss':     0.6384, 'eps_e':     1.0000})
Step:   82000, Reward:  1419.449 [   0.000], Avg:   368.462 (1.000) <0-01:06:29> ({'r_t':  1362.5872, 'eps':     1.0000, 'critic_loss':    93.4469, 'actor_loss':    -0.7461, 'alpha_loss':     0.5042, 'eps_e':     1.0000})
Step:   83000, Reward:   504.014 [   0.000], Avg:   370.075 (1.000) <0-01:07:14> ({'r_t':  1425.2428, 'eps':     1.0000, 'critic_loss':   103.1421, 'actor_loss':    -0.5440, 'alpha_loss':     0.3796, 'eps_e':     1.0000})
Step:   84000, Reward:  1277.936 [   0.000], Avg:   380.756 (1.000) <0-01:08:18> ({'r_t':  1416.2970, 'eps':     1.0000, 'critic_loss':   105.0884, 'actor_loss':    -0.4158, 'alpha_loss':     0.2826, 'eps_e':     1.0000})
Step:   85000, Reward:  1424.077 [   0.000], Avg:   392.888 (1.000) <0-01:09:24> ({'r_t':  1435.0622, 'eps':     1.0000, 'critic_loss':   105.3260, 'actor_loss':    -0.2939, 'alpha_loss':     0.1873, 'eps_e':     1.0000})
Step:   86000, Reward:  1463.825 [   0.000], Avg:   405.197 (1.000) <0-01:10:30> ({'r_t':  1390.0342, 'eps':     1.0000, 'critic_loss':   105.4630, 'actor_loss':    -0.2249, 'alpha_loss':     0.1824, 'eps_e':     1.0000})
Step:   87000, Reward:  1112.779 [   0.000], Avg:   413.238 (1.000) <0-01:11:28> ({'r_t':  1329.0548, 'eps':     1.0000, 'critic_loss':   109.4228, 'actor_loss':    -0.0833, 'alpha_loss':     0.1108, 'eps_e':     1.0000})
Step:   88000, Reward:  1382.159 [   0.000], Avg:   424.125 (1.000) <0-01:12:34> ({'r_t':  1249.4369, 'eps':     1.0000, 'critic_loss':   111.6199, 'actor_loss':     0.0223, 'alpha_loss':     0.0075, 'eps_e':     1.0000})
Step:   89000, Reward:  1509.799 [   0.000], Avg:   436.188 (1.000) <0-01:13:41> ({'r_t':  1408.5097, 'eps':     1.0000, 'critic_loss':   119.7512, 'actor_loss':     0.1039, 'alpha_loss':    -0.0219, 'eps_e':     1.0000})
Step:   90000, Reward:  1463.959 [   0.000], Avg:   447.482 (1.000) <0-01:14:47> ({'r_t':  1477.5740, 'eps':     1.0000, 'critic_loss':   118.6375, 'actor_loss':     0.1564, 'alpha_loss':    -0.0369, 'eps_e':     1.0000})
Step:   91000, Reward:   303.818 [   0.000], Avg:   445.920 (1.000) <0-01:15:27> ({'r_t':  1433.8750, 'eps':     1.0000, 'critic_loss':   115.8799, 'actor_loss':     0.0980, 'alpha_loss':    -0.0701, 'eps_e':     1.0000})
Step:   92000, Reward:  1511.516 [   0.000], Avg:   457.378 (1.000) <0-01:16:33> ({'r_t':  1480.7955, 'eps':     1.0000, 'critic_loss':   124.1436, 'actor_loss':     0.0470, 'alpha_loss':    -0.1328, 'eps_e':     1.0000})
Step:   93000, Reward:   776.261 [   0.000], Avg:   460.771 (1.000) <0-01:17:22> ({'r_t':  1542.1279, 'eps':     1.0000, 'critic_loss':   126.4265, 'actor_loss':    -0.0892, 'alpha_loss':    -0.1585, 'eps_e':     1.0000})
Step:   94000, Reward:  1108.993 [   0.000], Avg:   467.594 (1.000) <0-01:18:20> ({'r_t':  1535.6409, 'eps':     1.0000, 'critic_loss':   133.7512, 'actor_loss':    -0.1128, 'alpha_loss':    -0.0956, 'eps_e':     1.0000})
Step:   95000, Reward:  1587.959 [   0.000], Avg:   479.265 (1.000) <0-01:19:26> ({'r_t':  1588.0999, 'eps':     1.0000, 'critic_loss':   133.5403, 'actor_loss':    -0.1915, 'alpha_loss':    -0.1156, 'eps_e':     1.0000})
Step:   96000, Reward:  1617.451 [   0.000], Avg:   490.999 (1.000) <0-01:20:32> ({'r_t':  1543.0434, 'eps':     1.0000, 'critic_loss':   139.5089, 'actor_loss':    -0.4866, 'alpha_loss':    -0.1575, 'eps_e':     1.0000})
Step:   97000, Reward:  1535.387 [   0.000], Avg:   501.656 (1.000) <0-01:21:38> ({'r_t':  1578.4501, 'eps':     1.0000, 'critic_loss':   134.9923, 'actor_loss':    -0.5304, 'alpha_loss':    -0.1658, 'eps_e':     1.0000})
Step:   98000, Reward:  1546.626 [   0.000], Avg:   512.211 (1.000) <0-01:22:44> ({'r_t':  1536.6683, 'eps':     1.0000, 'critic_loss':   129.6237, 'actor_loss':    -0.3942, 'alpha_loss':    -0.1573, 'eps_e':     1.0000})
Step:   99000, Reward:  1564.339 [   0.000], Avg:   522.732 (1.000) <0-01:23:50> ({'r_t':  1537.8466, 'eps':     1.0000, 'critic_loss':   121.6891, 'actor_loss':    -0.2340, 'alpha_loss':    -0.1048, 'eps_e':     1.0000})
Step:  100000, Reward:  1605.340 [   0.000], Avg:   533.451 (1.000) <0-01:24:56> ({'r_t':  1472.6290, 'eps':     1.0000, 'critic_loss':   111.4045, 'actor_loss':    -0.1004, 'alpha_loss':    -0.0675, 'eps_e':     1.0000})
Step:  101000, Reward:   522.612 [   0.000], Avg:   533.345 (1.000) <0-01:25:41> ({'r_t':  1522.1092, 'eps':     1.0000, 'critic_loss':   109.6998, 'actor_loss':    -0.1802, 'alpha_loss':     0.0503, 'eps_e':     1.0000})
Step:  102000, Reward:  1560.906 [   0.000], Avg:   543.321 (1.000) <0-01:26:47> ({'r_t':  1471.2880, 'eps':     1.0000, 'critic_loss':   126.7030, 'actor_loss':    -0.2682, 'alpha_loss':     0.1007, 'eps_e':     1.0000})
Step:  103000, Reward:  1562.901 [   0.000], Avg:   553.125 (1.000) <0-01:27:53> ({'r_t':  1492.0955, 'eps':     1.0000, 'critic_loss':   135.9139, 'actor_loss':    -0.2760, 'alpha_loss':     0.0781, 'eps_e':     1.0000})
Step:  104000, Reward:  1589.539 [   0.000], Avg:   562.995 (1.000) <0-01:28:59> ({'r_t':  1550.1775, 'eps':     1.0000, 'critic_loss':   144.9547, 'actor_loss':    -0.2210, 'alpha_loss':    -0.0160, 'eps_e':     1.0000})
Step:  105000, Reward:  1499.594 [   0.000], Avg:   571.831 (1.000) <0-01:30:05> ({'r_t':  1543.2529, 'eps':     1.0000, 'critic_loss':   147.9809, 'actor_loss':    -0.2089, 'alpha_loss':     0.0039, 'eps_e':     1.0000})
Step:  106000, Reward:  1526.505 [   0.000], Avg:   580.753 (1.000) <0-01:31:11> ({'r_t':  1578.5792, 'eps':     1.0000, 'critic_loss':   154.3276, 'actor_loss':    -0.2048, 'alpha_loss':    -0.0309, 'eps_e':     1.0000})
Step:  107000, Reward:   585.960 [   0.000], Avg:   580.802 (1.000) <0-01:31:56> ({'r_t':  1584.4943, 'eps':     1.0000, 'critic_loss':   155.6116, 'actor_loss':    -0.2212, 'alpha_loss':    -0.0037, 'eps_e':     1.0000})
Step:  108000, Reward:  1501.920 [   0.000], Avg:   589.252 (1.000) <0-01:33:02> ({'r_t':  1552.4354, 'eps':     1.0000, 'critic_loss':   146.5076, 'actor_loss':    -0.2694, 'alpha_loss':    -0.0886, 'eps_e':     1.0000})
Step:  109000, Reward:  1732.829 [   0.000], Avg:   599.648 (1.000) <0-01:34:09> ({'r_t':  1570.3384, 'eps':     1.0000, 'critic_loss':   142.4515, 'actor_loss':    -0.2105, 'alpha_loss':     0.0519, 'eps_e':     1.0000})
Step:  110000, Reward:  1650.747 [   0.000], Avg:   609.118 (1.000) <0-01:35:15> ({'r_t':  1595.0223, 'eps':     1.0000, 'critic_loss':   154.4246, 'actor_loss':    -0.0926, 'alpha_loss':     0.0096, 'eps_e':     1.0000})
Step:  111000, Reward:  1688.859 [   0.000], Avg:   618.758 (1.000) <0-01:36:21> ({'r_t':  1591.9865, 'eps':     1.0000, 'critic_loss':   141.7803, 'actor_loss':    -0.0863, 'alpha_loss':    -0.0044, 'eps_e':     1.0000})
Step:  112000, Reward:  1634.244 [   0.000], Avg:   627.745 (1.000) <0-01:37:27> ({'r_t':  1559.2475, 'eps':     1.0000, 'critic_loss':   146.0842, 'actor_loss':    -0.0211, 'alpha_loss':     0.0534, 'eps_e':     1.0000})
Step:  113000, Reward:  1654.177 [   0.000], Avg:   636.749 (1.000) <0-01:38:33> ({'r_t':  1616.9620, 'eps':     1.0000, 'critic_loss':   144.3904, 'actor_loss':    -0.1517, 'alpha_loss':     0.0194, 'eps_e':     1.0000})
Step:  114000, Reward:  1716.351 [   0.000], Avg:   646.136 (1.000) <0-01:39:39> ({'r_t':  1669.5615, 'eps':     1.0000, 'critic_loss':   141.1491, 'actor_loss':    -0.2096, 'alpha_loss':     0.0364, 'eps_e':     1.0000})
Step:  115000, Reward:  1527.648 [   0.000], Avg:   653.736 (1.000) <0-01:40:45> ({'r_t':  1702.6863, 'eps':     1.0000, 'critic_loss':   154.1016, 'actor_loss':    -0.1932, 'alpha_loss':     0.0534, 'eps_e':     1.0000})
Step:  116000, Reward:   721.125 [   0.000], Avg:   654.312 (1.000) <0-01:41:34> ({'r_t':  1577.5306, 'eps':     1.0000, 'critic_loss':   160.0723, 'actor_loss':    -0.1855, 'alpha_loss':    -0.0241, 'eps_e':     1.0000})
Step:  117000, Reward:  1780.890 [   0.000], Avg:   663.859 (1.000) <0-01:42:40> ({'r_t':  1642.8559, 'eps':     1.0000, 'critic_loss':   163.4113, 'actor_loss':    -0.1584, 'alpha_loss':    -0.0069, 'eps_e':     1.0000})
Step:  118000, Reward:  1646.449 [   0.000], Avg:   672.116 (1.000) <0-01:43:46> ({'r_t':  1713.2798, 'eps':     1.0000, 'critic_loss':   162.2615, 'actor_loss':    -0.1912, 'alpha_loss':     0.0567, 'eps_e':     1.0000})
Step:  119000, Reward:  1617.658 [   0.000], Avg:   679.996 (1.000) <0-01:44:52> ({'r_t':  1512.4059, 'eps':     1.0000, 'critic_loss':   167.3839, 'actor_loss':    -0.2379, 'alpha_loss':     0.0915, 'eps_e':     1.0000})
Step:  120000, Reward:   255.333 [   0.000], Avg:   676.486 (1.000) <0-01:45:31> ({'r_t':  1556.0718, 'eps':     1.0000, 'critic_loss':   176.6931, 'actor_loss':    -0.1174, 'alpha_loss':     0.0382, 'eps_e':     1.0000})
Step:  121000, Reward:    13.953 [   0.000], Avg:   671.055 (1.000) <0-01:46:06> ({'r_t':  1622.5137, 'eps':     1.0000, 'critic_loss':   171.9771, 'actor_loss':    -0.0711, 'alpha_loss':    -0.0301, 'eps_e':     1.0000})
Step:  122000, Reward:  1784.969 [   0.000], Avg:   680.112 (1.000) <0-01:47:12> ({'r_t':  1718.0274, 'eps':     1.0000, 'critic_loss':   182.6172, 'actor_loss':    -0.1279, 'alpha_loss':    -0.0468, 'eps_e':     1.0000})
Step:  123000, Reward:  1780.177 [   0.000], Avg:   688.983 (1.000) <0-01:48:18> ({'r_t':  1693.1216, 'eps':     1.0000, 'critic_loss':   172.4498, 'actor_loss':    -0.1544, 'alpha_loss':    -0.0568, 'eps_e':     1.0000})
Step:  124000, Reward:  1688.237 [   0.000], Avg:   696.977 (1.000) <0-01:49:25> ({'r_t':  1644.2482, 'eps':     1.0000, 'critic_loss':   168.1611, 'actor_loss':    -0.2735, 'alpha_loss':    -0.0923, 'eps_e':     1.0000})
Step:  125000, Reward:  1686.823 [   0.000], Avg:   704.833 (1.000) <0-01:50:31> ({'r_t':  1669.3153, 'eps':     1.0000, 'critic_loss':   168.3227, 'actor_loss':    -0.2579, 'alpha_loss':    -0.1385, 'eps_e':     1.0000})
Step:  126000, Reward:  1849.648 [   0.000], Avg:   713.847 (1.000) <0-01:51:37> ({'r_t':  1706.4554, 'eps':     1.0000, 'critic_loss':   159.0681, 'actor_loss':    -0.1074, 'alpha_loss':    -0.1037, 'eps_e':     1.0000})
Step:  127000, Reward:  1761.851 [   0.000], Avg:   722.035 (1.000) <0-01:52:43> ({'r_t':  1693.2649, 'eps':     1.0000, 'critic_loss':   150.2045, 'actor_loss':    -0.0331, 'alpha_loss':    -0.0894, 'eps_e':     1.0000})
Step:  128000, Reward:  1638.839 [   0.000], Avg:   729.142 (1.000) <0-01:53:49> ({'r_t':  1660.0744, 'eps':     1.0000, 'critic_loss':   160.7550, 'actor_loss':    -0.0517, 'alpha_loss':    -0.0500, 'eps_e':     1.0000})
Step:  129000, Reward:  1603.176 [   0.000], Avg:   735.865 (1.000) <0-01:54:55> ({'r_t':  1648.9870, 'eps':     1.0000, 'critic_loss':   179.7486, 'actor_loss':    -0.1260, 'alpha_loss':    -0.1023, 'eps_e':     1.0000})
Step:  130000, Reward:  1650.590 [   0.000], Avg:   742.848 (1.000) <0-01:56:01> ({'r_t':  1591.4637, 'eps':     1.0000, 'critic_loss':   180.3522, 'actor_loss':    -0.1209, 'alpha_loss':    -0.0694, 'eps_e':     1.0000})
Step:  131000, Reward:  1673.854 [   0.000], Avg:   749.901 (1.000) <0-01:57:07> ({'r_t':  1606.9635, 'eps':     1.0000, 'critic_loss':   194.4592, 'actor_loss':    -0.0764, 'alpha_loss':    -0.0338, 'eps_e':     1.0000})
Step:  132000, Reward:  1631.671 [   0.000], Avg:   756.531 (1.000) <0-01:58:13> ({'r_t':  1668.1528, 'eps':     1.0000, 'critic_loss':   191.1710, 'actor_loss':    -0.0630, 'alpha_loss':    -0.0189, 'eps_e':     1.0000})
Step:  133000, Reward:  1729.278 [   0.000], Avg:   763.790 (1.000) <0-01:59:19> ({'r_t':  1664.2123, 'eps':     1.0000, 'critic_loss':   180.2488, 'actor_loss':    -0.0409, 'alpha_loss':     0.0124, 'eps_e':     1.0000})
Step:  134000, Reward:  1707.939 [   0.000], Avg:   770.784 (1.000) <0-02:00:25> ({'r_t':  1640.4945, 'eps':     1.0000, 'critic_loss':   184.4967, 'actor_loss':    -0.0479, 'alpha_loss':     0.0305, 'eps_e':     1.0000})
Step:  135000, Reward:  1577.783 [   0.000], Avg:   776.718 (1.000) <0-02:01:31> ({'r_t':  1653.2164, 'eps':     1.0000, 'critic_loss':   179.5550, 'actor_loss':    -0.0293, 'alpha_loss':     0.0007, 'eps_e':     1.0000})
Step:  136000, Reward:  1772.802 [   0.000], Avg:   783.988 (1.000) <0-02:02:37> ({'r_t':  1662.0282, 'eps':     1.0000, 'critic_loss':   177.3781, 'actor_loss':    -0.0079, 'alpha_loss':    -0.1197, 'eps_e':     1.0000})
Step:  137000, Reward:  1589.624 [   0.000], Avg:   789.826 (1.000) <0-02:03:44> ({'r_t':  1685.5933, 'eps':     1.0000, 'critic_loss':   184.8066, 'actor_loss':    -0.0679, 'alpha_loss':    -0.1151, 'eps_e':     1.0000})
Step:  138000, Reward:  1714.698 [   0.000], Avg:   796.480 (1.000) <0-02:04:50> ({'r_t':  1682.0998, 'eps':     1.0000, 'critic_loss':   190.9610, 'actor_loss':    -0.1491, 'alpha_loss':    -0.0178, 'eps_e':     1.0000})
Step:  139000, Reward:  1724.817 [   0.000], Avg:   803.111 (1.000) <0-02:05:56> ({'r_t':  1714.3601, 'eps':     1.0000, 'critic_loss':   193.1275, 'actor_loss':    -0.1692, 'alpha_loss':     0.0200, 'eps_e':     1.0000})
Step:  140000, Reward:  1677.693 [   0.000], Avg:   809.314 (1.000) <0-02:07:02> ({'r_t':  1674.6115, 'eps':     1.0000, 'critic_loss':   208.8240, 'actor_loss':    -0.1737, 'alpha_loss':     0.0178, 'eps_e':     1.0000})
Step:  141000, Reward:  1780.672 [   0.000], Avg:   816.154 (1.000) <0-02:08:08> ({'r_t':  1749.4233, 'eps':     1.0000, 'critic_loss':   206.3797, 'actor_loss':    -0.1085, 'alpha_loss':    -0.0620, 'eps_e':     1.0000})
Step:  142000, Reward:  1851.616 [   0.000], Avg:   823.395 (1.000) <0-02:09:14> ({'r_t':  1740.5040, 'eps':     1.0000, 'critic_loss':   206.6491, 'actor_loss':    -0.0897, 'alpha_loss':     0.0639, 'eps_e':     1.0000})
Step:  143000, Reward:  1823.589 [   0.000], Avg:   830.341 (1.000) <0-02:10:20> ({'r_t':  1778.2025, 'eps':     1.0000, 'critic_loss':   190.4011, 'actor_loss':    -0.0011, 'alpha_loss':     0.0618, 'eps_e':     1.0000})
Step:  144000, Reward:  1783.712 [   0.000], Avg:   836.916 (1.000) <0-02:11:26> ({'r_t':  1783.9312, 'eps':     1.0000, 'critic_loss':   178.1767, 'actor_loss':    -0.0617, 'alpha_loss':     0.0434, 'eps_e':     1.0000})
Step:  145000, Reward:  1874.508 [   0.000], Avg:   844.023 (1.000) <0-02:12:32> ({'r_t':  1732.5892, 'eps':     1.0000, 'critic_loss':   197.8474, 'actor_loss':    -0.0394, 'alpha_loss':     0.0161, 'eps_e':     1.0000})
Step:  146000, Reward:  1895.730 [   0.000], Avg:   851.177 (1.000) <0-02:13:38> ({'r_t':  1756.3048, 'eps':     1.0000, 'critic_loss':   196.1842, 'actor_loss':    -0.0643, 'alpha_loss':     0.0830, 'eps_e':     1.0000})
Step:  147000, Reward:  1864.639 [   0.000], Avg:   858.025 (1.000) <0-02:14:44> ({'r_t':  1805.9314, 'eps':     1.0000, 'critic_loss':   202.7924, 'actor_loss':    -0.0799, 'alpha_loss':     0.1808, 'eps_e':     1.0000})
Step:  148000, Reward:  1874.959 [   0.000], Avg:   864.850 (1.000) <0-02:15:50> ({'r_t':  1786.4498, 'eps':     1.0000, 'critic_loss':   207.0927, 'actor_loss':    -0.0780, 'alpha_loss':     0.1314, 'eps_e':     1.0000})
Step:  149000, Reward:  1791.607 [   0.000], Avg:   871.028 (1.000) <0-02:16:56> ({'r_t':  1788.3475, 'eps':     1.0000, 'critic_loss':   216.5394, 'actor_loss':    -0.0137, 'alpha_loss':     0.0118, 'eps_e':     1.0000})
Step:  150000, Reward:  1525.391 [   0.000], Avg:   875.362 (1.000) <0-02:18:03> ({'r_t':  1650.1400, 'eps':     1.0000, 'critic_loss':   219.2673, 'actor_loss':     0.0125, 'alpha_loss':     0.0515, 'eps_e':     1.0000})
Step:  151000, Reward:  1872.342 [   0.000], Avg:   881.921 (1.000) <0-02:19:09> ({'r_t':  1732.7937, 'eps':     1.0000, 'critic_loss':   213.7543, 'actor_loss':    -0.1102, 'alpha_loss':     0.0903, 'eps_e':     1.0000})
Step:  152000, Reward:  1667.441 [   0.000], Avg:   887.055 (1.000) <0-02:20:15> ({'r_t':  1723.5944, 'eps':     1.0000, 'critic_loss':   225.2197, 'actor_loss':    -0.2591, 'alpha_loss':     0.1453, 'eps_e':     1.0000})
Step:  153000, Reward:  1769.668 [   0.000], Avg:   892.786 (1.000) <0-02:21:21> ({'r_t':  1654.5009, 'eps':     1.0000, 'critic_loss':   216.7439, 'actor_loss':    -0.3353, 'alpha_loss':     0.0930, 'eps_e':     1.0000})
Step:  154000, Reward:  1809.566 [   0.000], Avg:   898.701 (1.000) <0-02:22:27> ({'r_t':  1774.8030, 'eps':     1.0000, 'critic_loss':   220.1843, 'actor_loss':    -0.2421, 'alpha_loss':     0.0536, 'eps_e':     1.0000})
Step:  155000, Reward:  1852.878 [   0.000], Avg:   904.818 (1.000) <0-02:23:33> ({'r_t':  1819.6416, 'eps':     1.0000, 'critic_loss':   234.1521, 'actor_loss':    -0.2476, 'alpha_loss':    -0.0166, 'eps_e':     1.0000})
Step:  156000, Reward:  1848.318 [   0.000], Avg:   910.827 (1.000) <0-02:24:39> ({'r_t':  1831.8453, 'eps':     1.0000, 'critic_loss':   221.3642, 'actor_loss':    -0.2086, 'alpha_loss':    -0.0633, 'eps_e':     1.0000})
Step:  157000, Reward:  1901.391 [   0.000], Avg:   917.097 (1.000) <0-02:25:45> ({'r_t':  1764.3962, 'eps':     1.0000, 'critic_loss':   214.5490, 'actor_loss':    -0.0884, 'alpha_loss':    -0.0523, 'eps_e':     1.0000})
Step:  158000, Reward:    38.971 [   0.000], Avg:   911.574 (1.000) <0-02:26:21> ({'r_t':  1650.3012, 'eps':     1.0000, 'critic_loss':   219.1577, 'actor_loss':    -0.0252, 'alpha_loss':    -0.0754, 'eps_e':     1.0000})
Step:  159000, Reward:  1903.594 [   0.000], Avg:   917.774 (1.000) <0-02:27:27> ({'r_t':  1588.9426, 'eps':     1.0000, 'critic_loss':   218.4389, 'actor_loss':     0.0158, 'alpha_loss':    -0.1057, 'eps_e':     1.0000})
Step:  160000, Reward:  1777.574 [   0.000], Avg:   923.114 (1.000) <0-02:28:33> ({'r_t':  1629.6922, 'eps':     1.0000, 'critic_loss':   230.5637, 'actor_loss':     0.0211, 'alpha_loss':    -0.0677, 'eps_e':     1.0000})
Step:  161000, Reward:   248.671 [   0.000], Avg:   918.951 (1.000) <0-02:29:10> ({'r_t':  1800.9343, 'eps':     1.0000, 'critic_loss':   234.6356, 'actor_loss':     0.0241, 'alpha_loss':    -0.0872, 'eps_e':     1.0000})
Step:  162000, Reward:  1861.880 [   0.000], Avg:   924.736 (1.000) <0-02:30:16> ({'r_t':  1726.4362, 'eps':     1.0000, 'critic_loss':   265.3937, 'actor_loss':    -0.1007, 'alpha_loss':    -0.1248, 'eps_e':     1.0000})
Step:  163000, Reward:  1810.404 [   0.000], Avg:   930.136 (1.000) <0-02:31:22> ({'r_t':  1806.7087, 'eps':     1.0000, 'critic_loss':   273.6722, 'actor_loss':    -0.0760, 'alpha_loss':    -0.1132, 'eps_e':     1.0000})
Step:  164000, Reward:  1777.654 [   0.000], Avg:   935.273 (1.000) <0-02:32:29> ({'r_t':  1758.2648, 'eps':     1.0000, 'critic_loss':   249.3983, 'actor_loss':    -0.0798, 'alpha_loss':    -0.0816, 'eps_e':     1.0000})
Step:  165000, Reward:  1822.121 [   0.000], Avg:   940.615 (1.000) <0-02:33:35> ({'r_t':  1774.7846, 'eps':     1.0000, 'critic_loss':   253.6380, 'actor_loss':    -0.1417, 'alpha_loss':    -0.0565, 'eps_e':     1.0000})
Step:  166000, Reward:  1829.330 [   0.000], Avg:   945.937 (1.000) <0-02:34:41> ({'r_t':  1775.6965, 'eps':     1.0000, 'critic_loss':   252.5298, 'actor_loss':    -0.0984, 'alpha_loss':     0.0210, 'eps_e':     1.0000})
Step:  167000, Reward:  1692.310 [   0.000], Avg:   950.380 (1.000) <0-02:35:47> ({'r_t':  1798.9039, 'eps':     1.0000, 'critic_loss':   242.5273, 'actor_loss':    -0.0080, 'alpha_loss':    -0.0207, 'eps_e':     1.0000})
Step:  168000, Reward:  1825.173 [   0.000], Avg:   955.556 (1.000) <0-02:36:53> ({'r_t':  1771.1092, 'eps':     1.0000, 'critic_loss':   216.2981, 'actor_loss':    -0.0018, 'alpha_loss':    -0.1309, 'eps_e':     1.0000})
Step:  169000, Reward:  1836.851 [   0.000], Avg:   960.740 (1.000) <0-02:37:59> ({'r_t':  1844.0553, 'eps':     1.0000, 'critic_loss':   214.4681, 'actor_loss':     0.0357, 'alpha_loss':     0.0598, 'eps_e':     1.0000})
Step:  170000, Reward:  1869.154 [   0.000], Avg:   966.052 (1.000) <0-02:39:05> ({'r_t':  1793.1636, 'eps':     1.0000, 'critic_loss':   216.0449, 'actor_loss':    -0.0570, 'alpha_loss':     0.1514, 'eps_e':     1.0000})
Step:  171000, Reward:  1880.209 [   0.000], Avg:   971.367 (1.000) <0-02:40:11> ({'r_t':  1830.3506, 'eps':     1.0000, 'critic_loss':   235.0116, 'actor_loss':    -0.0343, 'alpha_loss':     0.1135, 'eps_e':     1.0000})
Step:  172000, Reward:  1844.944 [   0.000], Avg:   976.417 (1.000) <0-02:41:17> ({'r_t':  1819.0069, 'eps':     1.0000, 'critic_loss':   226.2378, 'actor_loss':     0.0019, 'alpha_loss':     0.1224, 'eps_e':     1.0000})
Step:  173000, Reward:  1823.257 [   0.000], Avg:   981.284 (1.000) <0-02:42:23> ({'r_t':  1834.8962, 'eps':     1.0000, 'critic_loss':   222.9883, 'actor_loss':     0.0026, 'alpha_loss':     0.1330, 'eps_e':     1.0000})
Step:  174000, Reward:  1836.878 [   0.000], Avg:   986.173 (1.000) <0-02:43:29> ({'r_t':  1778.7312, 'eps':     1.0000, 'critic_loss':   209.0751, 'actor_loss':     0.0755, 'alpha_loss':     0.1085, 'eps_e':     1.0000})
Step:  175000, Reward:  1859.348 [   0.000], Avg:   991.134 (1.000) <0-02:44:35> ({'r_t':  1777.5724, 'eps':     1.0000, 'critic_loss':   212.2681, 'actor_loss':     0.1653, 'alpha_loss':    -0.0103, 'eps_e':     1.0000})
Step:  176000, Reward:  1814.760 [   0.000], Avg:   995.787 (1.000) <0-02:45:41> ({'r_t':  1711.0985, 'eps':     1.0000, 'critic_loss':   225.0877, 'actor_loss':     0.1243, 'alpha_loss':    -0.0987, 'eps_e':     1.0000})
Step:  177000, Reward:  1757.576 [   0.000], Avg:  1000.067 (1.000) <0-02:46:48> ({'r_t':  1745.1612, 'eps':     1.0000, 'critic_loss':   242.3089, 'actor_loss':     0.1343, 'alpha_loss':    -0.0559, 'eps_e':     1.0000})
Step:  178000, Reward:  1827.493 [   0.000], Avg:  1004.689 (1.000) <0-02:47:54> ({'r_t':  1793.0703, 'eps':     1.0000, 'critic_loss':   240.4663, 'actor_loss':     0.1042, 'alpha_loss':    -0.0746, 'eps_e':     1.0000})
Step:  179000, Reward:   289.339 [   0.000], Avg:  1000.715 (1.000) <0-02:48:32> ({'r_t':  1736.7928, 'eps':     1.0000, 'critic_loss':   236.9538, 'actor_loss':     0.0588, 'alpha_loss':    -0.0302, 'eps_e':     1.0000})
Step:  180000, Reward:  1841.501 [   0.000], Avg:  1005.360 (1.000) <0-02:49:38> ({'r_t':  1784.6760, 'eps':     1.0000, 'critic_loss':   263.6730, 'actor_loss':    -0.0336, 'alpha_loss':    -0.0325, 'eps_e':     1.0000})
Step:  181000, Reward:  1881.903 [   0.000], Avg:  1010.177 (1.000) <0-02:50:44> ({'r_t':  1796.7080, 'eps':     1.0000, 'critic_loss':   272.6663, 'actor_loss':    -0.0502, 'alpha_loss':    -0.0908, 'eps_e':     1.0000})
Step:  182000, Reward:  1831.694 [   0.000], Avg:  1014.666 (1.000) <0-02:51:50> ({'r_t':  1811.0664, 'eps':     1.0000, 'critic_loss':   239.6858, 'actor_loss':    -0.0526, 'alpha_loss':    -0.0527, 'eps_e':     1.0000})
Step:  183000, Reward:  1762.523 [   0.000], Avg:  1018.730 (1.000) <0-02:52:56> ({'r_t':  1711.8175, 'eps':     1.0000, 'critic_loss':   236.0264, 'actor_loss':    -0.0715, 'alpha_loss':    -0.0353, 'eps_e':     1.0000})
Step:  184000, Reward:  1579.613 [   0.000], Avg:  1021.762 (1.000) <0-02:54:02> ({'r_t':  1723.1739, 'eps':     1.0000, 'critic_loss':   242.9618, 'actor_loss':     0.0349, 'alpha_loss':     0.0493, 'eps_e':     1.0000})
Step:  185000, Reward:  1827.356 [   0.000], Avg:  1026.093 (1.000) <0-02:55:08> ({'r_t':  1767.4981, 'eps':     1.0000, 'critic_loss':   261.4167, 'actor_loss':    -0.0076, 'alpha_loss':    -0.0345, 'eps_e':     1.0000})
Step:  186000, Reward:  1652.498 [   0.000], Avg:  1029.443 (1.000) <0-02:56:14> ({'r_t':  1659.4104, 'eps':     1.0000, 'critic_loss':   220.8156, 'actor_loss':     0.0167, 'alpha_loss':     0.0811, 'eps_e':     1.0000})
Step:  187000, Reward:  1889.191 [   0.000], Avg:  1034.016 (1.000) <0-02:57:20> ({'r_t':  1781.8047, 'eps':     1.0000, 'critic_loss':   261.6460, 'actor_loss':     0.0514, 'alpha_loss':     0.0908, 'eps_e':     1.0000})
Step:  188000, Reward:  1813.060 [   0.000], Avg:  1038.138 (1.000) <0-02:58:26> ({'r_t':  1820.1703, 'eps':     1.0000, 'critic_loss':   268.9466, 'actor_loss':    -0.0453, 'alpha_loss':     0.0188, 'eps_e':     1.0000})
Step:  189000, Reward:  1888.320 [   0.000], Avg:  1042.613 (1.000) <0-02:59:32> ({'r_t':  1856.9464, 'eps':     1.0000, 'critic_loss':   272.1455, 'actor_loss':    -0.1384, 'alpha_loss':     0.0502, 'eps_e':     1.0000})
Step:  190000, Reward:  1837.650 [   0.000], Avg:  1046.775 (1.000) <0-03:00:38> ({'r_t':  1819.6997, 'eps':     1.0000, 'critic_loss':   266.0834, 'actor_loss':    -0.1264, 'alpha_loss':     0.0098, 'eps_e':     1.0000})
Step:  191000, Reward:  1964.118 [   0.000], Avg:  1051.553 (1.000) <0-03:01:44> ({'r_t':  1877.7468, 'eps':     1.0000, 'critic_loss':   263.6839, 'actor_loss':    -0.0804, 'alpha_loss':    -0.0532, 'eps_e':     1.0000})
Step:  192000, Reward:  1877.686 [   0.000], Avg:  1055.833 (1.000) <0-03:02:51> ({'r_t':  1792.2732, 'eps':     1.0000, 'critic_loss':   267.5599, 'actor_loss':    -0.0907, 'alpha_loss':    -0.0959, 'eps_e':     1.0000})
Step:  193000, Reward:  1844.236 [   0.000], Avg:  1059.897 (1.000) <0-03:03:57> ({'r_t':  1843.5197, 'eps':     1.0000, 'critic_loss':   257.4165, 'actor_loss':    -0.0639, 'alpha_loss':    -0.0963, 'eps_e':     1.0000})
Step:  194000, Reward:  1930.432 [   0.000], Avg:  1064.362 (1.000) <0-03:05:03> ({'r_t':  1842.4042, 'eps':     1.0000, 'critic_loss':   240.0382, 'actor_loss':     0.0410, 'alpha_loss':    -0.0599, 'eps_e':     1.0000})
Step:  195000, Reward:  1859.161 [   0.000], Avg:  1068.417 (1.000) <0-03:06:09> ({'r_t':  1827.4846, 'eps':     1.0000, 'critic_loss':   239.1202, 'actor_loss':    -0.0097, 'alpha_loss':    -0.1110, 'eps_e':     1.0000})
Step:  196000, Reward:  1826.906 [   0.000], Avg:  1072.267 (1.000) <0-03:07:15> ({'r_t':  1830.7519, 'eps':     1.0000, 'critic_loss':   239.6611, 'actor_loss':    -0.0177, 'alpha_loss':    -0.0654, 'eps_e':     1.0000})
Step:  197000, Reward:  1916.676 [   0.000], Avg:  1076.532 (1.000) <0-03:08:21> ({'r_t':  1806.7534, 'eps':     1.0000, 'critic_loss':   244.5844, 'actor_loss':    -0.0254, 'alpha_loss':    -0.0797, 'eps_e':     1.0000})
Step:  198000, Reward:  1900.170 [   0.000], Avg:  1080.671 (1.000) <0-03:09:27> ({'r_t':  1792.9048, 'eps':     1.0000, 'critic_loss':   228.2161, 'actor_loss':    -0.0573, 'alpha_loss':    -0.0389, 'eps_e':     1.0000})
Step:  199000, Reward:  1889.085 [   0.000], Avg:  1084.713 (1.000) <0-03:10:33> ({'r_t':  1764.7725, 'eps':     1.0000, 'critic_loss':   231.4971, 'actor_loss':    -0.0018, 'alpha_loss':    -0.0100, 'eps_e':     1.0000})
Step:  200000, Reward:  1748.389 [   0.000], Avg:  1088.014 (1.000) <0-03:11:39> ({'r_t':  1624.1243, 'eps':     1.0000, 'critic_loss':   251.9477, 'actor_loss':    -0.0536, 'alpha_loss':    -0.0265, 'eps_e':     1.0000})
